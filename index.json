[{"content":"\n\nLet's see how it plays out.\n","cover":"","link":"hello-world.html","preview":"\u003cp\u003eMigrating my blog entries to \u003ca href=\"http://www.chole.io\"\u003eInk\u003c/a\u003e\u003c/p\u003e\n","title":"Hello World"},{"content":"\n昨晚[太多伤感](/2012-summary.html)，没能写下新年的计划，现在补上。\n\n1.   工作方面，新年有了新的不确定性。Lustre进内核一事进展缓慢，不过事情总是两面性的，这让我有了充分的时间学习Lustre代码。flashcache的优化做起来很有意思，我会继续做下去，应该也会有不错的效果。今年应该也会在PLFS上做一些事情。2013会是有意思的一年。\n2.   失去了父亲的伤痛会继续陪伴我一段时间。母亲总说父亲的经历足以写一本书。我无法写书，但为父亲留下一篇文字还是可以的，恩，必须的。\n3.   在成都买房，办婚礼，蜜月。2012年领证只是一个开始。2013，我要继续我的爱情之旅。\n4.   学习日语。2012的日语学习计划无疾而终，今年带上老婆一起，希望她可以鞭策我坚持不懈:)\n5.   学习Go语言。这是我一直想了解的编程语言，新的语言或许能给我带来新的机会。\n6.   继续带老婆打网球。老婆工作繁忙，我应该带着她多锻炼。\n7.   爱老婆，做一个有担当的男人。\n","cover":"","link":"2013-new-start.html","preview":"\u003cp\u003e想不到,这会是我长久以来的最后一篇.\u003c/p\u003e\n","title":"2013, 新的起点"},{"content":"\nTime is flying, leaving me behind.\n\n\n我甚至无法静下心来回顾过去的一年。可是我怎么能，怎么会，忘掉这一年。\n这一年，结束了我的[爱情长跑](/images/结婚啦.jpg)。虽然婚礼和蜜月还没有成行，但我知道，会来的。\n\n这一年，有幸参加了[顶级的Linux内核文件系统](2012-lsf-day1.html)和[内存管理峰会](2012-lsf-day2.html)。我不知道这一行对EMC到底有多大帮助，但我知道，与我，这很重要。\n\n这一年，去了向往已久的[九寨沟](/images/九寨沟.jpg)。这是和老婆的年度旅行计划，我不会落下。\n\n这一年，永远地破灭了[带父亲到北京转转的希望](/何谓情亲.html).\n\nI know, life is never easy.\n\nI know, I have to move on.\n\nBut what is love, what is life?\n\nI _don't_ know.\n","cover":"","link":"2012-summary.html","preview":"\u003cp\u003e又一年.\u003c/p\u003e\n","title":"2012, 这一年"},{"content":"\n今天看到一句话。\n\n\n**越是脆弱的时候，越要让自己浑身充满正能量。**\n\n\n或许我现在还做不到，但我知道自己能做到。迟早。\n\n\u003cimg data-src=\"/images/life-begins-at-the-end-of-your.png\" alt=\"comfort zone\" width=\"70%\" hight=\"70%\" \u003e \u003c/img\u003e\n","cover":"","link":"正能量.html","preview":"\u003cp\u003e越是脆弱的时候，越要让自己浑身充满正能量。\u003c/p\u003e\n","title":"正能量"},{"content":"\nOur team met a problem of the \"infamous\" ext3 slowless on fsync() calls. We solved it rather easily by switching to ext4. But one might ask, WTF is going on with ext3 fsync() performance? And why simply switching to ext4 solves it at all?\n\nI googled some time but found no obvious explanations nor documents about why ext4 outperforms ext3 in fsync-workloads. So I had to do it RTFC way.\n\nThe phenomenon is obvious. Given a workload that thread A is sequentially extending a file with large chunk of data, and another thread B is doing periodical fsync() calls, the fsync() call is much slower on ext3 than on ext4. ext3 fsync() tries to write back pages that is dirtied by thread A, and while it writes back, more pages are dirtied by thread A and need to be written back. This creates quite large latency for fsync() on ext3.\n\nOTOH, ext4 (with default options) doesn't have such problem.\n\n# But WHY?\n\nWe know that ext3 and ext4 share similar design principles but they are in fact two different file systems. The secret lies in their backing journal implementation and one key feature that comes with ext4, delayed allocation.\n\nAs we know, ext4 is built upon jbd2 which is a successor of ext3's building block, jbd. While jbd2 inherits a lot of designs from jbd, one thing that is changed is how data=ordered mode implemented. data=ordered is an option about how ext3/4 manages data/metadata ordering. From Documentation/filesystems/ext4.txt:\n\n```\n* ordered mode\nIn data=ordered mode, ext4 only officially journals metadata, but it logically\ngroups metadata information related to data changes with the data blocks into a\nsingle unit called a transaction.  When it's time to write the new metadata\nout to disk, the associated data blocks are written first.  In general,\nthis mode performs slightly slower than writeback but significantly faster than journal mode.\n```\n\next3/4 both implements this data=ordered mode and set it as default. However, there is a small difference between how it is implemented in jbd and jbd2.\n\nIn jbd/jbd2, when a transaction is being committed, they call journal_submit_data_buffers() to writeback dirty data associated with current transaction.\n\nIn jbd's journal_submit_data_buffers(), it loops agains commit_transaction-\u003et_sync_datalist and relies on jbd buffer head to ensure that all data has been written back.\n\nIn jbd2's journal_submit_data_buffers(), it implements data=ordered via inodes instead of jbd buffer heads. All inodes touched by the committing transaction is tracked in commit_transaction-\u003et_inode_list and jbd2 just loops to write back each of them. There is also a small trick, jbd2 uses writepage instead of writepages to write back each inode mapping. The reason behind this is, that ext4's da_writepages will do block allocation, while writepage only writes back allocated blocks.\n\nSo, see the tricks? With ext4 data=ordered, fsync() in thread B will only write back data blocks that are already allocated. And with ext4's delayed allocation, most pages dirtied by thread A are not allocated with blocks so won't be written back by jbd2. While for pages dirtied by thread B, they are written back via da_writepages in ext4_sync_file() that calls filemap_write_and_wait_range().\n\nSo this is really tricky, because even for ext4, it only works for data=ordered mode and delayed allocation enabled. Also if thread A is not extending the file but rather over writing, ext4 is close to ext3. :)\n\nThat's all.\n","cover":"","link":"ext-fsync.html","preview":"\u003cp\u003eAn in-depth look at design difference resulting performance gap between ext3 and ext4 filesystems.\u003c/p\u003e\n","title":"ext3/4 and fsync"},{"content":"\n## 1. THE WORLD IS YOUR/ONE'S OYSTER\n\n**The Merry Wives of Windsor**  \n*Act II, Scene II*\n\n\u003e Falstaff: I will not lend thee a penny.  \n\u003e Pistol: Why, then, **the world's mine oyster**, Which I with sword will open.\n\nMeaning: The world is yours. You can take whatever you make out of it.\n\n## 2. ALL THAT GLITTERS IS NOT GOLD\n\n**The Merchant of Venice**  \n*Act II - Scene VII - Prince of Morocco*\n\n\u003e **All that glisters is not gold**;  \n\u003e Often have you heard that told:  \n\u003e Many a man his life hath sold  \n\u003e But my outside to behold:  \n\u003e Gilded tombs do worms enfold.  \n\u003e Had you been as wise as bold,  \n\u003e Young in limbs, in judgement old  \n\u003e Your answer had not been inscroll'd  \n\u003e Fare you well, your suit is cold.\n\n## 3. BREAK THE ICE\n\n**The Taming of the Shrew**  \n* ACT I. SCENE II. Padua. Before HORTENSIO'S house.*\n\n\u003e TRANIO.  \n\u003e If it be so, sir, that you are the man  \n\u003e Must stead us all, and me amongst the rest;  \n\u003e And if you **break the ice**, and do this feat,  \n\u003e Achieve the elder, set the younger free  \n\u003e For our access, whose hap shall be to have her  \n\u003e Will not so graceless be to be ingrate.\n\n## 4. TOO MUCH OF A GOOD THING\n\n**As You Like It**  \n*Act IV, Scene 1 The forest*\n\n\u003e Rosalind. Are you not good?  \n\u003e Orlando. I hope so.  \n\u003e Rosalind. Why then, can one desire **too much of a good thing**? Come,  \n\u003e sister, you shall be the priest, and marry us. Give me your hand,  \n\u003e Orlando. What do you say, sister?  \n\u003e Orlando. Pray thee, marry us.  \n\u003e Celia. I cannot say the words.  \n\u003e Rosalind. You must begin 'Will you, Orlando'  \n\u003e Celia. Go to. Will you, Orlando, have to wife this Rosalind?  \n\u003e Orlando. I will.\n\n## 5. TO THINE OWN SELF BE TRUE\n\n**Hamlet**  \n*Act 1. Scene III*\n\n\u003e LORD POLONIUS  \n\u003e Yet here, Laertes! aboard, aboard, for shame!  \n\u003e The wind sits in the shoulder of your sail,  \n\u003e And you are stay'd for. There; my blessing with thee!  \n\u003e And these few precepts in thy memory  \n\u003e See thou character. Give thy thoughts no tongue,  \n\u003e Nor any unproportioned thought his act.  \n\u003e Be thou familiar, but by no means vulgar.  \n\u003e Those friends thou hast, and their adoption tried,  \n\u003e Grapple them to thy soul with hoops of steel;  \n\u003e But do not dull thy palm with entertainment  \n\u003e Of each new-hatch'd, unfledged comrade. Beware  \n\u003e Of entrance to a quarrel, but being in,  \n\u003e Bear't that the opposed may beware of thee.  \n\u003e Give every man thy ear, but few thy voice;  \n\u003e Take each man's censure, but reserve thy judgment.  \n\u003e Costly thy habit as thy purse can buy,  \n\u003e But not express'd in fancy; rich, not gaudy;  \n\u003e For the apparel oft proclaims the man,  \n\u003e And they in France of the best rank and station  \n\u003e Are of a most select and generous chief in that.  \n\u003e Neither a borrower nor a lender be;  \n\u003e For loan oft loses both itself and friend,  \n\u003e And borrowing dulls the edge of husbandry.  \n\u003e This above all: **to thine ownself be true**,  \n\u003e And it must follow, as the night the day,  \n\u003e Thou canst not then be false to any man.  \n\u003e Farewell: my blessing season this in thee!  \n","cover":"","link":"quotes-shakespeare.html","preview":"","title":"Quotes Shakespeare"},{"content":"\n## Flash Media\n\nThe second day of LSF/MM summit started with flash media led by Steven Sprouse from SanDisk. He started with an introduction of lifetime terabyte writes, which is defined as:\n```\n         physical capacity * write endurance\nLTW =   -------------------------------------\n            write amplification\n```\nPhysical capacity is increasing but write endurance is decreasing as write cycle increases (every write cycle hurts NAND so that it stores data for shorter amount of time). Write amplification is affected by many factors, like block size, provisioning, trim etc.\n\nSprouse mentioned that some SSD vendors are starting to use hybrid SLC/MLC where SLC is used for frequent journal write and MLC for data blocks. Therefore the request for SSD to ask for information to differentiate metadata write and data write has been proposed, with tagging information, flash can better decide where to storage the data.\n\nAnother point made by Sprouse is the definition of \"random write\". Different hardware has different capability of handling random write. For flash, anything smaller than erase block is random write. However, erase block size is changing. It was 64KB back in 2004 but now most are 1MB. So it is really necessary that flash vendors expose such information to OS developers.\n\nTo help flash to get better NAND geometry, possible ways that flash vendor and OS developers can cooperate are:\n\n1.   OS tells flash what data may be dropped at the same time, so that flash can put these data in the same erase block. One example given by Ted is rpm/deb package files. They are likely to vanish at the same time during upgrade.\n2.   Flash vendor reports some geometry information to upper layers, like block size, page size, stripe size, etc.\n3.   Provide some tagging mechanisms so that userspace/fs can tag different data types, e.g., metadata and data, hot data and code data, etc.\n4.   filesystems help on cleaning up (trim).\n\nIt is suggested that flash vendors make a list of information that they are willing to provide and OS developers can look at it and decide what can be useful. However, even if there are standard ways to query these information, vendors are not forced to fill them in correctly.\n\n## Flash Cache in the Operating System\n\nThe discussion mainly happened around integrating bcache. Flashcache is implemented by Facebook and based on device-mapper, which bcache is implemented by Google and performs better than flashcache. However, bcache need so many information dropped/hidden by DM that it bypasses DM completely. To integrate bcache with DM, there would be a large amount of changes to DM, and some changes to block layer as well. The discussion didn't result in any real conclusion though.\n\n## High IOPS and SCSI/Block\n\nRoland Dreier introduces two current modes of writing block drivers: register its own make_request, and using bolck layer make_request(). The former is too low level that it bypasses many useful block layer functions, while the latter is slow because of heavy lock contention. Jen Axboe proposed his multi-queue patches that implements per-CPU queue coupled with lightweight elevator. He promised to get these patches soon and it will help solve the performance problem.\n\nAnother issue discussed is Dell's vision of accessing PCIe flash devices. Currently PCIe flash devices still provide block interfaces, but they are hoping to change to use memory interfaces to get better performance. However, it is pointed out that memory interface doesn't do software error recovery. Any error reported by device is fatal failure so devices have to all error handling and only report error as the last resort.\n\n## LBA Hinting and New Storage Commands\n\nFrederick Knight led the discussion of handling shingle drives. Shingle drives can largely increase disk density but require OS to write in band. There are three options:\n\n1.   transparent to OS\n2.   banding: let the host manage geometry and expose new SCSI commands for handling bands\n3.   transparent with Hints: make it look like a normal disks but develop new SCSI commands to hint both ways between device and host what the data is and device characteristics are to try to optimize data placement\n\nThe second option is dropped by attendees immediately. And the first option looks more like current SSD's situation and the third option is the same situation that flash vendors are pursuing.\n\n## Storage Manager\n\nLukas Czerner led the session to give an update of his command line storage manager. It mainly aims to be a generic storage manager and reduce the complexity of manage different storage devices and file systems. However, as underlying storage device/filesystems may provide different type-dependent options, the new storage manager reduce complexity iff users don't need those misc options.\n\n## WRITE_SAME and UNMAP, FSTRIM\n\nThe session started with some complaint about current trim command. In the ATA TRIM command, there are only two bytes used for trim range, meaning the range can be at most 64K sectors, which is 32MB for each TRIM operation. Another problem is current block layer only allows for continuous trim range. As TRIM is non-queue, the overhead goes up a lot when there are a lot of distinct ranges to trim. Christoph Hellwig had some PoC to demonstrate multi-range trim in XFS and it showed only ~1% overhead compared with no trim case.\n\nBesides trim, scatter/gatter SCSI commands have the same multi-range problem. There are two options to implement multi-range command in block layer, allowing single BIO to carry multiple ranges, and use a linked BIOs for the range. After discussion, the latter is adopted.\n\n## NFS server issues\n\nBruce Fields led the session with current status of knfsd with regard to features like change attributes, delegation/oplocks, share locks, delete-file recovery/server-side sillyrename and lock recovery.\n\nDuring the discussion, people asked about pNFS and Boaz made a point that kernel pNFS server may not be happening because there is no developer interest in making it happen.\n\n\u003cimg data-src=\"/images/lsf2012-group.jpg\" width=\"90%\" hight=\"90%\" alt=\"Group Photo\"\u003e\u003c/img\u003e\n","cover":"","link":"2012-lsf-day2.html","preview":"\u003cp\u003eSummary of 2012 \u003ca href=\"https://events.linuxfoundation.org/events/lsfmm-summit\"\u003eLinux kernel LSF/MM summit\u003c/a\u003e, day 2.\u003c/p\u003e\n","title":"2012 LSF/MM Summit Summary - Day 2"},{"content":"\nEarlier last month (April 1 and 2), I was in San Francisco to attend 2012 [Linux Storage and Filesystem Summit](https://events.linuxfoundation.org/events/lsfmm-summit). It was a great experience for me because I am a great fan of many of these kernel maintainers who have in-depth understanding of file systems and storage, and sitting under the same roof, discussing cutting edge technology topics, is just what I've been dreaming of for many years.\n\nOK, enough stupid wording. Here is my summary for this event.\n\nThe LSF/MM summit is a small by-invitation summit which focuses on collaboration and implementation. I was very lucky to be invited because of the work that I am doing in EMC, pushing Lustre client into mainline kernel. Also it is worth mentioning that EMC is silver sponsor for the event.\n\nThe LSF/MM summit is a two-day event, and consists of three tracks (IO, FS and MM). The complete schedule can be found [here](http://tinyurl.com/lsfmm). I stayed in the filesystem track all the time so my summary will be mainly about discussions in the filesystem track. For discussions on IO and MM tracks, they can be found [here](http://lwn.net/Articles/490114/) and [here](http://lwn.net/Articles/490501/).\n\n---\n## Runtime filesystem consistency check\n\nIt is a [FAST paper](http://www.eecg.toronto.edu/~ashvin/publications/recon-fs-consistency-runtime.pdf) written by Ashvin Goel and others from the University of Toronto. The main idea is to record some consistency invariants and check them between the filesystem and the block layer, so that errors can be found earlier at transaction commit point. The consistency invariants are predefined and there are 33 for ext3 in Recon, the PoC of runtime filesystem checker they built. A more detailed introduction of Recon can be found [here](http://lwn.net/Articles/490291/).\n\n## Writeback\n\nWu Fengguang started writeback discussion with his work on improving the writeback situation. Then he concluded his work on IO-less throttling, where the main intentions is to minimize seeks, get less lock contention and cache bouncing, lower latency, with impressive performance gains, minor regressions and lots of algorithm complexity.\n\nFor direct reclaim, pageout work has been moved from direct reclaim to flusher threads. It also focuses dirty reclaim waits on dirtier tasks for the benefit of interactive performance. Dirty pages in the end of LRU are still a problem because scanning for them wastes lots of CPU. The he suggested adding a new LRU list just for tracking dirty page, and it requires a new page flag.\n\nMemory control groups have its problem with dirty limit mainly because there is only a global dirty limit, and flusher fairness is beyond control. There are only coarse options available such as limiting the number of operations that can be performed on a per-inode basis or limiting the amount of IO that can be submitted.\n\nThe discussion then moved to buffer write blkcg IO control. Current blkcg IO control is useless with regard to buffer write, because blkcg throttles at summit_io(), where there is mostly no context of the writer. Fengguang made a suggestion and RFC patchsets to implement buffer write IO control in balance_dirty_pages. However Tejun Heo argued that blkcg should do its work in block layer, instead of messing up with mm layer. Also there are comments that the algorithm of balance_dirty_pages() is already very complex, doing IO controlling there will make it even more difficult to understand. The dis-agreement has been there for a long time and it couldn't reach conclusion soon so people askes the discussion to continue in MM track and it later moves on [on the mailing list](https://lkml.org/lkml/2012/4/3/314).\n\n## Writeback and Stable Pages\n\nThe same topic [was discussed](http://lwn.net/Articles/442355/) in last year's LSF and the conclusion was to let writer wait when it wants to write a page that is under writeback. However Ted Ts'o reported [ext4 long latency](http://lwn.net/Articles/486311/) when Google started to use the code. In brief, waiting page writeback (to get stable pages) can lead to large process latency. And it is not necessary for every system. Stable pages are only required for some systems where things like checksums calculated on the page require that the page be unchanged when it actually gets written.\n\nSage Weil and Boaz Harrosh made three options to handle the situation:\n\n1.   re-issue pages that are changed during IO;\n2.   wait on writeback for every page (current implementation);\n3.   Do a COW on the page under writeback when it is written to.\n\nThe first option was dropped instantly because it confuses storage that need stable page and is purely overhead for storage that doesn't need it.\n\nThe third option was discussed on but the overhead of COW is unknown and there are some corner cases that need to be addressed like what to do if file is truncated after COW page is created. So the first step as suggested is to introduce some APIs to let storage tell filesystem if it needs stable page, and let filesystem tell storage if storage is supported. Then for cases where stable pages are unnecessary like Google's use, file system doesn't need to do anything to send stable pages. As for stable page support, some reporting method should be added to writeback code path to find out what workload are being affected and what those affects are. Then someone can propose on how to implement the COW solution and address all the corner cases.\n\n## Copy Offload\n\nNetApp's Frederick Knight led copy offload session. The idea of copy offload is to allow SCSI devices to copy ranges of blocks without involving the host operating system. Copy offload has been in SCSI standard since SCSI-1 days. EXTENDED COPY (XCOPY) uses two descriptors for the source and destination and a range of blocks. It can be implemented in either push model (source sends the blocks to the target) or pull model (target pulls from source).\n\nTOKEN based copy is far more complex. Each token has a ROD (Representation of Data) that allows arrays to give an identifier for what may be a snapshot. A token represents a device and a range of sectors that the device guarantees to be stable. However, if the device doesn't support snapshotting and the region gets overwritten for any reason, the token can be declined by storage. It means that storage users have no idea of the lifetime of a token, and every time a token goes invalid, they need to either renew the token or do real data transfer.\n\nToken based copy is somewhat similar to NFS's [server side copy (NFSv4.2 draft)](http://tools.ietf.org/html/draft-lentini-nfsv4-server-side-copy-06). And it is suggested that token format need to be standardized to possibly allow copy offload from SCSI disk to CIFS/NFS volume.\n\n# Kernel AIO/DIO Interfaces\n\nThe first session in the afternoon was led by Dave Kleikamp who is trying to modify kernel AIO/DIO APIs to provide in-kernel interfaces. He changed iov_iter to make it handle both iovec (from userspace) and bio_vec (from kernel space). He modified loopback device to let it send AIO and therefore avoid caching in underlying filesystem. And people suggested that swap-over-NFS can be adapted to use the same API.\n\n# RAID engine Unification\n\nBoaz implemented a generic RAID engine for pNFS object layout driver. Since the code is simple and efficient, he wants to push its usage and unify kernel RAID implementations. Currently besides Boaz's RAID implementation, there are two other RAID implementations, MD and btrfs. Boaz said that his implementation is more complete and support RAID stacking without extra data copy.\n\nHowever, it seems the benefit is not so obvious and people are hesitating to adopt it because current code works just good. Chris Mason suggested Boaz to start with MD because MD is much simpler than btrfs. If that works well, he can continue to change btrfs to use the new RAID engine.\n\n# xfstests\n\nWith many years of advocating, xfstests has somehow become the most used regression test suit for not just xfs, but also ext4 and btrfs. There are ~280 test cases and around 100 of them are filesystem independent. However, one nightmare is that all test files are numbered instead of properly named. So anyone who wants to use it need to read the test case and find out what it actually does. Also it need to be reorganized so that similar functions are grouped in a directory instead of lying flat like right now.\n\nSo much for the first day. Here are some pictures of attendees taken by [Chuck Level](http://www.facebook.com/media/set/?set=a.3273446167813.139335.1617193264\u0026type=3)\n\n\u003cimg data-src=\"/images/lsf-2012-speakers.png\" hight=\"90%\" width=\"90%\" alt=\"speakers\"\u003e\u003c/img\u003e\n","cover":"","link":"2012-lsf-day1.html","preview":"\u003cp\u003eSummary of 2012 \u003ca href=\"https://events.linuxfoundation.org/events/lsfmm-summit\"\u003eLinux kernel LSF/MM summit\u003c/a\u003e, day 1.\u003c/p\u003e\n","title":"2012 LSF/MM Summit Summary - Day 1"},{"content":"\n*By P.B.Shelley*\n\nI bring fresh showers for the thirsting flowers,  \n From the seas and the streams;  \nI bear light shade for the leaves when laid  \n In their noon-day dreams.  \nFrom my wings are shaken the dews that waken  \n The sweet buds every one,  \nWhen rocked to rest on their mother's breast,  \n As she dances about the Sun.  \nI wield the flail of the lashing hail,  \n And whiten the green plains under,  10  \nAnd then again I dissolve it in rain,  \n And laugh as I pass in thunder.  \n\nI sift the snow on the mountains below,  \n And their great pines groan aghast;  \nAnd all the night 'tis my pillow white,  \n While I sleep in the arms of the blast.  \nSublime on the towers of my skiey bowers,  \n Lightning my pilot sits;  \nIn a cavern under is fettered the thunder,  \n It struggles and howls at fits;   \nOver Earth and Ocean, with gentle motion,  \n This pilot is guiding me,  \nLured by the love of the genii that move  \n In the depths of the purple sea;  \nOver the rills, and the crags, and the hills,  \n Over the lakes and the plains,  \nWherever he dream, under mountain or stream,  \n The Spirit he loves remains;  \nAnd I all the while bask in Heaven's blue smile,  \n Whilst he is dissolving in rains.  \n\nThe sanguine Sunrise, with his meteor eyes,  \n And his burning plumes outspread,  \nLeaps on the back of my sailing rack,  \n When the morning star shines dead;  \nAs on the jag of a mountain crag,  \n Which an earthquake rocks and swings,  \nAn eagle alit one moment may sit  \n In the light of its golden wings.  \nAnd when Sunset may breathe, from the lit Sea beneath,  \n Its ardours of rest and of love,  \nAnd the crimson pall of eve may fall  \n From the depth of Heaven above,  \nWith wings folded I rest, on mine äery nest,  \n As still as a brooding dove.  \n\nThat orbed maiden with white fire laden  \n Whom mortals call the Moon,  \nGlides glimmering o'er my fleece-like floor  \n By the midnight breezes strewn;  \nAnd wherever the beat of her unseen feet,  \n Which only the angels hear,   \nMay have broken the woof, of my tent's thin roof,  \n The stars peep behind her, and peer;  \nAnd I laugh to see them whirl and flee,  \n Like a swarm of golden bees,  \nWhen I widen the rent in my wind-built tent,  \n Till the calm rivers, lakes, and seas,  \nLike strips of the sky fallen through me on high,  \n Are each paved with the moon and these.  \n\nI bind the Sun's throne with a burning zone  \n And the Moon's with a girdle of pearl;  \nThe volcanos are dim and the stars reel and swim  \n When the whirlwinds my banner unfurl.  \nFrom cape to cape, with a bridge-like shape,  \n Over a torrent sea,  \nSunbeam-proof, I hang like a roof --  \n The mountains its columns be!  \nThe triumphal arch, through which I march  \n With hurricane, fire, and snow,  \nWhen the Powers of the Air, are chained to my chair,  \n Is the million-coloured Bow;   \nThe sphere-fire above its soft colours wove  \n While the moist Earth was laughing below.  \n\nI am the daughter of Earth and Water,  \n And the nursling of the Sky;  \nI pass through the pores, of the ocean and shores;  \n I change, but I cannot die --  \nFor after the rain, when with never a stain  \n The pavilion of Heaven is bare,  \nAnd the winds and sunbeams, with their convex gleams,  \n Build up the blue dome of Air --  \nI silently laugh at my own cenotaph  \n And out of the caverns of rain,  \nLike a child from the womb, live a ghost from the tomb,  \n I arise, and unbuild it again. --  \n","cover":"","link":"the-cloud.html","preview":"\u003cp\u003eIn his poetry, I found freedom and liberty that can last for eternity.\u003c/p\u003e\n","title":"The Cloud"},{"content":"\nIt was an old story. But I believe it best explains what I think of my employer.  \n(现在偷偷放出来估计不太会有人看到了吧:)\n\n---\nI am really sorry to irritate you yesterday. I truly am. Please accept my most sincere apology.\n\nAnd I want to clear that I am not a guy depending his life on luck, but rather a man who wants to control his own destiny. If I offended you in the SanGuoSha discussion, please accept my another apology. I am sorry. I did not mean it.\n\nBesides, you mentioned low pay and eager promotion yesterday. I do not recall I ever complained that. In fact, I think I am well paid now and promotion is something that I can not simply ask for. EMC is a place a man gets what he earns, when he earns it. I know it from the bottom of my heart.\n\nAnd this reminds me that I came to join EMC not because how much EMC pays me, but because of the vision that EMC is building a world class file system development center in China. I still believe in the vision now.\n\nAgain, I apology for all the troubles and mess I have brought to you so far. And I will do my best to make it up in the future.\n","cover":"","link":"letter-to-my-former-boss.html","preview":"\u003cp\u003eIt was an old story. But I believe it best explains what I think of my employer.\u003c/p\u003e\n","title":"A letter to my former boss"},{"content":"\nIn a get-together party with some friends of [linuxfb](http://linuxfb.org), we chatted over many [interesting/boring/useful/non-sense topics](http://wangxu.me/blog/p/648). One of these topics made me think deeper and wanted to write down something about it.\n\nThe background is that, [Li Kai (@leekayak)](http://weibo.com/11803445) reported that he encountered a problem where an allocated memory area is not initialized to zero. And someone told him that it is because kernel returns uninitialized memory through brk(). And Coly (@colyli, @淘泊松) corrected him that it is impossible because ever since the early days of 0.9 version of Linux kernel, memory returned to user space is always initialized because otherwise there would be security issues. And the uninitialized memory may be returned by libc memory allocator which manages memory fractions on its own. Possibly the memory freed by application is not returned to kernel thus next time it is requested, it is not initialized.\n\nThe discussion ended here but later I started to think about when should a programmer initialize variables. After digging for a while, I found [following](http://en.wikipedia.org/wiki/C_syntax#Storage_duration_specifiers):\n\n|Specifiers|Lifetime|Scope|Default initializer|\n|----------|--------|-----|-------------------|\n|auto|Block (stack)|Block|Uninitialized|\n|register|Block (stack or CPU register)|Block|Uninitialized|\n|static|Program|Block or compilation unit|Zero|\n|extern|Program|Block or compilation unit|Zero|\n|malloc/free|Dynamic (heap)| |Uninitialized|\n\nAnd C99 standard further defines:\n\nExcept where explicitly stated otherwise, for the purposes of this subclause unnamed members of objects of structure and union type do not participate in initialization. Unnamed members of structure objects have indeterminate value even after initialization.\n\nIf an object that has automatic storage duration is not initialized explicitly, its value is indeterminate. If an object that has static storage duration is not initialized explicitly, then:\n\n-   if it has pointer type, it is initialized to a null pointer;\n-   if it has arithmetic type, it is initialized to (positive or unsigned) zero;\n-   if it is an aggregate, every member is initialized (recursively) according to these rules;\n-   if it is a union, the first named member is initialized (recursively) according to these rules.\n\nOne interesting thing about the extra effort that compiler tries to do for programmers is that it may create memory holes and leaks. Look at the example code:\n```\nstruct foo {\n       int a,b;\n} f = {.a=1,};\n```\nIt is usually used this way because C99 will ensure that f.b is initialized to 0. But when it comes to:\n```\nstruct foo {\n       short a;\n       int b;\n} f = {.a=1,};\n```\nIt also initializes f.b to 0 but will generate a two-byte hole between foo.a and foo.b on 32bit machines. It is usually OK but if the code is in kernel and f is about to be sent to user, it leaves a security hole. Therefore in such unaligned member case, one need to use memset() family to initialize the structure.\n","cover":"","link":"objects-initialization-in-c99.html","preview":"\u003cp\u003eAn overview of objects initialization in C99 standard.\u003c/p\u003e\n","title":"Objects Initialization in C99"},{"content":"\n恍惚间，已到2011年的最后一天。想要翻阅去年的总结，却发现去年什么都没有记下。哦，对了，去年底的那段时间，我过得很狼狈，以至于连记录的精力都没有了。\n\nAnyway，我终究撑过来了。今天又注定是一个总结满天飞的日子，我也抛上一砖。\n\n工作上，2011年可圈可点的事情不多。参与的两个项目都在有了阶段性成果的时候无疾而终。或许在大公司，确定事情成败的更多是非技术的原因吧。学东西是肯定的，只是如果能在学东西的时候创造出更多的价值，我想我会觉得自己做的事情更有意义一些。\n\n五月时被直接领导狠狠地说了一顿，说我工作不够努力。我觉得很憋屈。我确实经常是早上最后一个到公司的，但是拍着胸脯说，我也肯定是全组加班最多的人。可是有什么用呢？人们总是只看到自己想看到的。就如我签名档是Carpe diem时，他会解读成及时行乐，虽然我想的是seize the day。所以尽管憋屈我却没有离职，反而写了非常诚恳的道歉信，并更努力地做好了下一个项目。回顾过往，我到EMC工作完全是出于对技术的渴望，以及对霄在我面前勾画出的愿景的向往。在满足这份渴望之前，在这份愿景破灭之前，我不会离开。\n\n把pNFS block client推到主线内核算是件值得欣慰的事。这也让我获得了一个[银奖](/images/EMC-silver-award-pnfs.JPG)以及十月份去南京参加的[CLSF2011](/clsf-2011-day1.html)的机会。能够再次和众牛们一起破除隔阂畅聊技术，确实是一件很值得庆幸的事情。\n\n目前的Lustre项目其实是一个微妙而又充满挑战的机会。我讨厌复杂的组织关系，确又喜欢这样充满挑战的工作。我知道现实很少让人舒服地专心做一件事情。我也在学着改变。虽然学得很慢，但我知道，在这种复杂的环境下生存，会成为我人生的一个重要技能。\n\n生活上，今年体重持续增加，已经到了历史最高的68.5KG。一直坚持打网球。技术也在慢慢地改进中，正手可以舒服的“撞球”了，偶尔也可以来一两个伪killer forehand。反手和步伐还需要多加练习。\n\n继续参加[Linuxfb](http://linuxfb.net/)的活动，并贡献了很多topic。我发现自己其实是个很喜欢分享的人。向别人分享也是自己学习的过程，在这个过程中我已然学到了很多，如vmfs的设计，metastore的设计，Linux RCU的实现和AIO的实现。这些不但丰富了大家的知识库，对我的工作也很有帮助。感谢Coly, hzmangel和aptitude费心组织这么好的活动。\n\n和老婆继续执行了每年旅行一次的计划。今年是五一，去了向往已久的黄山。站在山上，很有种想要归隐山林的冲动。除了城市的忙碌，我们每个人都有可以选择山林的自由--只是我们都有太多羁绊，都不敢。\n\n八月份老婆体检的一场虚惊除了让我们对医生的素质感到无比失望外，也体会到了人生的苦短。那是寝食难安的一个月，也是相互扶持，相互依存的一个月。最后的虚惊一场，却让我们比任何时刻都清晰地认识到对方的重要。是的，亲爱的，我相信我们已经水乳相融，没有任何事可以分开我们。\n\n要说今年最大的收获，当然是向老婆求婚了。终于结束了我们的爱情长跑，人生还很长，亲爱的，让我们相濡以沫，白头到老：）\n![求婚成功](/images/求婚成功.jpg)\n\n展望2012年，有很多事情要做：\n\n1. 领证，婚礼，蜜月。我的爱情，将在2012修成正果。\n2. 做好Lustre项目。Lustre是一个庞大而复杂的项目。万事开头难，我需要多多努力。同时正在申请明年四月San Fransisco的LSF/MM summit。虽然希望渺茫，但如果能够成行，当成为2012年的一份大礼。\n3. 坚持带老婆打网球。我打网球就是为了带老婆锻炼，所以明年要多督促她一起打球。\n4. 开始日语学习计划。\n5. 我有很多idea。选择一两个有意义的，动手实现一下，让自己脱离空想家的尴尬。\n6. 守护父母。如果某一天我离开北京回四川，父母一定是最大的原因。\n7. 爱护老婆。老婆有时候会太逼迫自己。看着很心疼。我要多帮她分担。\n\n写了这么多，发现自己已经没法像学生时代那样写一些安静的文字了。\n\n明明已经老大不小了，却还是没有活明白，生活依旧一团糟。-- 这其实是这篇blog写下的第一句话。\n","cover":"","link":"carpe-diem-to-my-2011.html","preview":"\u003cp\u003e恍惚间，已到2011年的最后一天。想要翻阅去年的总结，却发现去年什么都没有记下。哦，对了，去年底的那段时间，我过得很狼狈，以至于连记录的精力都没有了。\u003c/p\u003e\n","title":"Carpe Diem. To My 2011"},{"content":"\nThe second day of [CLSF 2011](http://www.china-lsf.org/2011/) started with Wu Fengguang's IO-less throttling. It is a continuous work from last year. Fengguang has done great work in improving Linux kernel read-ahead. And in the last two years, he is working on improving writeback.\n\nThere are many dirty page writeback path in Linux kernel: fsync(), sync(), periodic writeback, backgroud writeback, balance_dirty_pages() and page reclaim path. Among them, balance_dirty_pages() and page reclaim path are worst for performance because they tend to writeback random single page. The purpose of balance_dirty_pages() is to balance page dirtying and page writeback, so that task doesn't cause too much memory pressure. Currently, balance_dirty_pages() calls writeback_inodes_wb() to writeback dirty pages. What Fengguang does is to adjust balance_dirty_pages() to:\n\n1.   let dirtier task sleep instead of initiate writeback in balance_dirty_pages(), so flusher can start writeback when necessary;\n2.   make page dirtying and writeback speed matching smoothly so that page reclaim is avoided as much as possible;\n3.   balance the dirty speed of each memory dirtier so that large writer don't eat all memory causing smaller writers stall for a long time.\n\n\nThere are a few parameters to tune and the most important one is how long dirtier should task sleep, which takes into account current disk write bandwidth, system memory pressure and task dirtying speed.\n\nThe whole patchsets are referred as IO-less throttling and are getting merged in 3.2 merge window as decided in Kernel Summit last week. It is really a time-consuming critical work that needs brilliant and patient mind. Fengguang said he draw more than 10K performance graphs and read even more in the past year.\n\nWhile the IO-less throttling patches help improving writeback performance, Coly and Ma Tao said they are more interested in a side effect of the patches, per-task buffer writer bandwidth control. The problem comes with current implementation of blkio cgroup, which calculates IO bandwidth on the task that submitted bio. However, for buffer write, the pages are most likely written back by flusher thread. So the blkio controller does not work for buffer write. But Fengguang's IO-less throttling gives another way -- control write speed at balance_dirty_pages(). Fengguang said it should be possible and easy for balance_dirty_pages().\n\n![IO-less throttling discussion](/images/clsf-2011-day2-discussion.jpg)\n\nThe second topic is memory management discussion led by Li Shaohua. We mainly discussed some issues found in Taobao's/Baidu's data centers. The first issue Coly presented is whether swap-off on all-in-memory service servers. When swap on, performance may get hurt when pages are swapping out, while swap off, oom-killer is easy to trigger when applications uses too many memory. The real problem is that application doesn't know about system memory pressure (malloc doesn't fail at all) until oom. A possible solution would be to send sigfault to application when system reaching memory high watermark. [Xie Guangjun](http://weibo.com/hd8003) from Baidu, commented that swap is on in their deployment. Only small databases are all-in-memory. For file data, they use auto tiering, and their search engine applications are not allowed to allocate memory dynamically...\n\nAnother issue in Taobao is about SSD+HD auto tiering. HD data cache hit ratio is very low. As a result, when there is a cache miss in SSD, reading from HD is very slow (avg 3 IO per file, dentry, inode, data). Possible solutions:\n\n1.   Use cgroups to control memory for SSD and HD, to keep HD buffers cache in memory.\n2.   Use DIO to read these small data, to avoid wasting page cache for HD data.\n3.   Create a new zone, use bdi-\u003emapping flag to specify which zone to alloc memoroy for device, for the same reason as 1.\n\nAlso it is mentioned that memcg count buffer cache to first users but it is unfair. Possible solution would be to create a task struct for each bdi and count these pages to bdi task.\n\nIn the afternoon, first I led a session on pNFS discussion. The first issue is how much layout client should be asking for IO. Current pNFS client only asks 4KB length of layout in writepages, even if the wbc requires much more. Fengguang agreed that client has the information of how much to writeback and it is a pity to drop the information letting server do a wild guess. Then I presented the idea of making pNFS Linux a full POSIX client. It is technically do-able but the main reason (for EMC) would be business need.\n\u003cimg data-src=\"/images/clsf-2011-day2-discussion-2.jpg\" alt=\"pNFS discussion\" hight=\"70%\" width=\"70%\"\u003e\u003c/img\u003e\n\nAfter that, Xie Guangjun led a session about Baidu's work in their data centers. The first change is to use memcg to guild oom-killer. They make mapreduce jobtracker send down memory limit per task, then task tracker creates new task with memory limit (now use cgroups) and oom-killer kills all processes in the same cgroup.\n\nAnother interesting thing is that, Baidu is building a global resource manager in their data center. The idea is similar to Hadoop's new resource manager in MDS will be a general purpose one. Guangjun mentioned that Google has a similar implementation in their data center as well. \n\nThe most interesting thing from Baidu is their work on flash. In current deployment, they build SSD from NAND with MTD+UBI+LVM. It is a joint work together with Huawei and fully implemented the functionality of mysterious FTL. In the future,they will build the SSD such that it bypasses whole VFS layer and uses ioctl API to do read/write/trim. It seems that even with some of Nick Pidgin's scalability patches merged, Linux VFS is still a hot pot of lock contention for high speed storage. In our previous training from Whamcloud, they came to the same conclusion and are planning to drop VFS interface in the future.\n\nAfter Baidu, Intel performance team let a discussion about the impact of emerging new hardware on current system architecture, namingly SSD and PCM. SSD is already changing system architecture in Baidu. PCM is likely to be even more evolutionary, even removing the need for current complex implemented file systems. However, it is still way far in the future. We need to focus on what we have at hand.\n\nThat's all for the two days event. I didn't mean to write so long stories but all the above are worth documenting. So I can't drop any of them...\n\nIn the end, thanks Baidu and Fujitsu for their generous sponsorship. Thank you all CLSF committees for making this happen. And thanks EMC for sending me there. It is really a valuable experience and will benefit me for quite a long time.\n\n\u003cimg data-src=\"/images/clsf-2011-group.jpg\" alt=\"Group Photo\" hight=\"70%\" width=\"70%\"\u003e\u003c/img\u003e\n","cover":"","link":"clsf-2011-day2.html","preview":"\u003cp\u003eA summary of CLSF 2011 second day discussions.\u003c/p\u003e\n","title":"CLSF 2011 - Day 2"},{"content":"\nOne year passed since last [CLSF 2010](/CLSF-2010.html) in Shanghai. This year, CLSF is held in Nanjing and sponsored by Baidu and Fujitsu. And Coly has kindly built an official website for the event.\n\n\nThe workshop started with Btrfs updates given by Fujitsu's Zefan Li. Fujitsu has been contributing a lot to btrfs development this year. The first important feature Fujitsu developed for btrfs is LZO transparent compression. Before, btrfs only uses Zlib but the infrastructure allows adding more compression algorithms. LZO consumes less CPU and is faster than Zlib. The current compression unit is extent (at most 160KB) and every RW needs to read/write whole extent. So the feature seems to be more suitable for SRSW use case.\n\nAnother interesting feature added to btrfs is auto-defragment. Copy-on-write filesystems like btrfs/WAFL all suffer from file fragmentation. So btrfs tries to (sort of) solve it in a nice and easy way. When a page is written, btrfs tries to read in the extent around current page and mark pages dirty in memory. So later writeback can write continuous blocks and ondisk extents tend to be less fragmented. However, a side effect is that it causes more IO than necessary and may hurt random write performance. While the idea of auto-defrag is cool, defragmentation consumes resources and thus timing is very important. What is the best time for starting auto-defrag and how far it should go (e.g., 5 frags into 4 may not be worth doing at all) remains still a open question.\n\nMiao Xie also introduced btrfs tree log and sub-transaction feature. Before tree log, btrfs maintains a big transaction (default 30sec) and if user fsync one file, the whole transaction has to be committed, hurting very much the performance of other writers. With tree log, btrfs maintains a write-ahead on-disk log for each of such fsync operations. And when transaction commits, it discards all these logs. As a result, fsync one file will only result in writing back the file's dirty data in tree log and other writers can continue writing to the same transaction, which improves performance in many writers with fsync use case.\n\nOne defect of tree log is that, when writing new logs, it also writes all old logs (again and again). The solution is to assign a sub-transaction id to each log and use it to avoid writing old logs. And it improves performance in large file many fsync use case.\n\nOne question that we are all interested is when btrfs will be suitable for production. Currently the most concern is about btrfsck, which has been delayed for years. Although btrfs has built-in RAID and scrub (which rebuilds broken RAID block automatically), people still think fsck a must. Zefan explained that [Chris Mason](https://plus.google.com/105274031445877094012/about) will demo btrfsck at LinuxCon later this month. The reason he (Chris) didn't release btrfsck for so long is that he was trying different designs/implementations and do not want to corrupt user data with half-done btrfsck. Good news is that Chris is pushing btrfs into Oracle's next release UBL.\n\nThe last but most important question for btrfs is performance. According to Intel guys' tests, btrfs is slower than ext4 in many cases. Some argued that btrfs presents many fancy features ext4 don't. But these features are more attractive to desktop users than to server users, and server users are the real force to push Linux kernel going forward these days.\n\nThe second topic is Distributed/cluster storage and cloud, led by Novell's Zhang Jiaju. This is a general talk about open source cloud infrastructure. Distributed systems put a lot of pressure on DLM and sometimes make DLM itself too heavy. We also discussed why Lustre isn't wildly used outside of HPC market. Jiaju thought the most important reason is Lustre is not merged in Linux kernel thus enterprise users do not trust them as much as Kernel filesystems even like ceph.\n\nJiaju maintains corosync in SUSE Linux and made an implementation of [Paxos](https://github.com/jjzhang/booth). Paxos came into people's eye because of [Google Chubby](http://labs.google.com/papers/chubby-osdi06.pdf). He also introduced a little about corosync's Totem. Totem performs better than Paxos when cluster membership doesn't change. But we all agree that quorum is not the best way to solve large cluster synchronization problem and that's why common Chubby cluster only have several machines.\n\nThat's all for the morning. Bellow is we are continuing discussion during lunch break.\n![lunch break](/images/clsf-2011-lunch-break.jpg)\n\nTaobao holds first two sessions in the afternoon.Taobao is using ext4 heavily in many of their servers and they are particularly interested in some features. First is Ted's bigalloc, which tries to allocate larger chunk of data and is useful for large sequential write applications like HDFS. One issue with bigalloc is directory. With bigalloc, minimal 1MB block for each directory is certainly a waste. [Ma Tao](http://www.weibo.com/pagefault) has sent out [preview patches](http://lwn.net/Articles/464510/) , the main idea is to make use of the inode xattr space to store the inline data.\n\nMetadata checksum, snapshot and compression are also in Taobao's eyes. Meta checksum is mainly for debug purpose. When file system corrupts, people can first check meta checksum. If checksum doesn't agree, it is very likely a disk problem instead of file system bug. However, it doesn't help no journal mode. For snapshot, [Yang Yongqiang](http://weibo.com/xiaoqiangnk) is actively working on it.\n\nThe third topic in the afternoon is block layer updates, led by Li Shaohua. The most important change in block layer is the dropping of IO barriers, in favor of FLUSH/FUA. IO barrier has been there for a very long time. They are a concept in the block layer, implemented via FLUSH/FUA and serve two purposes: request ordering and forced flushing to physcial medium. Both block layer and disk cache may queue/reorder io requests. IO barriers ensure preceding requests are processed before the barrier and following requests after. Also they ensure that all data in disk write cache are flushed before returning.\n\nIO barriers are well-known as performance killers. However, enforcing ordering with IO barriers at block layer is more than enough. Filesystems just want to ensure some important requests to get to disk, instead of EVERYTHING sent to block layer privier to IO barriers. Filesystems should concern themselves with ordering, since that's where the information is, and not dump that problem into the block layer. A filesystem which wants operations to happen in a specific order will simply need to issue them in the proper order, waiting for completion when necessary. The block layer can then reorder requests at will.\n\nThe resolution is to export FLUSH/FUA and let filesystems decide. Therefore REQ_HARDBARRIER no longer exists, while REQ_FLUSH and REQ_FUA are added. REQ_FLUSH request forces the write cache to be flushed before beginning the operation, and REQ_FUA means the data associated with the request itself must be committed to persistent media by the time the request completes.\n\nSo the procedure of write has changed from:\n```\nsubmit_bio(WRITE_BARRIER)\nother reqs -\u003e (wait)preflush -\u003e (wait)bio reqs-\u003e (wait)postflush -\u003e other reqs\n```\nto:\n```\nsubmit_bio(WRITE_FLUSH_FUA)\nother reqs -\u003e preflush -\u003e other reqs -\u003e (preflush finishes) bio reqs -\u003e other reqs -\u003e (bio reqs finish) postflush\n```\n\nFor both cases, if device supports FUA, the bio reqs are issued with REQ_FUA flag and the postflush is omitted. Apparently, the performance gain comes from the fact that one transaction on longer need to wait for IO requests of other transactions, at the cost of letting file systems maintain the dependency of different io requests.\n\nThe last session is a from industry session led by Huawei's chief scientist Hu Ziang. Ziang asked some questions for their engineers and then introduced Huawei's Linux strategy. Huawei used to be a very closed company but now they are seeking to get open and embrace Linux and open source. They will build a very large Linux developer team in near future. Good news for China Linux community.\n\nThat's all for the first day of excitement.\n![discussion](/images/clsf-2011-day1-discussion.jpg)\n","cover":"","link":"clsf-2011-day1.html","preview":"\u003cp\u003eA summary of CLSF 2011 first day discussions.\u003c/p\u003e\n","title":"CLSF 2011 - Day 1"},{"content":"\nWikipedian has some [definition](http://en.wikipedia.org/wiki/Calling_convention): a calling convention is a scheme for how functions receive parameters from their caller and how they return a results.\n\nBasically, it is a compiler ABI and varies on different platforms (like Windows and Linux). This is interesting and useful for debugging (at least for understanding how debuggers work...).\n\nFor example, a simple piece of code:\n```\nvoid f(int arg1, int arg2, int arg3, int arg4, float arg5, int arg6, float arg7,\n        float arg8, int arg9, int arg10, int arg11, int arg12)\n{\n        printf(\"%d %d %d %d %f %d %f %f %d %d %d %d\\n\",\n                arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9,\n                arg10, arg11, arg12);\n}\n\nvoid main()\n{\n         f(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n}\n```\n\n### On Linux i386\n\nAbove compiles to assembly:\n```\n[SID@test]$cc a.c -o a\na.c: In function ‘f’:\na.c:4: warning: incompatible implicit declaration of built-in function ‘printf’\n[SID@test]$objdump -d a \u003e a.s\n```\n\nIn a.s, we can see the main function calls f function by passing every argument through the stack.\n```\n804842e:       55                      push   %ebp\n804842f:       89 e5                   mov    %esp,%ebp\n8048431:       83 e4 f0                and    $0xfffffff0,%esp\n8048434:       83 ec 30                sub    $0x30,%esp\n8048437:       c7 44 24 2c 0c 00 00    movl   $0xc,0x2c(%esp)\n804843e:       00\n804843f:       c7 44 24 28 0b 00 00    movl   $0xb,0x28(%esp)\n8048446:       00\n8048447:       c7 44 24 24 0a 00 00    movl   $0xa,0x24(%esp)\n804844e:       00\n804844f:       c7 44 24 20 09 00 00    movl   $0x9,0x20(%esp)\n8048456:       00\n8048457:       b8 00 00 00 41          mov    $0x41000000,%eax\n804845c:       89 44 24 1c             mov    %eax,0x1c(%esp)\n8048460:       b8 00 00 e0 40          mov    $0x40e00000,%eax\n8048465:       89 44 24 18             mov    %eax,0x18(%esp)\n8048469:       c7 44 24 14 06 00 00    movl   $0x6,0x14(%esp)\n8048470:       00\n8048471:       b8 00 00 a0 40          mov    $0x40a00000,%eax\n8048476:       89 44 24 10             mov    %eax,0x10(%esp)\n804847a:       c7 44 24 0c 04 00 00    movl   $0x4,0xc(%esp)\n8048481:       00\n8048482:       c7 44 24 08 03 00 00    movl   $0x3,0x8(%esp)\n8048489:       00\n804848a:       c7 44 24 04 02 00 00    movl   $0x2,0x4(%esp)\n8048491:       00\n8048492:       c7 04 24 01 00 00 00    movl   $0x1,(%esp)\n8048499:       e8 26 ff ff ff          call   80483c4\n804849e:       c9                      leave\n804849f:       c3                      ret\n```\n\n### on X86_64 Linux\n\nThe code compiles into following, where parameters are passed to f function through three ways: general purpose registers (di, si, dx, cx, r8d, r9d), xmm registers (xmm0~xmm2), and function stack.\n```\n40054b:       55                      push   %rbp\n40054c:       48 89 e5                mov    %rsp,%rbp\n40054f:       48 83 ec 20             sub    $0x20,%rsp\n400553:       c7 44 24 10 0c 00 00    movl   $0xc,0x10(%rsp)\n40055a:       00\n40055b:       c7 44 24 08 0b 00 00    movl   $0xb,0x8(%rsp)\n400562:       00\n400563:       c7 04 24 0a 00 00 00    movl   $0xa,(%rsp)\n40056a:       41 b9 09 00 00 00       mov    $0x9,%r9d\n400570:       f3 0f 10 15 60 01 00    movss  0x160(%rip),%xmm2        # 4006d8 \u003c__dso_handle+0    x30\u003e\n400577:       00\n400578:       f3 0f 10 0d 5c 01 00    movss  0x15c(%rip),%xmm1        # 4006dc \u003c__dso_handle+0    x34\u003e\n40057f:       00\n400580:       41 b8 06 00 00 00       mov    $0x6,%r8d\n400586:       f3 0f 10 05 52 01 00    movss  0x152(%rip),%xmm0        # 4006e0 \u003c__dso_handle+0    x38\u003e\n40058d:       00\n40058e:       b9 04 00 00 00          mov    $0x4,%ecx\n400593:       ba 03 00 00 00          mov    $0x3,%edx\n400598:       be 02 00 00 00          mov    $0x2,%esi\n40059d:       bf 01 00 00 00          mov    $0x1,%edi\n4005a2:       e8 1d ff ff ff          callq  4004c4 \n4005a7:       c9                      leaveq\n4005a8:       c3                      retq\n4005a9:       90                      nop\n4005aa:       90                      nop\n4005ab:       90                      nop\n4005ac:       90                      nop\n4005ad:       90                      nop\n4005ae:       90                      nop\n4005af:       90                      nop\n```\n\nSo why the difference? Basically this is part of System V AMD64 ABI convention which GCC and ICC (Intel compiler) implements on Linux, BSD and Mac and which defines that rdi, rsi, rdx, rcx, r8, r9 can be used to pass down integer parameters and xmm0-7 can be used to pass down float point parameters.\n\nThis leads to another question, why not other registers? On X86_64, there are 16 general purpose registers that can save integers (rax, rbx, rcx, rdx, rsi, rdi, rbp, rsp r8~r15), and 16 xmm registers that can save float points (xmm0~xmm15). They are divided by compiler ABI into volatile and non-volatile registers. Volatile registers are scratch registers presumed by the caller to be destroyed across a call. Nonvolatile registers are required to retain their values across a function call and must be saved by the callee if used. So volatile registers are naturally suitable for function arguments while there is overhead of using non-volatile registers (must be saved).\n\nThe calling conversion ABI is basically about which register is volatile/non-volatile, which is reserved for specially purpose (parameter passing, frame pointer, stack pointer, etc.), what is the order of arguments on stack, who (caller or callee) is responsible for cleaning up the stack, as well as stack layout/alignness.\n\n| Architecture | Calling convention name | Operating system, Compiler | Parameters in registers | Parameter order on stack | Stack cleanup by | Notes |\n|--------------|-------------------------|----------------------------|-------------------------|--------------------------|------------------|-------|\n| 64bit        | Microsoft x64 calling convention | Windows (Microsoft compiler, Intel compiler) | rcx/xmm0, rdx/xmm1, r8/xmm2, r9/xmm3 | RTL \\(C\\) | caller | Stack aligned on 16 bytes. 32 bytes shadow space on stack. The specified 8 registers can only be used for parameter number 1,2,3 and 4. |\n| 64bit        | System V AMD64 ABI convention | Linux, BSD, Mac (GCC, Intel compiler) | rdi, rsi, rdx, rcx, r8, r9, xmm0-7 | RTL \\(C\\) | caller | Stack aligned on 16 bytes. Red zone below stack. |\n\nThe above table is only for either user space application or kernel space functions. Likewise, there is always an exception. Here the exception is system calls. System calls trap user space context into kernel space and have [specially requirement](http://x86-64.org/documentation/abi.pdf) for parameter passing:\n\n1.   User-level applications use as integer registers for passing the sequence %rdi, %rsi, %rdx, %rcx, %r8 and %r9. The kernel interface uses %rdi, %rsi, %rdx, %r10, %r8 and %r9.\n2.   A system-call is done via the syscall instruction. The kernel destroys registers %rcx and %r11.\nthe stack.\n3.   The number of the syscall has to be passed in register %rax.\n4.   System-calls are limited to six arguments, no argument is passed directly on\n5.   Returning from the syscall, register %rax contains the result of the system-call. A value in the range between -4095 and -1 indicates an error, it is -errno.\n6.   Only values of class INTEGER or class MEMORY are passed to the kernel.\n","cover":"","link":"x86-calling-conversion.html","preview":"\u003cp\u003eA brief summary of X86 calling conversion, which is helpful in understanding stack frames and kernel ABIs.\u003c/p\u003e\n","title":"X86 Calling Conversion"},{"content":"\n[VMFS](http://dl.acm.org/citation.cfm?id=1899935) is an interesting paper. It tells us how VMware builds its high performance SAN file system. Since I was writing file system in ESX kernel in the passed year, I feel I got a good position in understand VMFS's designs and intentions. Here is the summary slides about it. I did my best to make sure no confidential information are leaked. All sentences and pictures are either from the paper or from Internet.\n\n\u003ciframe src=\"//www.slideshare.net/slideshow/embed_code/key/6BK87BWwLsNSO1\" width=\"595\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen\u003e \u003c/iframe\u003e \u003cdiv style=\"margin-bottom:5px\"\u003e \u003cstrong\u003e \u003ca href=\"//www.slideshare.net/bergwolf/vmfs-intro\" title=\"vmfs intro\" target=\"_blank\"\u003evmfs intro\u003c/a\u003e \u003c/strong\u003e from \u003cstrong\u003e\u003ca target=\"_blank\" href=\"//www.slideshare.net/bergwolf\"\u003ebergwolf\u003c/a\u003e\u003c/strong\u003e \u003c/div\u003e\n","cover":"","link":"vmfs.html","preview":"\u003cp\u003eAn overview of Vmware\u0026rsquo;s \u003ca href=\"http://dl.acm.org/citation.cfm?id=1899935\"\u003eVMFS\u003c/a\u003e.\u003c/p\u003e\n","title":"Virtual Machine Filesystem"},{"content":"\nReading google's infrastructure paper is always joy, of which I have just had one recently. Google's [megastore](http://www.cidrdb.org/cidr2011/Papers/CIDR11_Paper32.pdf) presents how Google builds transactional service on top of bigtable. Here is the slide I wrote about it...\n\n\u003ciframe src=\"//www.slideshare.net/slideshow/embed_code/key/1xYYi8WBdk5tPQ\" width=\"595\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen\u003e \u003c/iframe\u003e \u003cdiv style=\"margin-bottom:5px\"\u003e \u003cstrong\u003e \u003ca href=\"//www.slideshare.net/bergwolf/google-megastore-9042861\" title=\"Google Megastore\" target=\"_blank\"\u003eGoogle Megastore\u003c/a\u003e \u003c/strong\u003e from \u003cstrong\u003e\u003ca target=\"_blank\" href=\"//www.slideshare.net/bergwolf\"\u003ebergwolf\u003c/a\u003e\u003c/strong\u003e \u003c/div\u003e\n","cover":"","link":"google-megastore.html","preview":"\u003cp\u003eA summary after reading Google\u0026rsquo;s \u003ca href=\"http://www.cidrdb.org/cidr2011/Papers/CIDR11_Paper32.pdf\"\u003emegastore paper\u003c/a\u003e.\u003c/p\u003e\n","title":"Google Megastore"},{"content":"\nRCU had been a mystery to me for quite a long time. I finally had sometime to walk it through and understand what happened and why. Here is the slide I presented to guys on Auguest's [linuxfb](http://linuxfb.org) seminar...\n\n\u003ciframe src=\"//www.slideshare.net/slideshow/embed_code/key/slWUzjOs61K8vU\" width=\"595\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen\u003e \u003c/iframe\u003e \u003cdiv style=\"margin-bottom:5px\"\u003e \u003cstrong\u003e \u003ca href=\"//www.slideshare.net/bergwolf/rcu\" title=\"RCU\" target=\"_blank\"\u003eRCU\u003c/a\u003e \u003c/strong\u003e from \u003cstrong\u003e\u003ca target=\"_blank\" href=\"//www.slideshare.net/bergwolf\"\u003ebergwolf\u003c/a\u003e\u003c/strong\u003e \u003c/div\u003e\n","cover":"","link":"rcu.html","preview":"\u003cp\u003eAn overview of Linux RCU implementation\u003c/p\u003e\n","title":"RCU"},{"content":"\nWell, it has been a while since my last post. So here I give some recent updates and later I will come up with more details.\n\nLife:  \nOf course, life is not tough to me, but it is not easy either... Why? Well, it is mainly because all these three to four months, I've been having little life but always work... However, I still found my way to SuZhou with my girl friend for the National Holiday. And I was honored to be able to attend CLSF (China Linux Storage and Filesystem workshop) and CLK (China Linux Kernel Developer Conference). I have a full summary but I just have not found time to consolidate it into a blog. I will write about it later.\n\nLinuxfb.org meeting still happens regularly. We have some very good topics and I personally learned a lot from them.\n\nAh, BTW, I learned to skate during Christmas and I am going to ski next week :)\n\nWork:  \nI am lucky and honored to be hired by EMC and working with tons of talents here. In the past a few months, I've been seeing several very nice/warmhearted/experienced/smart/talented people leaving. And that made me feel sad. Maybe it is just what work is. I think I still need some time to figure it out.\n\nI've been working on both pNFS and MPFS for some time and I felt kind of difficult for me to keep my attention to both of them. And finally my manager noticed this and spared from pNFS for about one month. He is a good guy and I know I own him a lot. I will do my best to make sure I do not let him down.\n\nOK, that's for the short status update. I will find time to write more in the following few days.\n","cover":"","link":"status-update.html","preview":"\u003cp\u003eA long time over-due update.\u003c/p\u003e\n","title":"status update"},{"content":"\nI wasn't able to write down the details about CLFS (China Linux Filesystem and Storage workshop) last year (too busy at that time...). But luckily, I have written this slide to recode the major events in it. Here it is...\n\n\u003ciframe src=\"//www.slideshare.net/slideshow/embed_code/key/M0HCw2dd2bGui6\" width=\"595\" height=\"485\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;\" allowfullscreen\u003e \u003c/iframe\u003e \u003cdiv style=\"margin-bottom:5px\"\u003e \u003cstrong\u003e \u003ca href=\"//www.slideshare.net/bergwolf/clfs-2010\" title=\"CLFS 2010\" target=\"_blank\"\u003eCLFS 2010\u003c/a\u003e \u003c/strong\u003e from \u003cstrong\u003e\u003ca target=\"_blank\" href=\"//www.slideshare.net/bergwolf\"\u003ebergwolf\u003c/a\u003e\u003c/strong\u003e \u003c/div\u003e\n","cover":"","link":"clsf-2010.html","preview":"\u003cp\u003eCLSF 2010 summary.\u003c/p\u003e\n","title":"CLSF 2010"},{"content":"\n几次没有写作业了，实在惭愧，今天回来赶紧打开电脑记下版聚的精彩瞬间。\n\n这次的版聚是和北京Gnome用户组合办的，我今天到的比较晚，貌似已经过了自我介绍阶段，所以不大知道今天到场的同学的情况。看起来应该有三十多人的样子，Emily姐姐的号召力还是不同凡响啊。\n\n今天的话题比较多，第一个topic是Gnome用户组的LiBing介绍Gnome全球峰会的情况。我错过了背景介绍阶段，所以不大了解峰会的情况。对这个topic的最大印象就是有很多Gnome社区的牛人参加。我也是Gnome的忠实用户，Emily后来提到可能以后会在中国办Gnome的全球峰会，真希望能亲眼见见这些牛人:)\n\n第二个话题是Emily介绍Gnome.Asia今年在台湾举办的峰会。Emily介绍了峰会的筹备以及会议中的一些趣闻，期间穿插的引出Gnome社区的一些牛人以及台湾和北京的一些在开源社区比较有影响力的人物。不得不赞叹Emily这几年的辛苦耕耘，从08年第一届Gnome.Asia峰会后开始建立的北京Gnome用户组，到现在台湾峰会后开始筹建的台湾用户组，Gnome在亚洲的发展可谓是日新月异。另外一个印象特别深刻的是Emily介绍一位爱好女装的台湾哥们儿积极参与女性社区建设的事。我想这才是open source community的真正含义：提供合适的平台，让所有人以自己的free will选择参与或是旁观。这样的open的态度是我们值得学习的地方。\n\n第三个话题是临时加的。因为很多Gnome用户组的同学对我们linuxfb.org不是很熟悉，所以临时添加了一个由hzmangel翻片的Coly介绍linuxfb.org的环节。Coly用的是去年opensuse\nconference的片子，风趣的介绍了linuxfb.org的由来，宗旨和近况。这里顺便广告一下，欢迎各位有兴趣的同学积极参与到我们的版聚中来，我们不但提供免费零食，我们更提供通往open\nsource社区的方便之门:)\n\n接下来一个话题是今天的重头戏，我们今年主推的两位帅哥wks和stufever首次登台演讲:btrfs介绍。两位帅哥配合默契，由wks主讲，stufever负责翻片。wks从基本的fs概念入手，循序渐进地介绍了btrfs的btree和COW等基本概念和milti-device, subvolume和snapshot等特性。在Coly带头问了几个问题之后，大家终于逐渐进入状态，各种问题和讨论异常激烈。btrfs果然是大家的兴趣热点，Coly都忍不住数次呼吁大家把问题串行起来。这就是我们习惯的linuxfb.org式的聚会:真理越辩越明。感谢wks和stufever奉献如此精彩的演讲，同时期待二位日后的btrfs系列:)\n\n另外扯一下我提的那个subvolume和snapshot的实现应该是一样的的问题。会后LiDongyang和我讨论了一下，又翻出btrfs的code看了看，觉得subvolume和snapshot应该是一回事。但是我回来后又仔细看了看btrfs的文档，确实是不同的实现。btrfs中有三种基本的btree:\n\n1. the tree of tree roots:记录extent tree的root，以及各个subvolume/snapshot tree的root和名字\n2. the trees of allocated extents:用来管理磁盘上的数据块，一个btrfs可以有多个allocated extents tree来减少lock几率和提供不同的分配策略\n3. the subvolume/snapshot trees\n\nsubvolume和snapshot都需要在the tree of tree roots中添加一个objectid和对应的struct btrfs_root_item。但是subvolume指向的是一个全新的subvolume tree,而snapshot是和建立snapshot基于的subvolume通过增加reference count共享一个subvolume tree。这样一个新建的subvolume的内容是空的，而新建的snapshot的内容是和基于的subvolume一样的。\n\n由此可见，hzmangel问到的snapshot被写之后umount掉再mount上，得到的仍然是被写后的snapshot tree的内容，而不是最初做snapshot时的tree的内容。\n\n最后一个话题的中标软的朋友做的国内开源社区运营情况调查和社区用户问卷调查。大家就如何更好的发展国内的开源社区进行了一些讨论也提出了一些有建设性的建议。\n\n总得说来这是一次内容丰富且十分精彩的聚会，感谢中标软和Gnome北京用户组的同学们，还有wks,stufever为我们贡献的精彩演讲。希望以后我们不同社区人群能有更多的交流合作。\n","cover":"","link":"2010-8-linuxfb.html","preview":"\u003cp\u003e几次没有写作业了，实在惭愧，今天回来赶紧打开电脑记下版聚的精彩瞬间。\u003c/p\u003e\n","title":"2010-8-29 linuxfb.org版聚总结"},{"content":"\n看见了四个感人至深的故事，我决定加上第五个。\n\n# A\n\n朋友在电视台工作，并不清闲。由于买房在即，我便想向她取一些经，是怎么忙里偷闲把房子装修出来的。她指着墙上的一些装饰，知道吗，这间房子的装修，除了那些装饰是我贴上去的，剩下的全是老爷子操心给装修的。\n\n她说，本来是找了一家装修公司，可从一开始，老爸就嫌贵，从两万元一直降到了八千元。\n\n那段时间，她很愤怒。家里就他们姐弟两个，而为了送弟弟出国留学，老爸已经在他身上花了近十万元，她好不容易买个房子，这边却一而再再而三地和别人压价。心里郁闷，嘴上也不闲着，想到什么，马上就说了出来。\n\n老爸脾气也暴躁，三说两说，两个人就闹翻了，然后是老爸气呼呼地从她的小房子里离开，嘴里还说，你随便，我再也不管你了!可往往是第二天，她回到小房子里，还会看到他在那里指挥着工人爬上爬下地装修。\n\n买圈椅的时候，她看上了一套连茶几在内的圈椅，可老爸非要说，同样的东西，在更远处的一个批发市场更便宜。她也索性赌气，再也不提圈椅的事。\n\n没想到，老爸却拉了叔叔，周末的时间跑到那个批发市场，帮她买回了圈椅和茶几。她当时一看就乐了，不仅与她看的那个大致相同，而且价格也相同，加上油费、吃饭什么的，反而贵了很多。\n\n可是，真正坐下来的时候，她发现，老爸挑的比家具城的那个舒服很多。\n\n她坐在那里，抬起手拿茶几上的电话，高度，也是恰到好处。再看墙壁，虽然没有刷成自己最喜欢的粉色，但这种纯白的颜色，确实能给自己带来宁静。是啊，离婚一年了，似乎自己整天都是在焦躁中度过的。想了很久，她决定给老爸打个电话。\n\n那天已是很晚，老爸很久才接电话，她激动地说，爸，谢谢你，椅子坐着很舒服，是我坐过的最舒服的椅子。\n\n老爸在电话里低声笑着，这孩子这么晚了还打电话，搭错筋了吧，好好睡，明天还要早起呢。\n\n不过就是普通的话，她却觉得眼泪要掉出来了。她低低地在电话里说，爸，对不起。她知道，老爸不过是一个小公务员，不贪不占，并没有多少积蓄。\n\n又过几天，正在台里编片子的她，突然接到了老爸的电话，电话里，老爸沉默了一会儿，突然说，孩子，对不起，其实，在爸心里你们两个都是一样的，你买房子、装修，爸没本事，只能帮你这么多。\n\n说着，竟然哽咽。后来她才知道，那天老爸喝了不少酒。而她打电话的那天晚上，老爸一夜未眠。老爸对老妈说，不管怎么样，亲情不会骗人，总是能等来喜悦的理解的。\n\n她讲完了，手轻轻擦拭眼角，那里，有些欢喜的眼泪。\n\n\n--------------------------------------------------------------------------------\n\n# B\n\n我做创意总监时，曾经想招一名美编。老总开出了很苛刻的条件，要带来作品。\n\n天下大雪，这个城市好久不见这么大的雪了。刚上班不久，前台就告诉我，有人找，说是应聘的，可前台犹豫一下，继续说，看起来，又不太像是应聘的。\n\n让她进来，才发现是一位五十多岁的女人，腋下夹着一卷纸。看到我，有些不知所措，把纸递上来，说，这个作品是我女儿的，她今天没过来。\n\n我展开作品，是一幅3D设计图，看得出来，她女儿很有功底，比较符合我们的要求。我点点头，然后向她要了联系方式，随口说了句，你下去等消息吧。\n\n下班时间，我走出大楼，抬头看了一眼继续阴霾的天，突然，身边有个怯怯的声音在喊我，哎。\n\n回过头，竟然还是她。她在那里，很期待地看着我，你说过让我下来等消息的。\n\n我笑了，不是要电话号码了吗?是让你回去等消息。\n\n她怔了怔，似乎没想到是这样，继续问，是不是，有希望?\n\n关于希望，我不知怎么回答她，可是，从她的眼中，我看出了一点儿我不忍心回绝的东西。\n\n我点头，看她喜悦地走远。大雪的天气，大厅里没有空调，她怎么能足足站了四个小时呢?\n\n后来，我特意通知了那个女儿，不仅是因为她母亲，还因为她的才气。她过来时，是满脸不如意的模样。她与我们前台接待在一个学校里待过，有些熟悉，在那里唠叨。原来，她不想待在这个城市，一心想着去上海或是深圳，说那里才有自己发展的目标。\n\n我把前台喊过来，打听她的情况。前台接待说，她很小的时候，父母就离了婚，从小跟着母亲过，十分娇惯。上大学那几年，听同学说她母亲几乎年年都要去那个城市里小住几个月，租她大学附近的房子，因为放心不下她。\n\n我心里，已然明白。\n\n轮到她的时候，我让她设计一位母亲在冰天雪地里等孩子回家的画面，不用绘草稿，直接用语言表达。她确实小有才气，口若悬河，天气、时间、环境甚至连暖与寒的对比都说出来。\n\n身边的老板很满意。而就在此时，我说了句，你知道吗，你妈妈把你的图纸送来时，因为听错了一句话，在寒冷的大厅里等了四个小时。她沉默了，所有的人都沉默了。\n\n后来这个女孩留了下来，在公司聚会时与我谈心，她说，就在那一刻，自己突然明白了母亲一直在等什么，在等自己留下来，留在让她永远不会担心的地方。\n\n\n--------------------------------------------------------------------------------\n\n# C\n\n有这样一个小男孩，放学回家晚了，却还没有等到母亲下班。他知道，母亲常常加班加点，他就蹲在那里等。邻居劝他，先到我们家里吃饭吧，他不，他相信一定会等到母亲的。\n\n母亲很晚下班时，他的视线已经变得模糊了，可是看到胡同口的身影，还是快乐地飞奔上去，第一句话，妈，可等到你了。\n\n这句话几乎伴随了他的整个小学时期。说这句话时的兴奋、激动、喜悦，历历在目。\n\n长大后，他去了外地工作，买了车，买了房。也曾想过把父母接到这个城市里来生活，可或者是因为不自由，或是因为不方便，他告诉自己，再等等吧。\n\n城市离家不远，他每个星期回家一次，开着车，准时六点出发，八点到家。\n\n可有一天，因为帮一个朋友办事，他出发晚了，手机恰恰又没了电。往家里赶，偏偏在出城时遇到堵车，一切慢吞吞的事情挤在一起，他到晚上十一点钟才到家。快到家时，远远地，车灯前映出一个人影，焦急、紧张地张望。\n\n是母亲，他下车的第一步，母亲说了句，哎呀，可等到你了。\n\n一句话，就那样穿越了他数十年的时光，一下子扑面而来，让他几乎透不过气。\n\n他就那样，怔在了车前，良久，才走到帮着他提行李的母亲身前，抱住母亲，说了句，妈，我也等到你了。\n\n他把父母接到了城市里，每天按时下班回家。后来他换了大房子，结了婚，每次给下属开会或是聚餐，他总是要下属早点回家，他说，别让亲情等太久。\n\n这个人就是我的老公。\n\n\n--------------------------------------------------------------------------------\n\n# D\n\n还有一个小男孩，13岁就离开家，去寄宿制的学校读书，每个月回家一次；18岁考上大学之后，每年回家两次；22岁工作之后，每年回家一次。\n\n有一次，他妈妈对他说：“在我的印象里，总觉得你还13岁，之后的样子都模糊了…”\n\n\n--------------------------------------------------------------------------------\n\n# E\n\n另外一个小男孩，他的父亲一辈子都没有离开过家乡。在他考上北京的大学那年，父亲要去送他，顺便去看看外面的世界。小男孩拒绝了，因为让父亲送去学校，自己会觉得很不独立，很没有面子。小男孩放假回家，父亲再次要求送他。小男孩觉得自己还没有能力让父亲很愉快的在北京玩乐，所以再次拒绝。\n\n后来，父亲再也没有提过，送小男孩去学校的事。小男孩也暗自下决心，一定要拼出一片自己的天地，然后带父亲到北京好好的玩一玩。\n\n小男孩还没有毕业，父亲却生病了。很严重很严重的病。在医院照顾父亲的时候，小男孩的心都碎了。他恨自己，为什么要那么倔强，为什么就不能满足父亲那小小的心愿。他祈求着上苍，千万不要把父亲带走。\n\n再后来，父亲出院了，却留下了行动不便和语言障碍的后遗症。小男孩也回到学校，继续自己的学业。\n\n现在，小男孩仍旧不知道，自己何时才能带着父亲到北京到处看看。他只有流着泪，敲下这段文字，祈祷着那一天快点到来。\n","cover":"","link":"何谓情亲.html","preview":"\u003cp\u003e看见了四个感人至深的故事，我决定加上第五个。\u003c/p\u003e\n","title":"何谓亲情,何谓爱?"},{"content":"\n时间总在我不经意的时候从指尖流过。大脑里还沉浸在去年写的计划的时候，2009年的尾巴依然来临。先对照去年写的计划check一下自己完成的程度吧。\n\n*1. 好好做完SEI项目。*  \nSEI项目是有好好做，可惜没有做完。由于需求的不断变化，现在依然已经做成了下一个项目，只有对王老师说声sorry了。。。项目管理和敏捷开发方面的欠缺在SEI项目中暴露无遗。\n\n*2. 多看看内核，争取做几个patch出来。*  \n这个倒做的还不错，目前被接受的补丁有4个主线内核补丁，5个e2fsprogs主线补丁和3个btrfs-progs补丁。虽然补丁的质量还不高，但是足以拿来丰富我的简历了：）\n\n*3. 开始写blog，内容主要是内核Document目录下文档的理解和应用。*  \n这个完成的一般，只写下了两篇（这里和这里)blog。本月初计划的写一个数结构的系列日志的计划，也在小论文的各种打断下搁浅。\n\n*4. 及时行乐。不要再为一些无谓的事和家人，和女朋友生气。遇事多想想我还有哪些地方说的或做的不够好。生命短暂，我应该抓紧时间爱他们。*  \n我一直深爱着他们，但我相信我可以做得更好。\n\n*5. 坚持锻炼。大学以来身体越来越差，我要坚持打篮球，至少每周两次。*  \n这是完成得最差的一项，仅仅坚持了一个星期。我的执行力简直差得可怜。\n\n*6. 当然啦，2009年，暑假要去实习，年内我要找个好工作。*  \n这点算得上2009年最大的收获了。虽然经历的GSoC2009的打击，暑假我还是有幸获得了一份在腾讯北京soso产品中心的实习机会。一个多月的实习时间一点也不长，但是自己却学到了很多东西。工作方面，在各路好心人的帮助下，我有幸得到了淘宝，百度，腾讯和EMC四家公司的青睐。最终选择EMC，终于找到自己的兴趣和工作的结合点，这也不失为人生一大幸事。\n\n在新年的钟声敲响之前，我写下对2010年的自己的期望，希望明年年底再来看这份list的时候，不要像今年这么让自己脸红。\n\n1. 顺利毕业。\n2. 仔细看一本项目管理和一本敏捷开发的书，并写下读书笔记。\n3. 在一月份补完树结构的blog，在二月份着手btrfs的grub2 patch，从四月开始，业余时间加入到btrfs开发中。\n4. 加强执行力，要专注，不折腾。\n5. 加强锻炼，上班以后更要注意，可持续的开垦自己的劳动力。\n6. 在公司要好好跟身边的牛人们学习，争取在一年的时间内加入他们的行列。\n7. 认真对待女朋友和家人，不要再有小孩子脾气。\n","cover":"","link":"2009-summary.html","preview":"\u003cp\u003e像长风中的一艘巨艇,爱掌着舵,惊涛骇浪都不敢撒野,震撼着人生的边岸,走上征程.\u003c/p\u003e\n","title":"长风破浪会有时--我的2009年度总结"},{"content":"\n*by P.B.Shelley*\n\nThe awful shadow of some unseen Power  \nFloats through unseen among us,-visiting  \nThis various world with as inconstant wing  \nAs summer winds that creep from flower to flower,-  \nLike moonbeams that behind some piny mountain shower,  \nIt visits with inconstant glance  \nEach human heart and countenance;  \nLike hues and harmonies of evening,-  \nLike clouds in starlight widely spread,-  \nLike memory of music fled,-  \nLike aught that for its grace may be  \nDear, and yet dearer for its mystery.  \n\nSpirit of Beauty, that dost consecrate  \nWith thine own hues all thou dost shine upon  \nOf human thought or form,-where art thou gone?  \nWhy dost thou pass away and leave our state,  \nThis dim vast vale of tears, vacant and desolate?  \nAsk why the sunlight not for ever  \nWeaves rainbows o'er yon mountain-river,  \nWhy aught should fail and fade that once is shown,  \nWhy fear and dream and death and birth  \nCast on the daylight of this earth  \nSuch gloom,-why man has such a scope  \nFor love and hate, despondency and hope?  \n\nNo voice from some sublimer world hath ever  \nTo sage or poet these responses given-  \nTherefore the names of Demon, Ghost, and Heaven,  \nRemain the records of their vain endeavour,  \nFrail spells-whose uttered charm might not avail to sever,  \nFrom all we hear and all we see,  \nDoubt, chance, and mutability.  \nThy light alone-like mist oe'er the mountains driven,  \nOr music by the night-wind sent  \nThrough strings of some still instrument,  \nOr moonlight on a midnight stream,  \nGives grace and truth to life's unquiet dream.  \n\nLove, Hope, and Self-esteem, like clouds depart  \nAnd come, for some uncertain moments lent.  \nMan were immortal, and omnipotent,  \nDidst thou, unknown and awful as thou art,  \nKeep with thy glorious train firm state within his heart.  \nThou messgenger of sympathies,  \nThat wax and wane in lovers' eyes-  \nThou-that to human thought art nourishment,  \nLike darkness to a dying flame!  \nDepart not as thy shadow came,  \nDepart not-lest the grave should be,  \nLike life and fear, a dark reality.  \n\nWhile yet a boy I sought for ghosts, and sped  \nThrough many a listening chamber, cave and ruin,  \nAnd starlight wood, with fearful steps pursuing  \nHopes of high talk with the departed dead.  \nI called on poisonous names with which our youth is fed;  \nI was not heard-I saw them not-  \nWhen musing deeply on the lot  \nOf life, at that sweet time when winds are wooing  \nAll vital things that wake to bring  \nNews of birds and blossoming,-  \nSudden, thy shadow fell on me;  \nI shrieked, and clasped my hands in ecstasy!  \n\nI vowed that I would dedicate my powers  \nTo thee and thine-have I not kept the vow?  \nWith beating heart and streaming eyes, even now  \nI call the phantoms of a thousand hours  \nEach from his voiceless grave: they have in visioned bowers  \nOf studious zeal or love's delight  \nOutwatched with me the envious night-  \nThey know that never joy illumed my brow  \nUnlinked with hope that thou wouldst free  \nThis world from its dark slavery,  \nThat thou-O awful Loveliness,  \nWouldst give whate'er these words cannot express.  \n\nThe day becomes more solemn and serene  \nWhen noon is past-there is a harmony  \nIn autumn, and a lustre in its sky,  \nWhich through the summer is not heard or seen,  \nAs if it could not be, as if it had not been!  \nThus let thy power, which like the truth  \nOf nature on my passive youth  \nDescended, to my onward life supply  \nIts calm-to one who worships thee,  \nAnd every form containing thee,  \nWhom, Spirit fair, thy spells did bind  \nTo fear himself, and love all human kind.  \n","cover":"","link":"hymn-to-intellectual-beauty.html","preview":"\u003cp\u003e这首诗是Shelley同Lord Byron在日内瓦湖(Lake Geneva)上泛舟时写出的，是Shelley把湖畔诗人的(Wordsworthian)的自然观结合到自己的作品中的一次重要尝试。\u003c/p\u003e\n","title":"Hymn to Intellectual Beauty"},{"content":"\n*by P.B.Shelley*\n\nO WILD West Wind, thou breath of Autumn's being—  \nThou from whose unseen presence the leaves dead  \nAre driven, like ghosts from an enchanter fleeing,  \nYellow, and black, and pale, and hectic red,  \nPestilence-stricken multitudes!—O thou   \nWho chariotest to their dark wintry bed  \nThe wingèd seeds, where they lie cold and low,  \nEach like a corpse within its grave, until  \nThine azure sister of the Spring shall blow  \nHer clarion o'er the dreaming earth, and fill   \n(Driving sweet buds like flocks to feed in air)  \nWith living hues and odours plain and hill—  \nWild Spirit, which art moving everywhere—  \nDestroyer and Preserver—hear, O hear!  \n  \n  Thou on whose stream, 'mid the steep sky's commotion,   \nLoose clouds like earth's decaying leaves are shed,  \nShook from the tangled boughs of Heaven and Ocean,  \nAngels of rain and lightning! they are spread  \nOn the blue surface of thine airy surge,  \nLike the bright hair uplifted from the head   \nOf some fierce Mænad, ev'n from the dim verge  \nOf the horizon to the zenith's height—  \nThe locks of the approaching storm. Thou dirge  \nOf the dying year, to which this closing night  \nWill be the dome of a vast sepulchre,   \nVaulted with all thy congregated might  \nOf vapours, from whose solid atmosphere  \nBlack rain, and fire, and hail will burst:—O hear!  \n  \n  Thou who didst waken from his summer-dreams  \nThe blue Mediterranean, where he lay,   \nLull'd by the coil of his crystalline streams,  \nBeside a pumice isle in Baiæ's bay,  \nAnd saw in sleep old palaces and towers  \nQuivering within the wave's intenser day,  \nAll overgrown with azure moss, and flowers   \nSo sweet, the sense faints picturing them! Thou  \nFor whose path the Atlantic's level powers  \nCleave themselves into chasms, while far below  \nThe sea-blooms and the oozy woods which wear  \nThe sapless foliage of the ocean, know   \nThy voice, and suddenly grow gray with fear  \nAnd tremble and despoil themselves:—O hear!  \n  \n  If I were a dead leaf thou mightest bear;  \nIf I were a swift cloud to fly with thee;  \nA wave to pant beneath thy power, and share   \nThe impulse of thy strength, only less free  \nThan thou, O uncontrollable!—if even  \nI were as in my boyhood, and could be  \nThe comrade of thy wanderings over heaven,  \nAs then, when to outstrip thy skiey speed   \nScarce seem'd a vision,—I would ne'er have striven  \nAs thus with thee in prayer in my sore need.  \nO lift me as a wave, a leaf, a cloud!  \nI fall upon the thorns of life! I bleed!  \nA heavy weight of hours has chain'd and bow'd   \nOne too like thee—tameless, and swift, and proud.  \n  \n  Make me thy lyre, ev'n as the forest is:  \nWhat if my leaves are falling like its own!  \nThe tumult of thy mighty harmonies  \nWill take from both a deep autumnal tone,   \nSweet though in sadness. Be thou, Spirit fierce,  \nMy spirit! be thou me, impetuous one!  \nDrive my dead thoughts over the universe,  \nLike wither'd leaves, to quicken a new birth;  \nAnd, by the incantation of this verse,   \nScatter, as from an unextinguish'd hearth  \nAshes and sparks, my words among mankind!  \nBe through my lips to unawaken'd earth  \nThe trumpet of a prophecy! O Wind,  \nIf Winter comes, can Spring be far behind?\n","cover":"","link":"ode-to-the-west-wind.html","preview":"\u003cp\u003eIf Winter comes, can Spring be far behind?\u003c/p\u003e\n","title":"Ode to the West Wind"},{"content":"\n*by William Butler Yeats*\n\n\"Though to my feathers in the wet,  \nI have stood here from break of day.  \nI have not found a thing to eat,  \nFor only rubbish comes my way.  \nAm I to live on lebeen-lone?'  \nMuttered the old crane of Gort.  \n\"For all my pains on lebeen-lone?'  \n\nKing Guaire walked amid his court  \nThe palace-yard and river-side  \nAnd there to three old beggars said,  \n\"You that have wandered far and wide  \nCan ravel out what's in my head.  \nDo men who least desire get most,  \nOr get the most who most desire?'  \nA beggar said, \"They get the most  \nWhom man or devil cannot tire,  \nAnd what could make their muscles taut  \nUnless desire had made them so?'  \nBut Guaire laughed with secret thought,  \n\"If that be true as it seems true,  \nOne of you three is a rich man,  \nFor he shall have a thousand pounds  \nWho is first asleep, if but he can  \nSleep before the third noon sounds.\"  \nAnd thereon, merry as a bird  \nWith his old thoughts, King Guaire went  \nFrom river-side and palace-yard  \nAnd left them to their argument.  \n\"And if I win,' one beggar said,  \n'Though I am old I shall persuade  \nA pretty girl to share my bed';  \nThe second: \"I shall learn a trade';  \nThe third: \"I'll hurry' to the course  \nAmong the other gentlemen,  \nAnd lay it all upon a horse';  \nThe second: \"I have thought again:  \nA farmer has more dignity.'  \nOne to another sighed and cried:  \nThe exorbitant dreams of beggary.  \nThat idleness had borne to pride,  \nSang through their teeth from noon to noon;  \nAnd when the sccond twilight brought  \nThe frenzy of the beggars' moon  \nNone closed his blood-shot eyes but sought  \nTo keep his fellows from their sleep;  \nAll shouted till their anger grew  \nAnd they were whirling in a heap.  \n\nThey mauled and bit the whole night through;  \nThey mauled and bit till the day shone;  \nThey mauled and bit through all that day  \nAnd till another night had gone,  \nOr if they made a moment's stay  \nThey sat upon their heels to rail,,  \nAnd when old Guaire came and stood  \nBefore the three to end this tale,  \nThey were commingling lice and blood  \n\"Time's up,' he cried, and all the three  \nWith blood-shot eyes upon him stared.  \n\"Time's up,' he eried, and all the three  \nFell down upon the dust and snored.  \n\n'Maybe I shall be lucky yet,  \nNow they are silent,' said the crane.  \n'Though to my feathers in the wet  \nI've stood as I were made of stone  \nAnd seen the rubbish run about,  \nIt's certain there are trout somewhere  \nAnd maybe I shall take a trout  \nbut I do not seem to care.'  \n","cover":"","link":"three-beggars.html","preview":"\u003cp\u003eFor all my pains on lebeen-lone.\u003c/p\u003e\n","title":"The Three Beggars"},{"content":"\n又是一篇迟到的blog，我似乎总在记录很久以前的事情？\n\nBeijingLSF是由Coly Li，Ma Tao, Wu FengGuang等国内一线的Linux内核IO相关的开发者发起的Linux存储与文件系统研讨会。为了节省旅行开销，这次研讨会于2009年10月24日－－CLK的前一天在北邮教三召开。我有幸作为志愿者全程参与了此次盛会。\n\n在我之前，已经有ColyLi和Wang Xu两位分别写了blog记录这次会议，连接如下：\n\n-   http://blog.coly.li/?p=24\n-   http://wangxu.me/blog/?p=275\n\n如果对当日的PP感兴趣，请看这里:http://picasaweb.google.com/colyli/BeijingLSF2009\n\n当日的日程如下：\n\n-   9:20 – 10:00  Distributed Lock Manager - lead by Coly Li\n-   10:20-11:00  Clustering File System - lead by Tao Ma\n-   11:20-12:00  Shared Storage and Snapshot - lead by Xinwei Hu\n-   13:30-14:10  VFS readahead/writeback - lead by Fengguang Wu\n-   14:30-15:10  I/O Controller and I/O Bandwidth - lead by Jianfeng Gui\n-   15:30-16:10  Interaction with Industry - lead by Lenovo engineers\n-   16:30-17:10  Light Talk and Summary - 2 minutes for each\n---\n由于当志愿者的关系，我并没有完整的听到(偷:)所有的讨论，这里记录下我的见闻。\n\n第一个talk是Coly Li介绍讨论分布式锁管理中目前遇到的问题，大家都觉得Coly选择了ocfs2中最困难的部门，对他颇为同情，同时对一些问题的细节展开了讨论。这部门我一直做打杂，没怎么听到（残念。。。）\n\n第二个话题本来是马涛主持讨论集群文件系统，大家在这个talk之前决定来次全场的自我介绍，而自我介绍阶段大家又花了不少时间围观apt大牛，导致这个环节的时间不是很充足。好在第二天的CLK上马涛做了同样的演讲，这里我可以来八一八。目前马涛在ocfs2上实现了reflink特性，这个特性的作用是把新文件的元数据指向原文件的同一块数据块，同时用引用计数记录数据块的引用数，这样实现了多个文件共享同一个物理块，达到了节省磁盘空间的目的，与EMC的dedup有异曲同工之效。直觉上reflink特性在btrfs这样的树形文件系统中更为自然，而在ocfs2上的实现估计会有不小改动。一个好消息是reflink在将来会成为一个系统调用，这样别的文件系统也可以去实现类似的功能（btrfs上已经有类似的功能了，使用BTRFS_IOC_CLONE这个ioctl实现）。\n\n第三个话题是胡欣慰主持讨论共享存储和快照。这部分重点阐释了drbd, dm, md的区别。想来暑期实习的时候向mentor推荐lvm，他问我有什么好处，当时没能把他说服。现在看来，lvm最吸引人的地方应该是快照功能，腾讯的OP似乎还没有意识到lvm的好处，有机会去给他们科普科普:)\n\n第四个话题是吴峰光介绍VFS的预读和写回。这部分的代码我也在之前看过一些，所以听起来还算不怎么吃力。其中也接触到了一些新的概念，比如kernel预读的抖动等。内核预读算是文件系统和内存管理两个子系统的交集。印象最深的是吴的实现比以前更好的是把预读的位置保存在了不同的位置，使得一个文件能够有多条预读流。\n\n第五个话题是归剑峰主持介绍cgroups的IO controller。以前对cgroups只是听说过，在听了归的介绍后，大致对IO controller的目的有了些了解，但是实现细节还是没听懂。好在后来在吃饭的时候有幸和cgroups的maintainer李泽帆坐到了一起，乘机抓了一阵狂问，总算把自己的疑惑解释的差不多了。之前不能理解的问题主要是IO控制器并不能知道当时磁盘的读写速度（因为磁盘寻道的原因，读写速度是不稳定的）。在请教了李泽帆后明白了IO控制器并不通过绝对读写速度来控制进程IO，而是通过IO的时间和读写的sector数目来控制。cgroups是个很有用的子系统，特别是在大规模计算的时候执行资源控制，以后可以多关注。\n\n第六个话题是联想研究院的卢亿雷主持讨论他们在网盘系统开发中遇到的实际问题。这部分大家主要关注性能和数据一致性上的问题。\n\n六个话题结束后是lighting talk,大家纷纷对组委会表达了谢意并期待明年的BeijingLSF。有好几位主动提出明年要提供赞助，足见大家的热心。会后由Intel赞助，大家一起去全聚德腐败了一顿，想不到我的第一次全聚德，居然是和这么多牛人一起吃的，太激动了~~~\n\n总结起来，这算是国内Linux IO相关的内核开发者的第一次专门讨论会，到来的也都是活跃在Linux内核开发的一线开发者，能有这么一次近距离接触牛人的机会，真的要感谢Coly和来参见BeijingLSF的各位大牛，以及另外一位志愿者李劼，当然还有热心来帮忙的我的gf :)\n\n附录，参会人员名单：  \nBo Yang, Coly Li, Fengguang Wu, Herbert Xu, Jeff He, Jeff Liu, Jiaju Zhang, Jianfeng Gui, Michael Fu, Tao Ma, Tiger Yang, Xiao Luo, Xinwei Hu, Xu Wang, Yang Li, Yawei Niu, Yilei Lu, Yu Zhong, Zefan Li, Zheng Yan.\n\n![参会人员合影](/images/beijinglsf2009.jpg)\n","cover":"","link":"2009-beijinglsf.html","preview":"\u003cp\u003e第一届BeijingLSF (后来更名为CLSF, China Linux Storage and Filesystem workshop),国内最具技术含量的linux IO讨论会.有幸作为志愿者全程参与了会议的准备和召开.\u003c/p\u003e\n","title":"2009 BeijingLSF小记"},{"content":"\n其实都过去半个月了，自己一直懒，没有写总结。。。\n\n简单写一点吧。实验室师兄内推的，所以免去了笔试环节。内推的时候我以为至少会10月份再面试，心想着不急，还有十一长假可以准备呢，结果刚刚第二天就通知下周面试，着实让我急了一阵。不过还好，项目不是很紧，所以花了不少时间去准备，虽然准备的问题基本没有问到。。。\n\n通知的下午2点普天7层面试，我到早了点，发短信找推荐我的师兄聊了会。师兄跟我特别强调自己会什么就说什么，不会就说不会，不要吹牛。这点我之前在看面经的时候也看到过。\n\n一面是位很和蔼的GG，这天面试的人很多，我们就在一个花台旁边坐下来聊了起来。问的都是分布式上的东东，主要集中在DFS的设计上，说到了一些Google的DFS可以优化的地方。其他的就问了问环境变量是如何工作的，这个问题正好我准备到了，于是blabla一番。这时面试地点换到了10层。10层仍然没有位置，于是找了个空沙发两人坐着又blabla了一会。\n\n一面结束后GG让我在那等一下，还有面试。哦，这里8一8百度的面试流程吧。之前我看的面经里面也有说到，一共是三面，一般来说三面一天面完，如果三个面试官都觉得可以的，就当场给offer，如果都觉得不行的话就当场据掉，如果意见不统一的话就进pending list。\n\n二面是位JJ，也非常nice。一来就说我的background和他们的需求非常match，弄得我心里一阵感激。JJ上来也问分布式，简单blabla一番后，开始问项目。因为我有写对Linux文件系统比较熟悉，就问了几个文件系统相关的问题，如ext2/3/4的区别，ext4的数据块分布结构，ext3如何保证磁盘数据一致性，日志文件系统是否能够完全保证数据一致性等问题。完了还说部门有分布式和kernel两个组，问我想去那个组，能不能去实习，说如果能去实习的话对以后拿户口有帮助之类，心里再次泛起一阵感激。\n\n二面结束后让我再等一下，还有三面。三面过来了两个GG，一看就知道是技术大牛的那种。前两面一直比较轻松，我心想这下危险了。三面从简历上的项目经历问起，这部分没什么问题，于是blabla。项目问完后就开始问内核，ext4的extent tree在磁盘上是什么数据结构。说实话这个问题我一直没考虑过。。。想了一会儿后放弃。。。出来之后才觉得自己当时傻了，简单画一画就知道是btree了。。。sigh。不过这只是开头，然后又问了ext2和ext3在块分配算法上有什么区别。在ext2分区上，命令`touch a`会让内核完成哪些操作，`echo \"hello\" \u003e\u003e a`又会完成哪些操作，`for i in $(seq 10000);do echo \"hello\" \u003e\u003e a;done`又会完成哪些操作。接着问ext4在这方面有什么改进，delayed allocator和以前的allocator有什么区别，有哪些好处和劣势,mballocator的分配算法等。还问了ext4的delayed allocator造成空文件的原因，这个问题以纠正我长久以来对delayed allocation的一个误区结束。这之后就没有什么问题了，kernel team的那位GG问我有没有什么要问的，我自我感觉表现的不怎么样，还是鼓起勇气问了下什么时候能出结果，GG说要等他们商量之后才知道。\n\n三面完了之后又过来了一位帅GG，自我介绍中知道原来是系统部的技术经理，仰视ing。寒暄了一阵后GG说现在还决定不了，要到10月中旬hr部门才能发正式的offer。我心里一下就凉了，想完了，这下进waiting list了。GG也看出了我的表情变化，微笑着说不过现在可以给我一个口头的。想不到leader还挺会逗人的。。。之后还是问有没有什么问题，能不能去实习之类的。然后留了下联系方式，说有什么问题可以直接给他打电话，再次感激ing。然后leader送我出去，我不是很放心，出门的时候再次跟leader确认了一下，leader说应该没问题，自己才放心一些。\n\n下电梯后给师兄发了个短信，说拿到口头offer了，改天请师兄吃饭。\n","cover":"","link":"百度系统部面经.html","preview":"\u003cp\u003e其实都过去半个月了，自己一直懒，没有写总结。。。\u003c/p\u003e\n","title":"百度系统部面经"},{"content":"\nIt is said that a starting \"so\" will give me valuable micro-seconds to put one more thought on a rational article.\n\nSo, I'm gonna blog about my summer internship at soso product center of Tencent Inc, finally.\n\n标题太严肃，所以酸一段E文，调节调节:)\n\n在腾讯的实习时间不长，从7月22日入职到8月30日离开，前后只有一个月多点。但是，我认为我度过了一段很充实，也很开心的时间。\n\n运营管理组是个非常有活力的项目组。我的mentor（貌似也是组内很多人的mentor）kypoyin非常有才华和远见，他一手主导和推动了分布式文件系统和mapreduce项目的设计和开发，而且总是能站在一定的高度看问题，把很大的一个工程梳理得井井有条。在他身边做事会有种自己也跟着变得更聪明的感觉：）\n\n组长dave是位很和蔼的头儿，对下属基本使用自觉管理方法。soso自己的搜索引擎上线的时候还亲自连续通宵值班，敬业精神是在可敬。\n\nqqzhang属于特别勤奋的那种，据说工作一年多，绝大部分时间是晚上10点回家。我查过svn log，qqzhang贡献了将近一半的commit，绝对猛男！我写complexIO的时候kypo很忙，很多问题都是找qqzhang帮忙解决的，再次真诚地感谢一下：）\n\nreno不愧是北大高才生，基础超级扎实，对所有自己涉猎的问题都理解深刻，各种问题到了他这里都不再是问题，名副其实的问题终点站。\n\nvino姐姐是组内的开心果，我报到的第一天的午饭就是vino带我吃的桂林米粉，第一次吃这么好吃的米粉。vino人非常好，特别亲切，一起出去吃饭的时候总是很大方的贡献自己的iphone给大家玩游戏，某次还突然跟我说你去买一个iphone吧，弄得我一脸迷茫。可爱之极。\n\nxuekouying(抱歉因为觉得你的名字很好听，我一直不记得你的nickname)是坐在我帮边的一位很踏实的JJ，对于各种自己不清楚的问题都很努力地去学习。记得高中的时候班主任告诉我们什么样的人可以去做科学家的时候说，不是最聪明的人也不是知识最丰富的人可以做科学家，只有不断探索，不断学习的人才能成为科学家。相信xuekouying会在数据挖掘的路上越走越好。\n\nwarmer是在我入职两个星期后从深圳培训回来的，emacs大牛。一直认为会玩emacs的都是神人，warmer果然不负这个论断。warmer的奢侈品小键盘也着实让大家眼红了一把，米人啊！\n\n其他的同事因为不是很熟悉，这里就不一一列举了。大家平时最多的消遣活动就是玩桌上足球。我第一次玩的时候是和kypo搭档，结果被reno和qq两人剃了光蛋，真是对不起kypo，害得你陪着我成为组内的垫底记录保持者。。。不过我经过一个月的锻炼，已经可以在后卫线上独当一面了。当然前锋还不行，中场有五个小人，我还控制不过来。让我非常感动的是，在我离开的那天晚上，组内的同事们还非常热心的开party为我送别。一行人一起K歌然后出去吃夜宵直到11点才散去。这真是个让人舍不得的集体。\n\n实习的这段时间里自己也确实做了些事情，大部分时间是工作到晚上9点以后才回去的，偶尔周末也加加班，完成的任务包括：\n\n1. DFS(Distributed File System)与本地文件系统的接口封装\n2. DFS merge功能的设计实现\n3. DFS 移植到FUSE (Filesystem in USErspace)\n4. mapreduce接口类序列化\n5. mapreduce的缓存服务DataCache的设计和实现\n\n回头看一下，这里面的1和4后来都被返工了。1是因为自己当时对接口也不熟悉设计得太烂(sigh。。。)。4是因为mapreduce的接口最初设计得不是很合理，后来完全推翻重做。通过这些任务，我对google的GFS和mapreduce设计框架有了大致的认识，了解到这样的大型基础架构的设计要点，可以说在分布式存储和计算方面获得了很好的实践经验。当然也犯过错误，我对DFS client的一个判断语句的修改导致不能传输大文件，这个bug甚至影响到了我离开后的一个演示任务，实在是对不住各位同事的努力，以后有机会一定请大家吃饭赔罪。这个问题也反映出我对自己的代码测试不够充分的问题，这点是我必须要注意的，以后对提交的代码一定要做充分的测试。\n\n总的说来，这段时间我过得非常开心，尽管有时候很忙也有些累，但是过得很充实，能够真真切切地感受到自己的成长。一个不断成长的自己，这也是我一直的追求。感谢上天给我这么好的机会，和一群很有卓越见识且心地善良的人一起工作，回想起来，这也是我当初选择计算机专业的原因。最后套用vino的blog标题做结束语，C'est la vie，我喜欢这样的生活。\n","cover":"","link":"腾讯公司soso产品部门暑期实习总结.html","preview":"\u003cp\u003e多年后我才能明白,和一群有趣又有激情的人专注地做一件事情,是多么难能可贵的经历.\u003c/p\u003e\n","title":"腾讯公司soso产品部门暑期实习总结"},{"content":"\nI've been asked several time in interviews how libc implements malloc function. So here I give the a simple summary.\n\nFirst, I'd like to copy some simple malloc implementation found from Internet.\n\n```\nsimple explaintion of malloc:\nstruct mem_control_block {\n int is_available;\n int size;\n};\n1. If our allocator has not been initialized, initialize it.\n2. Add sizeof(struct mem_control_block) to the size requested.\n3. start at managed_memory_start.\n4. Are we at last_valid address?\n5. If we are:\nA. We didn't find any existing space that was large enough\n-- ask the operating system for more and return that.\n6. Otherwise:\nA. Is the current space available (check is_available from\nthe mem_control_block)?\nB. If it is:\ni) Is it large enough (check \"size\" from the mem_control_block)?\nii) If so:\na. Mark it as unavailable\nb. Move past mem_control_block and return the pointer\niii) Otherwise:\na. Move forward \"size\" bytes\nb. Go back go step 4\nC. Otherwise:\ni) Move forward \"size\" bytes\nii) Go back to step 4\n```\n\nHowever, the real-world in libc in much more complicated and thus much more efficient.  \nSince 2.3 release GNU C library (glibc) uses a modified ptmalloc2, based on \"Doug Lea's Malloc\" (dlmalloc), which is a lock free implementation.\n\nQuoting glibc/malloc/malloc.c:\n```\n  The main properties of the algorithms are:\n  * For large (\u003e= 512 bytes) requests, it is a pure best-fit allocator,\n    with ties normally decided via FIFO (i.e. least recently used).\n  * For small (\u003c= 64 bytes by default) requests, it is a caching\n    allocator, that maintains pools of quickly recycled chunks.\n  * In between, and for combinations of large and small requests, it does\n    the best it can trying to meet both goals at once.\n  * For very large requests (\u003e= 128KB by default), it relies on system\n    memory mapping facilities, if supported\n```\nThe differences between memory allocated by sbrk() and mmap() are:\n\n1.  A released memory map does not create any \"hole\" that would need to be managed.\n2.  mmaped regions must be page-aligned.\n3.  invoking mmap and mfree is much slower than carving out an existing chunk of memory, because mmap will force kernel to zero out the memory it returns, which eats a lot of cache and memory bandwidth.\n\nThe basic memory structure in glibc malloc is:\n```\nstruct malloc_chunk {\n\n  INTERNAL_SIZE_T      prev_size;  /* Size of previous chunk (if free).  */\n  INTERNAL_SIZE_T      size;       /* Size in bytes, including overhead. */\n\n  struct malloc_chunk* fd;         /* double links -- used only if free. */\n  struct malloc_chunk* bk;\n\n  /* Only used for large blocks: pointer to next larger size.  */\n  struct malloc_chunk* fd_nextsize; /* double links -- used only if free.  */\n  struct malloc_chunk* bk_nextsize;\n};\n```\nThere are two core elements in dlmalloc: Boundary tags and bins.\n\nBasically, boundary tags are how memory chunks look like, and bins are how memory chunks are managed.\nAn allocated chunk looks like this (boundary tags):\n\n```\n    chunk-\u003e +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of previous chunk, if allocated            | |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of chunk, in bytes                       |M|P|\n      mem-\u003e +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             User data starts here...                          .\n            .                                                               .\n            .             (malloc_usable_size() bytes)                      .\n            .                                                               |\nnextchunk-\u003e +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of chunk                                     |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n\n    chunk-\u003e +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Size of previous chunk                            |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    `head:' |             Size of chunk, in bytes                         |P|\n      mem-\u003e +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Forward pointer to next chunk in list             |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Back pointer to previous chunk in list            |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n            |             Unused space (may be 0 bytes long)                .\n            .                                                               .\n            .                                                               |\nnextchunk-\u003e +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    `foot:' |             Size of chunk, in bytes                           |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n```\n**Bins**: chunk in a list is known to be preceeded and followed by either inuse chunks or the ends of memory.\n\n**Fastbins**: A single-linked LIFO array of lists holding recently freed small chunks. Chunks in fastbins keep their inuse bit set. malloc_consolidate releases all chunks in fastbins and consolidates them with other free chunks.\n\n**the \"unsorted\" bin**: chunks being placed on it in free (and malloc_consolidate), and taken off (to be either used or placed in bins) in malloc.\n\n**Binmap**: a bitvector recording whether bins are definitely empty so they can be skipped over during during traversal.\n","cover":"","link":"glibc-malloc.html","preview":"\u003cp\u003eI\u0026rsquo;ve been asked several time in interviews how libc implements malloc function. So here I give the a simple summary.\u003c/p\u003e\n","title":"glibc malloc implementation"},{"content":"\n到场人员名单：\n```\ngmoto \u0026 gery: 做gsoc做了五个月，终于做完了，前几个月的苦瓜脸终于变成了笑脸，今天粉丝团就来了一个\nhzmangel: blabla,english 太快没有听清楚，未婚\ncolyli: 忽悠大家来聊天，最近推的招牌是gmoto，希望大家多宣传\nJP: 1999 on gnome, preload oem work currently, Novell Linux desktop manager\nxt9876: 电子科学与技术，大四，完了三年Linux，在北邮人论坛，做过S3接口计算，平时做Linux相关，未婚\nwentws: xt9876同学，选了唐sir的课，对Linux感兴趣，接触一年左右，unmarried\njackydude: 来了几次了，对coly, gmoto印象深刻，做过嵌入式，对gmoto工作非常感兴趣，gmoto粉丝\njokerlee: 玩Linux快三年了，对底层感兴趣，最近在看kernel\nepico: from Novell, work on firefox for suse Linux.\nbergwolf: 计算机研三，未婚\neMBee: BLUG友人\nrobert: 从Intel来的嘉宾\n```\n---\n\n感觉离上次版聚已经很久了的样子，呵呵。虽然已经到了八月的倒数第二天，我们八月的版聚终于还是成形。这次来的人不多，可是丝毫没有减少我们对开源对技术的兴趣。大家都非常踊跃地参与讨论，思想碰撞中有了不少美妙的火花。\n\n\n第一个topic是gmoto同学总结自己的GSoC。gmoto通过从一个夏天的努力（据gmoto本人批注，实际上这个夏天从春天开始，到秋天结束），终于顺利地完成了把opensuse移植到gdium上的任务。gmoto的面容也从开始的苦瓜脸（quoting colyli）转变成为现在欢乐的笑容。gmoto在大概一个半小时的时间中，从自己编译kernel，交叉编译base system开始，如数家珍地介绍了自己在这段时间里经历的种种磨难和考验，然后成功演示了opensuse on gdium。看着自己学生的工作成果在真机上顺利运行，coly同学露出了满意的笑容。同时恭喜gmoto同学顺利通过GSoC final evaluation!\n\n第二个topic是临时决定的－－由来自BLUG的友人eMBee介绍最近大家身边将要发生的一些events。首先是9月5日的coding for fun，然后是9月8日的blug meeting（big news：这次的blug meeting我们将迎来libc的maintainer Ulrich Drepper），接着是今年的free software day（eMBee诚邀大家去FSD演讲topic，有兴趣的童鞋请联系eMBee@freenode.net）。最后eMBee介绍了一个宣传使用互联网和开源软件做学术研究的组织wiserU－－他们目前需要懂计算机的同学去帮忙他们宣传，有兴趣的同学请联系eMBee）\n\n第三个topic是colyli介绍今年夏天在中科院参加的一个CPU cache design的training。coly从最简单的direct map cache介绍起，深入浅出地介绍了包括set-associate，multicolum cache在内的几种经典cache。由于在场的同学对这方面都有所了解，大家针对colyli的介绍展开了深入讨论，同时colyli沉稳地接受大家的挑战并一一解答了在座各位心中的疑惑。\n\n总的来说，这次久违的版聚再次给大家一种不虚此行的感觉。特别是在讨论cache design的过程中，详细的回味了早就丢在脑后的计算机组成原理，同时学习到了multicolum这种设计。感谢三位同学的精彩演讲，期待下次版聚。\n","cover":"","link":"2009年8月linuxf版聚总结.html","preview":"\u003cp\u003e版聚总结不能少!\u003c/p\u003e\n","title":"2009年8月linuxfb.org版聚总结"},{"content":"\n注定是无收成的一年啊。。。sigh\n\n\u003e Dear Peng Tao,\n\u003e \n\u003e Thanks very much for your submission to the openSUSE Conference. Unfortunately, we were not able to accept your talk for this year's event. We appreciate the submission, but we had many great proposals and were only able to accept a limited number of proposals. Thanks very much for your interest, and we hope to see you in September at the conference. Note that we still offer birds of a feather sessions, and you are welcome to present your topic as part of the \"unconference.\"\n\u003e \n\u003e Best,\n\u003e \n\u003e Joe Brockmeier\n","cover":"","link":"opensuse-conf-reject.html","preview":"\u003cp\u003esigh.\u003c/p\u003e\n","title":"OpenSUSE conference proposal被拒"},{"content":"\n我却没有看到。\n\n传说百年一遇的天文奇景，东起西藏，西至上海－－北京只能可怜巴巴的看到偏食，像在一次盛大的聚会中蹭食的小丑一样－－我却没有看到，因为天空阴云密布。现在仍然对小时候看到日偏食的情景记忆犹新－－火红的太阳从东方升起来的时候就像被咬了一口一样，古人的“天狗食日”说还真是形象。\n\n日食本是一件非常让人兴奋的事情，今天的我却怎么也兴奋不起来。不知是不是因为最近心烦的事情太多，导致无心去欣赏生活；抑或对生活已然麻木，任百年奇观亦无法提起兴趣。明明上周在雍和宫就下定决心要平静下来的，我还是太过浮躁，导致对日食这样的事情也提不起兴趣。活的如行尸走肉。\n\n对我而言，7月22日并不是个好日子。去年的今天，是父亲发病的日子。现在想起母亲给我说的当时的情景，我仍然感觉触目惊心，如梦，心痛。那日，父亲正在打牌，突然犯病，从椅子。。。原谅我，我仍然无法心平气和地把当时的情景记录下来。这是我一辈子的记忆，虽然我没有用文字记载它。\n\n如今，生活多是无赖，也鲜有好消息让人兴奋。都说穷人的孩子早当家，我虽然已经到了当家的年龄，却总是在寻找逃避的借口。一直知道会有那么一日，不再拥有父母的保护伞，不再能够在受伤时回到温暖的避风港，不再听到失败是成功之母的教诲，我会不得不撑起一片自己的天空。\n\n那日，即是今日！  \nThat day, is today!\n\n今天，去腾讯soso产品部门报到了。team有两个方向－－数据挖掘和分布式文件系统。一直认为数据挖掘的水太深，我这样肤浅的人是不适合的，所以在mentor问到自己将来的打算的时候，明确地说了希望加入到分布式文件系统组中。最近一年来在文件系统方面的积累，希望能在这次的暑期实习中有所体现，即使最后没能留在腾讯，对我而言也算是不小的安慰了。\n","cover":"","link":"eclipse.html","preview":"\u003cp\u003e一个新的开始.\u003c/p\u003e\n","title":"2009年7月22日,日全食"},{"content":"\nFrom [an interview from Linux journal](http://www.linux-mag.com/id/7416/1/).  \nKeep it in mind...\n\n\u003e Keep talking to other file system developers face to face, keep experimenting with new file systems, keep talking to people in research and academia, keep paying attention to hardware trends. The way to avoid the “file systems are a solved problem” echo chamber is to stay in touch with both each other and the outside world.\n","cover":"","link":"valeries-advice-to-fs-developpers.html","preview":"\u003cp\u003eKeep this in mind.\u003c/p\u003e\n","title":"Valerie's Advice to FS Developers"},{"content":"\n真正意义上的第一个kernel patch（之前给documentation有一个patch，但那不算coding:)。值得纪念的日子，留博一篇。\n\n在ext4 w/o journal模式下，ext4 online resize的两个ioctl不应该提交清空journal的要求，否则会造成一个null pointer的kernel oops。\n\n```\ncommit ac046f1d6121ccdda6db66bd88acd52418f489b2\nAuthor: Peng Tao \nDate: Mon Jul 13 09:30:17 2009 -0400\n\next4: fix null handler of ioctls in no journal mode\n\nThe EXT4_IOC_GROUP_ADD and EXT4_IOC_GROUP_EXTEND ioctls should not\nflush the journal in no_journal mode. Otherwise, running resize2fs on\na mounted no_journal partition triggers the following error messages:\n\nBUG: unable to handle kernel NULL pointer dereference at 00000014\nIP: [] _spin_lock+0x8/0x19\n*pde = 00000000\nOops: 0002 [#1] SMP\n\nSigned-off-by: Peng Tao \nSigned-off-by: \"Theodore Ts'o\"\n```\n","cover":"","link":"first-kernel-patch.html","preview":"\u003cp\u003e真正意义上的第一个kernel patch.\u003c/p\u003e\n","title":"First kernel patch"},{"content":"\nRecently, I was writing an slightly modified version of implementation of Content Addressable Storage (CAS) for our on-line image servers. I found it a perfect choice to apply CAS to image servers, where images are uploaded once and never changed, and where disk access throughput is a main bottleneck to many large-scale on-line image service providers.\n\nAs explained on [wikipedia](http://en.wikipedia.org/wiki/Content_addressable_storage), CAS is a mechanism for storing information that can be retrieved based on its content, not its storage location. It is typically used for high-speed storage and retrieval of fixed content.\n\nCAS Characteristics:\n\n1. Storage is identified by its content\n2. Designed to make the searching for a given document content very quick\n3. Works most efficiently on data that does not change often\n\nCurrently, most servers store images as common files and rely on filesystem's mechanism to optimize reading speed. However, filesystems are limited by POSIX standards and are optimized only for everyday usage. For large-scale image servers (or any application storing large amount of images), CAS will be a better choice (for the following reasons).\n\n1. deduplication: both block-level CAS and file-level CAS achieve efficient storage utilization by storing same data only once.\n2. Aggregation: log-structured extent-based on-disk object-stores, storing many images continuously in a single large file, resulting only one disk seek if index files are saved/managed in-memory (verses 2~3 disk seeks per read for common files).\n\nMy CAS implementation is written by the fact that most images are small files (~10MB) and there are huge amount of them on image servers. The implementation should speed up accessing of these image files. I am planing some benchmarks this week and hope to post them here soon.\n\nAfter that, I will be writing a paper illustrating the opportunistic of applying CAS system to large-scale image servers. Then, I also want to explore the possibility of changing the interface (to, maybe dbus?) and make it runnable on common desktop, because current gnome/kde also read a lot of thumbnails. Maybe I can make it quicker somehow. Who knows :)\n","cover":"","link":"content-addressable-storage-next-step.html","preview":"\u003cp\u003eMy first CAS attempt.\u003c/p\u003e\n","title":"Content Addressable Storage -- The Next Step"},{"content":"\nYesterday I booted my laptop while shaking it. First I saw some error messages saying something like \"not enough memory\". Then amazing things happened. A beautiful grub boot screen came into my eye. It's a snowy background with several penguins running around. I'm impressed! After booting into my system, I decided to find out what actually happened.\n\nopensuse grub uses a gfxmenu option in menu.list to set the colorful boot menus. In my case,\n```\ngfxmenu (hd0,2)/message\nSo I need to open (hd0,2)/message to see what's inside.\n$cp /boot/message ~/test/grub/\n$cpio -i \u003c\u003e\n```\nGood, let's first see the about file\n```\n$cat pabout.txt\nPenguin theme originally made by Raphael Quinet\n(http://www.gamers.org/~quinet/lilo/).\nModernized for openSUSE by Steffen Winterfeldt.\n\nLike it or hate it? Edit gfxboot.cfg in /boot/message\nto have it always or to get rid of it.\n```\nSo gfxboot.cfg next. I found an option setting penguin theme there.\n```\n; penguin theme likelihood (in percent, -1 = auto)\npenguin=0\n```\nWow, the likelihood is set 0, which explains why I didn't see the theme before. I must be so lucky that my shaking hands made grub to read the bit wrongly and presented the penguin theme to me. What a lucky dog I am!\n\nI really like the penguin grub theme. So I decided to have it always by setting penguin likelihood to 100. and then reinstall the picture. Of course don't forget to delete the original message before archiving the new one.\n```\npenguin=100\n$rm message\n$find ./ -print | cpio -ov \u003e message\n./\n./message\n./16x16.fnt\n./back.jpg\n./en.hlp\n./en.tr\n./gfxboot.cfg\n./init\n./lang\n./languages\n./pabout.txt\n./panim_a.jpg\n./panim.jpg\n./pback.jpg\n./phead.jpg\n./timer_a.jpg\n./translations.en\n835 blocks\n$mv message /boot/\n```\n\nOK, let me reboot to see the new grub theme.\n![Grub Easter Egg](/images/grub-easter-egg.jpg)\n\nFor those who want to try opensuse grub, please download from [the official repository](http://download.opensuse.org/factory/repo/src-oss/suse/src/). To install grub in command line, see [here](http://en.opensuse.org/SDB:The_Boot_Manager_Grub#Manual_installation_of_GRUB). Of course root privilege is needed.\n","cover":"","link":"easter-egg-in-opensuse-grub.html","preview":"\u003cp\u003eI was extremely lucky to find out the easter egg in opensuse grub.\u003c/p\u003e\n","title":"Easter Egg in OpenSUSE Grub"},{"content":"\nI just pushed some patches to the [github host](https://github.com/bergwolf/tesseract-ocr-copy/tree) to add jpeg image support with libjpeg.\n\nOne drawback is that, because the image operation infrastructure in tesseract doesn't allow passing libjpeg private structures between open and read operations, I have to open the file stream twice in opening and reading jpeg images.\n\nTo test the patch, pull from git://github.com/bergwolf/tesseract-ocr-copy.git and build tesseract-ocr. Then run some tests, this time against jpeg images :)\n","cover":"","link":"tesseract-ocr-jpeg-support-added.html","preview":"\u003cp\u003eI\u0026rsquo;ve added jpeg support to tesseract-ocr via libjpeg.\u003c/p\u003e\n","title":"tesseract-ocr jpeg support added"},{"content":"\nSince we need a HTTP server to provide efficient service to all kinds of clients, I started to look into some lightweight open source solutions. The first item that jumps into my eyes is libevent, because I happen to read a blog of a facebook developer's, stating that facebook is using libevent as a HTTP server in their haystack photo storage service.\n\nLibevent is a lightweight event driven library wildly used in many applications, such as memcached and tor. Libevent has simple but efficient HTTP support. Here is a sample code building a simple HTTP server with evhttp:\n```\n#include \u003csys/queue.h\u003e\n#include \u003csys/types.h\u003e\n#include \u003csys/socket.h\u003e\n#include \u003cnetdb.h\u003e\n\n#include \u003cstring.h\u003e\n#include \u003cstdio.h\u003e\n\n#include \u003cevhttp.h\u003e\n\nvoid ocr_handler(struct evhttp_request *req, void *arg)\n{\n struct evbuffer *buf;\n struct evkeyval *header;\n\n TAILQ_FOREACH(header, req-\u003einput_headers, next) {\n  fprintf(stdout, \"key:%s\\tvalue:%s\\n\", header-\u003ekey, header-\u003evalue);\n }\n}\n\nint main(int argc, char **argv)\n{\n int err;\n struct evhttp *httpd;\n struct event_base *evbase;\n int port = 1234;\n\n evbase = event_init();\n\n fprintf(stderr, \"event method: %s\\n\", event_base_get_method(evbase));\n\n httpd = evhttp_new(evbase);\n if ((err = evhttp_bind_socket(httpd, NULL, port)) \u003c 0) {\n  fprintf(stderr, \"error binding http server to port %d\\n\", port);\n  return -1;\n }\n\n /* set callback for \"/\" */\n evhttp_set_cb(httpd, \"/\", ocr_handler, NULL);\n\n /* Set a send callback for all other requests. */\n evhttp_set_gencb(httpd, NULL, NULL);\n\n event_base_dispatch(evbase);\n\n evhttp_free(httpd);\n event_base_free(evbase);\n return 0;\n}\n```\nHowever, as I looked into the library in details and wrote some test programs, it turns out that life is not that easy. I tried to dynamically create threads to serve incoming HTTP requests, but the code didn't work as I thought. After searching for a while, I found the problem:\n\n\u003e*Steven Grimm:*  \n\u003e What libevent doesn't support is sharing a libevent instance across threads. It works just fine to use libevent in a multithreaded process where only one thread is making libevent calls.\n\nTherefore, to use libevent in a multi-threaded program, we should create each thread a event base when initialising the program and call ev_set_base() after ev_set() but before ev_add(). Then we will have a thread pool to serve HTTP requests. There will be a main thread listening to all incoming HTTP requests. When a request comes, it passes the request to some thread from the thread pool and wakes it up to handle the request.\n\nAlthough this will work, we somehow end up with a master/worker thread architecture, where the main thread handles all reads from netwrok. This will certainly be a bottleneck when there are thousands of clients(think [the C10K problem](http://www.kegel.com/c10k.html)). I don't know how the facebook guys deal with this problem(maybe they patched libevent?:), But IMO, using an evhttp dispacher in a multi-threaded process, we'll end up this way.\n\nSo, currently, I'm planning to look at other solutions like lighttpd before making any decision on the server architecture.\n","cover":"","link":"libevent-and-so-on.html","preview":"\u003cp\u003eA brief look at libevent and its limitations.\u003c/p\u003e\n","title":"libevent and so on"},{"content":"\nSo, I start to look into the name card OCR project. As suggested by Alex, I'd first look at the OCR engine developed by Google, [tesseract-ocr](http://code.google.com/p/tesseract-ocr/).\n\n\u003e From wikipedia:  \n\u003e Tesseract is a free optical character recognition engine. It was originally developed as proprietary software at Hewlett-Packard between 1985 until 1995. After ten years without any development taking place, Hewlett Packard and UNLV released it as open source in 2005. Tesseract is currently developed by Google and released under the Apache License, Version 2.0\n\nIt's a little strange that the featured tar balls listed on the project home page have compile errors. After modifying the source code, I successfully got the program binaries, but the language charsets aren't built. Then I change to the svn HEAD version, and it works.\n\nTo use tesseract, I simply type:\n```\n[bergwolf@bin]$./tesseract phototest.tif result\nTesseract Open Source OCR Engine\n[bergwolf@bin]$cat result.txt \nThis is a lot of 12 point text to test the\nocr code and see if it works on all types\nof file format.\nThe quick brown dog jumped over the\nlazy fox. The quick brown dog jumped\nover the lazy fox. The quick brown dog\njumped over the lazy fox. The quick\nbrown dog jumped over the lazy fox.\n```\n\nTesseract OCR engine is very accurate, and is very suitable for our name card OCR service, because usually we only have white background and black letters in our images. \n\nHowever, the drawback is that it doesn't support many image formats. Most mobile device save camera photos in jpeg format. Currently, only tiff and bmp formats are recognizable by tesseract. If we want to use it as our OCR engine, two options are available: either patch tesseract with other image formats support, or use other tools like imagemagick to convert other image formats to tiff or bmp format, both of which shouldn't be very hard.\n","cover":"","link":"first-glance-at-tesseract-ocr.html","preview":"\u003cp\u003eI was extremely lucky to find out the easter egg in opensuse grub.\u003c/p\u003e\n","title":"First Glance at tesseract-ocr"},{"content":"\nsadly,今年的Google Summer of Code对我而言已经结束了，恭喜几位申请上的同学，同时小小的悲伤下自己的失败，sigh。。。\n\n总结起来，这次申请失败很大的一个原因是当初选择项目的时候没有考虑mentor的因素。我申请的Maemo社区的mainlining N800/N810 kernel。之所以选择这个项目，一来是自己还是想做kernel相关的project，二来是实验室正好在做Maemo平台的项目。但是我忽略了很重要的一点，打算指导这个项目的mentor把自己的名字写在了好几个项目的后面——这意味着我还需要和不同项目的学生直接竞争，因为mentor最后（大多）是只会指导一个项目的。而且这也影响了申请阶段和mentor之间的交流。在写proposal那段时间，我几乎没有和mentor有什么交流，每次去问问题，他总说没很忙没时间，just submit it。或许这次申请失败从那个时候开始就注定了。这也反映出我长期的一个坏习惯——做事情只是从自己的角度考虑，选择最佳方法，而忽略了其他相关的方面。但世事不总是那么straightforward，所以我需要学习，从更全面的角度去思考问题，更缜密的考虑解决方案。\n\n另外一个教训是不要被表象所迷惑。我刚刚提交申请当天，就得到了Maemo社区这次GSoC的组织者的很好的评价。其后又有两个mentor（包括愿意指导这个项目的mentor）的很positive的comments。但是最后我还是落选了。可见public review并没有想象中的那么重要。而mentor对项目是否积极回应，应该在很大程度上决定项目是否会落选。\n","cover":"","link":"gsoc-2009-application-summary.html","preview":"\u003cp\u003esadly,今年的Google Summer of Code对我而言已经结束了.\u003c/p\u003e\n","title":"GSoC 2009申请总结"},{"content":"\n## Abstract:\n\nThe Maemo Diablo kernel is based on the 2.6.21 version of linux-omap kernel, which is too old now. And since the mainline kernel is the desired target for all merging processes, it is more appropriate to base the Maemo kernel on the mainline kernel. This project aims to get drivers from Maemo's Linux kernel to the mainline (Linus's 2.6.30+) kernel release, patch the mainline kernel with WiFi support from the stlc45xx driver, and boot the mainline kernel in N800s and N810s.\n\n---\n## Project title.\nMainlining the N800/N810 kernel\n\n## Project Abstract (short description).\nThe Maemo Diablo kernel is based on the 2.6.21 version of linux-omap kernel, which is too old now. And since the mainline kernel is the desired target for all merging processes, it is more appropriate to base the Maemo kernel on the mainline kernel. This project aims to get drivers from Maemo's Linux kernel to the mainline (Linus's 2.6.30+) kernel release, patch the mainline kernel with WiFi support from the stlc45xx driver, and boot the mainline kernel on N800s and N810s.\n\n## Project full description.\nMaemo Diablo is still running on a patched 2.6.21 omap kernel, which is too old and missing some new features. It's time to rebase Maemo Diablo kernel on a vanilla kernel. This project aims to get the mainline kernel working for N800/N810 devices, and use the new stlc45xx WiFi driver in the mainline kernel. To do this, the vanilla kernel must be patched with several drivers from the Maemo kernel and the linux-omap kernel.\n\nBecause many N800/N810 hardware drivers (such as the N800/N810 board drivers) haven't made their way into the mainline kernel, my first goal would be porting enough hardware drivers from linux-omap tree to make the mainline kernel bootable on N800/N810.\n\nThe Maemo 5.0 kernel is ready rebased on the 2.6.28 vanilla kernel[1]. I tried to apply the Maemo 5.0 kernel patch to a 2.6.29 vanilla kernel. Most of it applied, with some already merged and a few failures. Therefore, I can generate a new patch based on the Maemo 5.0 kernel patch and make it applicable to a newer mainline kernel (currently 2.6.29, in the future 2.6.30+). By doing this, I will get a bootable kernel on N800/N810 having all hardware supported. The DSP gateway drivers are also included in the Maemo 5.0 kernel patch. The original project idea on Maemo GSoC wiki skipped the DSP gateway support, but it should be supported here.\n\nThe next goal is to get N800/N810 booting with WiFi support from stlc45xx. Stlc45xx is an open source WLAN driver based on mac80211 for Nokia N800 and N810 devices. Nokia has been contributing a lot to the stlc45xx driver. It's time to make it usable for Maemo users.\n\nHowever, stlc45xx is based on the linux-omap tree[2]. There might be problems getting it working on top of Linus's tree. So first I need to find out what stlc45xx needs from linux-omap tree. If something is missing in Linus's tree, I have two options then: either apply the missing commits from linux-omap tree to Linus's tree (preferred), or fall back to an older version of stlc45xx that is supported by Linus's tree.\n\n## Project tasks and deliverables.\nAs described above, there are basically two goals for this project:\n\n1. Port missing drivers to make the mainline kernel bootable on N800/N810.\n2. Port stlc45xx driver to the mainline kernel, and boot N800/N810 with WiFi support.\n\nAt the end of GSoC 2009, I will be submitting the following deliverables:\n\n1. A binary image (built on Linus's tree) that will boot on N800/N810 with all hardware supported and WiFi support from stlc45xx.\n2. A patchset against latest Linus's tree that has all changes necessary to build a\nworking kernel image, as well as corresponding .config file.\n3. A website that records every problem I meet and how I solve it. And there will be a summary on my experience of patching the Linux kernel and upgrading the N800/N810 kernel. I plan to place a site on my googlepages (as I did last year), but it can be relocated upon request.\n4. A detailed developer guide demonstrating how to collect Maemo Diablo patches, apply them to the vanilla kernel, compile the kernel and flash it into N800/N810 devices. A summary on using stlc45xx driver in N800/N810 will be included too.\n\n## Project schedule.\nTo complete above tasks, I have a brief timeline as follows:\n\n-   Before May 23, get familiar with the Maemo kernel, compare mainline kernel with Maemo kernel and collect what is missing in the mainline kernel.\n-   May 23 - May 29, port N800/N810 drivers from Maemo 5.0 kernel to the mainline kernel, and resolve conflicts.\n-   May 30 - June 5, build/flash/test/debug\n-   June 6 - June 12, build/flash/test/debug. Should have a bootable mainline kernel here.\n-   June 13 - June 19, generate a patch set against the mainline kernel.\n-   June 20 - June 26, collect what stlc45xx depends on linux-omap tree and is missing in vanilla kernel.\n-   June 27 - July 3, write documents and prepare for midterm evaluation.\n-   July 4 - July 10, port stlc45xx and necessary dependencies to mainline kernel, resolve conflicts.\n-   July 11 - July 17, build/flash/test/debug.\n-   July 18 - July 24, build/flash/test/debug. Should have WiFi support in mainline kernel.\n-   July 25 - July 31, write test cases (especially for the stlc45xx driver).\n-   Aug 1 - Aug 7, scrub code, generate a patch set which includes WiFi support, and improve documentation.\n-   Aug 8 - Aug 10, prepare for final evaluation and submitting.\n\n---\n**Do you have other commitments during the summer of code coding period ? If yes, what kind of commitments ?**\n\nNo. I will be a full-time participant.\n\n**Why are you the right person for this project ?**\n\nBasically, I am the right person for the following reasons:\n\n1. Solid programming skills. I've been writing C/C++ programs in Linux for over 3 years.\n2. I'm familiar with Linux kernel drivers and the kernel community. I have\nbeen working with kernel drivers and kernel community since last year's\nGSoC (see the biography section). I also send patches to e2fsprogs.\n3. Because I am developing some N810 user-land applications in my lab, I\nalready have an N810 at hand which can be used for testing\nconveniently. I've been playing with it for some time.\n4. Last but not less important at all, I have a passion for open source and Linux kernel hacking. I have read a lot of code in the ext4 directory last year, and this year, I've been reading the code of logfs (a scalable flash filesystem trying to make its way into mainline) in my spare time. Currently, I am still following the ext4 mailing list and have learnt a lot there.\n\n**What are the benefits of your project for the Maemo Community ?**\n\n1. A bootable latest mainline kernel that brings in new features for all Maemo users.\n2. Plenty of documents guiding Maemo users to use stlc45xx drivers and showing developers how to patch/test/debug the Maemo kernel.\n3. A well documented GSoC project that can be used as a good example for future advocating.\n\n---\n**Short Biography (academic work, open source background and other activities that you like to do).**\n\nMy name is Peng Tao. I'm a postgraduate student from China majoring in computer science. I completed another GSoC project for openSuSE mentored by ColyLi last year. It enables GRUB legacy to boot on ext4 partitions. Since then, I have been following the ext4 development and sent several patches to e2fsprogs. Besides that, I am an active member of linuxfb.org and BLUG (Beijing Linux User group). I also gave speeches on open source topics at linuxfb.org meetings, BLUG meetings, Novell/Intel OTC workshop, and Gnome Asia Summit 2008.\n\nHere are some useful links for my background:  \n\n-   My blog: http://bardofschool.blogspot.com/\n-   My resume: http://bergwolf.googlepages.com/resume\n-   The GSoC 2008 project I completed: http://bergwolf.googlepages.com/grub4ext4\n\n---\nReferences:  \n[1] http://repository.maemo.org/pool/maemo5.0alpha/free/k/kernel/  \n[2] http://stlc45xx.garage.maemo.org/\n","cover":"","link":"maemo-2009-gsoc-proposal.html","preview":"\u003cp\u003eMy proposal for 2009 Maemo GSoC project, N800/N810 kernel mainlining.\u003c/p\u003e\n","title":"Proposal for maemo 09 GSoC - mainlining N800/N810 kernel"},{"content":"\n终于要过去了，多灾多难的2008年。  \n看着一片人的总结，我也想总一下（似乎刚刚才总结过。。。我不管，再总一次，那篇太沉重，有些压得人喘不过气来）。\n\n2008年发生了很多事：\n\n1. 南方大雪。最冷的时候我们还没放假，所以我没有遇到火车被拦在半路或者家里连续一个星期下雪。燕早早的回家了却在家里受冻。我可怜的宝贝，我多想时刻在你身边，用我的体温温暖你的身体：）\n2. 地震。颠覆天府之国的地震给无数的川人家庭带来了毁灭性的打击。虽然我家的屋梁歪了墙也裂了，但所幸家人都平安。人没事就好，真的。其他的一切，我们都能克服。\n3. GSoC。很感谢Coly给了我这么好的机会，让我体会到开源社区的强大。目前算是对文件系统部分有了入门级的了解，以后还得更加努力。能找到件自己喜欢的事情是很不容易的。很幸运地，我找到了：）\n4. 父亲生病。祸不单行，这对我家无疑是比地震更大的打击。我们全家现在也还在和病魔战斗着，我们不怕，我们的心在一起，没有什么困难克服不了。\n5. 项目。SEI项目总算走上正轨了。王老师也分了很多活给我。我得感谢他，终于不再每天在实验室虚度时光了。\n\n2009年的计划很简单：\n\n1. 好好做完SEI项目。\n2. 多看看内核，争取做几个patch出来。\n3. 开始写blog，内容主要是内核Document目录下文档的理解和应用。\n4. 及时行乐。不要再为一些无谓的事和家人，和女朋友生气。遇事多想想我还有哪些地方说的或做的不够好。生命短暂，我应该抓紧时间爱他们。\n5. 坚持锻炼。大学以来身体越来越差，我要坚持打篮球，至少每周两次。\n6. 当然啦，2009年，暑假要去实习，年内我要找个好工作。\n","cover":"","link":"写在2008的尾巴上.html","preview":"\u003cp\u003e是的,这才是真的年终总结.\u003c/p\u003e\n","title":"写在2008的尾巴上"},{"content":"\n2008年12月30日，晴，微风，干冷。\n\n2008年发生了很多事，其中一些对我的影响甚至超过了过去的23年发生的事情，以致我现在写总结的时候甚至只能记起这么几件，影响我生命的事。\n\n1. 地震。没有任何预兆，八级地震，在汶川，在我的家人身边发生了。那是魂不守色的一个月，日夜只能盯着电脑，等着新消息的出现。甚至为此看了不少地震预测方面的论文和资料。地震对我家的破坏到现在也尚未修复，我也第一次开始考虑四川是否还是适合长期居住的地方。地震击毁了我的家园，但是没有击溃我们的心。那段时间，每天早晚骑车来往于大运村和学校之间的路上都是我和家人通电话的时间。亲情的温馨抚慰着被地震破坏的心。我们在地震之后变得更加坚定团结。\n\n2. GSoC。如果没有这次Google Summer of Code，或许我就要用一无所获来形容我的2008年了。有幸受到ColyLi的青睐，我凭借grub4ext4入选了2008 GSoC并顺利完成项目。以此为契机，在ColyLi的指导下，我开始步入开源社区和Linux内核开发社区。事业上总算有了一个还算比较好的开端，也为明年找工作打下了一定基础。\n\n3. 父亲生病。生活总是在人最不经意的时候给人狠狠的一刀，这句话一点没错。父亲脑溢血对我们一家人无疑是致命的打击。母亲开始还一直瞒着我，怕我担心。后来四姑的电话让我起疑，母亲在我一再逼问下才告诉我。赶回家的时候父亲刚刚度过危险期。直到现在，父亲仍然和病魔战斗着。我知道，如果我不能做出一番事业，我就对不起父亲的爱。这是我必须承担的压力。\n\n即时行乐。这是2008年的噩耗们教给我的。亲人在不知道什么时候就会从身边离开。乘着还有机会，我需要更加努力地善待他们，给予他们我全部的爱和关怀。\n","cover":"","link":"2008年年终总结.html","preview":"\u003cp\u003e思想的转折点.\u003c/p\u003e\n","title":"2008年终总结--影响我生命的那些事"},{"content":"\n一篇它山之石,是以时刻鞭笞自己.\n\n------------------------------------------------------\n发信人: qianning (纤凝), 信区: Memory  \n标 题: 突岩深缝妙香稠－我曾是一个贫困生mm  \n发信站: 水木社区 (Sat Dec 13 13:32:47 2008), 站内\n\n\n今天忽然想起高中班主任送我的这句诗，  \n然后想起高三到大学的岁月。那几年，我曾是一个贫困生，一个贫困的mm。\n\n其实我家本来不贫困，高三那年母亲患了脑癌，父亲因为照顾母亲失掉了工作，治病花完了所有的积蓄，结果母亲还是在我大一的寒假走了。高三的时候母亲动了第一次脑外科手术，结果效果不好，接着动第二次，四处求医问药。记得在外地求医的时候，父亲舍得买800多的药却舍不得多给自己买一碗4块钱的刀削面。那时候，每碗鸡蛋西红柿面都吃得很心酸。高三最后冲刺的时候，同学们都开始补充营养。我是自己做饭，还偶尔骑车到医院给父母送饭。高考的那三天，同学的家长都做了各种营养餐送到考场，我啃的是父亲买来的面包（面包很好吃，父亲夹了很多菜。）要说我真幸运，能如愿考到北师大，还在母亲去世之前把大红的录取通知书拿给她看。她虽然已经不会说话，但脸上是久违的灿烂的笑。\n\n高三要买很多复习题，那时候家里到处都需要钱，我实在没法跟父亲开口。到了交费的时候，我连130块钱也拿不出来，只好悄悄跑到班主任老师那里恳求她缓一缓。班主任心肠好，问了情况，帮我垫了钱，再也不要我还。还有那时候教政治课的老师，在办公室里跟我说：“以后你的复习材料我帮你买，不要紧。”所以我高三后期的很多复习题都是免费的。\n\n大学开学了，我拿着家里凑的3000块钱，其实基本都是舅舅的钱，由舅舅送我到了北京。那时候师大是不用学费的，但是交完900多的住宿费，买完各种生活用品，就只剩不到2000了。这3000元是我大学里跟家里要的唯一一笔钱，以后再也没要过。我每月的饭钱最多90块，一天不到3块钱。我发现白菜、豆腐、豆芽这些菜，半份才4毛钱，而且营养还好。那时候经常用的化妆品，就是师大商店里四块还是五块钱一瓶的“黄瓜洗面奶”，因为香皂实在太干了。说到这儿，很多mm都会笑吧。衣服大部分都没超过40块钱。那时候最常去的地方是西单附近的“民族大世界”，因为可以讲价，很多时候居然可以买到15块钱的衣服和裤子。记得有一次买到一件60块钱的浅黄色小西服，穿着很好很喜欢，狠心买下以后，硬是难过了几个月。最尴尬的是有一次帮同学打饭，打完之后很多天她都没有还我钱，因为1块多钱实在是个小数目，不值一提。可是对我，是两顿早饭了。所以第二次她再让我帮着打饭的时候，我就找了个理由推脱了。这么多年，这些往事大概她早就忘了吧，我很想对她说一声对不起。\n\n那时候系里发贫困生补助的时候，班主任让每个申请人当着全班的面谈谈自己为什么贫困。记得我说得泣不成声，很多申请的同学也是。那样的要求现在是无法想象的，因为当时拿到的补助，不过是一次性的100元钱。而我们，都只有不到19岁。19岁，正是自尊心最强的时候。我记得，我的脸通红，我的声音颤抖，我的心象插了一把刀子。\n\n我是小地方来的学生，知识很有限，所以上课很少发言，以至于一个学期过去了认识我的老师都没有几个。到了期末的时候，班主任下课前忽然点我的名字叫我去办公室。站在她的办公桌前，她一脸惊讶地说：“原来最高分是你。”成绩好再也不用申请补助了，我很自豪，因为每年可以拿到800元的一等专业奖学金。不要笑，师大的一等就是这么少。不过就这么少，也差不多够我的住宿费了。其他的费用我再想办法。功课好点以后，我开始打工。我曾经大二的时候负责做整层楼的清洁，也给系里的一个老师整理文件，然后拿到50块钱。大二下半学期开始做家教，做翻译，终于可以不用做体力活而养活自己了。回想起来，在最好的年龄，我却是那样一个灰头土脸的mm，穿着很土气的衣服，一脸的菜色。大四的时候，当我某天终于换了一件小绿毛衣，宿舍的mm忽然说：“××，其实你长得很好看哎。”在那个最美丽的年龄，我们都是美女。可是在我心里，美丽总是属于别人的，绝不可能属于象我这样的贫困mm。\n\n大四我拿到的最大的一笔奖学金是来自国外一个银行，一共4000块钱。我拿出1000元给班主任，让她把这些钱分给贫困生。用这些钱，他们应该再也不用在全班同学面前说自己为什么贫困了吧？贫困不是我们的错，贫困生比别人更需要一些小自尊。\n\n再后来，我保送研究生，然后拿到了很多很多奖学金。我攒着这些钱，考托考G。加上同学老师的资助，后来来到了北美。现在我有RA 和TA，还在图书馆兼职做information assistant，生活好了很多。可是，苦日子里养成的“小气”，却总也改不过来。LG总是说我应该买些更贵的化妆品，更漂亮的衣服。其实我的化妆品已经很不错了，衣服也很好，但我花钱却总是做不到“大手大脚”。我会常常想起那些贫困的岁月，那些心情和那些经历。\n\n那么多年，我都没掉过几滴眼泪。然而今天敲这些字的时候我却流泪了。脚下的路越走越宽，但没有过去那些日子，我就永远无法成就现在的我。又一年要过去，我想起所有帮助过鼓励我的同学和老师。我想给你们深深鞠个躬，说一句感谢。\n\n当年老师临别送我的诗是郑板桥歌颂兰花的，我想老师是希望我能在恶劣的环境里成长吧。这些年，我一直记得，以后也不会忘记：\n\n**身在千山顶上头，突岩深缝妙香稠。非无脚下浮云闹，来不相知去不留。**\n\n谨以此文记载那段岁月，也和比我贫困和跟我一样贫困的贫困生同学共勉。\n","cover":"","link":"我不要优越的生活.html","preview":"\u003cp\u003e快乐让人陶醉，而忘了现实，忘了目的。优越的生活亦是磨灭斗志的利器。\u003c/p\u003e\n","title":"我不要优越的生活,亦勿需快乐"},{"content":"\n昨天下午，我 有幸作为主讲人参加了Novell和Intel OTC的workshop。题目还是grub4ext4，顺带介绍了下最近正在参与的ext4 without journal的patch。再次拿grub4ext4去忽悠，都有点不好意思了。。。\n\n去的比较早，因为我总是迷路，怕迟到。果然，Novell在36楼，我到财富中心后直接上了37楼以上的电梯，电梯关门后才发现木有36楼按钮。。。残念。。。无奈地去38楼游览了一番后回到1楼换电梯。。。再次对我的路盲特性表示无奈。。。\n\n到了Novell,先找Coly，然后一起布置会议室。Novell的会议室可真不是盖的！第一次玩这种隔间的会议室，中间的隔墙太高级了，两间房间只要把隔墙收起来，就成了一个大的会议室。布置完，时间还早，趴桌上小睡一会儿：）\n\n时间飞快的到了两点半左右，一阵爽朗的笑声把我从周公那里叫了回来。抬头一看，原来是Intel OTC的工程师们来了。一阵寒暄之后，Coly通知来了Novell的工程师，简单的介绍之后，会议正式开始。\n\n因为已经是第四次讲grub4ext4了，这次讲起来有些轻车熟路的感觉。而且这次的slide是在Coly的细心指导下完成的，内容和结构都较以前的版本有了质的飞跃。从VFS讲起，到grub，再到ext2/3，再到ext4，再到grub4ext4。其间被问过好几个问题，所幸对这一块还比较熟悉，答的还算不错。其中比较遗憾的是我对sparse_super这个特性的理解有偏差。之前只是知道有这个feature，没有仔细去看它的实现。还好Coly即时发现并指正了我的错误。\n\n讲完grub4ext4，看了看还有时间，就介绍了一下最近正在参与的让ext4文件系统在没有journal的情况下工作的patch。这个patch的思路比较简单，主要是去hack ext4中调用jbd2的一些接口函数。\n\nworkshop完了之后，Alex过来，几个人一起讨论了一下一个文件加密的思路。然后一起去BLUG聚会。地点在俄罗斯餐厅，以前听fay说过，我是第一次去。会上认识了一位Intel的kernel engineer。他很nice的帮我解决了我之前在ext4分区上安装的opensuse无法启动的问题。\n\n总的来说，今天的活动收获最大的就是演讲的时候不那么害怕了（汗一下。。。），还有在和各位工程师的讨论中，对ext4文件系统的理解有更深了一层。晚上在俄罗斯餐厅瞎玩的时候，还无意的发现了之前Eric Sandeen提到的tune2fs -I的bug的原因，主要是因为flex_bg把inode table放到一起之后造成no room for larger inode error.\n\n最后对长久以来对我提供了无比大的支持的Coly Li和各位Linuxer@bupt的同学和朋友们致以崇高敬意和由衷的感谢！\n","cover":"","link":"novell-intel-workshop.html","preview":"\u003cp\u003e受邀参加Novell和Intel合办的技术聚会,回来总结一下.\u003c/p\u003e\n","title":"Novell\u0026Intel Workshop"},{"content":"\nMost of the following conclusions are taken from Intel's [Understanding the Flash Translation Layer (FTL) Specification](/files/FTL_INTEL.pdf).\n\n*Note: the problem of FTL is that it has no idea about the contents that it handles. Thus when it stores something, it has to find a new place instead of appending to the original place.*\n\nFTL is the driver that works in conjunction with an existing operating system (or, in some embedded applications, as the operating system) to make linear flash memory appear to the system like a disk drive. First, it creates “virtual” small blocks of data, or sectors, out of flash’s large erase blocks. Next, it manages data on the flash so that it appears to be “write in place” when in fact it is being stored in different spots in the flash. Finally, FTL manages the flash so there are clean/erased places to store data.\n\nBasically, FTL does one thing: read the block data from the file system, write it at a free/erased location on the flash media and invalidates the block that previously contained the block's data.\n\nFor Intel NOR flash, Erased state is 1, programmed state is 0, a 0 cannot be changed back to a 1 except by an erase, and an erase must occur on a full erase block.\n\nThe main weakness of a FTL is that it has no idea of what part of an erase block belong to the same file. Thus leads to massive obslated blocks and more often garbage collection. The introduction of SATA 3.0 interface can solve this problem, with the new TRIM command which tells the underlying FTL which blocks are no longer being used and can be erased in garbage collection.\n","cover":"","link":"ftl.html","preview":"\u003cp\u003eUnderstanding flash device is key to flash-optimised file system design.\u003c/p\u003e\n","title":"FTL"},{"content":"\nAs stated in [the paper of Jorn Engel's(author of logfs)](http://lazybastard.org/~joern/logfs1.pdf), flash device has some limitations to be a storage device.\n\n1. Flash requires out of place updates of existing data. Before being able to write to a specific location, that erase block has to be erased. After being erased, all bits are set to 1. An unclean unmount at this time will cause data loss, as neither the old nor the new data can be retrieved.  \n**Notes**: which means, transaction writes is a must.\n\n2. Lifetime of flash erase blocks is limited by the number of erase cycles on them. Hardware manufacturers usually guarantee 100.000 erase cycles. This number is per individual erase block.  \n**Notes**: in-memory superblock or dynamic superblock? balanced writes.\n\n3. Erase blocks are significantly larger than hard disk sectors or filesystem blocks. Therefore, erase blocks must be shared by several filesystem blocks. During operation, erase blocks get partially obsoleted and require garbage collection to free space.  \n**Notes**: GC is only one of the ways to solve this problem...\n","cover":"","link":"flash-limitations.html","preview":"\u003cp\u003eUnderstanding flash device limitations is key to flash-optimised file system design.\u003c/p\u003e\n","title":"Flash Limitations"},{"content":"\nIn a mail Ted sent to LKML, he described the core filesystem developers' plan for the future: ext4 as interim step to btrfs[1].\n```\nFrom: Theodore Tso\nSubject: Re: [RFC] Btrfs mainline plans\nNewsgroups: gmane.linux.file-systems, gmane.linux.kernel, gmane.comp.file-systems.ext4\nDate: 2008-10-10 03:01:31 GMT\n...\n...\n...\nAs far as ext4 is concerned, being in the mainline was all upside, and\nI believe that having in the kernel *did* accelerate its progress.  It\nmeant that kernel-wide API changes were applied automatically, and it\nmeant that kernel developers who wanted to try out ext4 could do so\nquite easily.  Yes, in the past two releases I started maintaining\npatchsets against a stable kernel; this was mainly to support those\nusers who didn't want to follow the latest git releases --- and that\nwas a reflection that ext4 was mature enough that there were stable\nkernel users who were interested in using ext4.  I could have used the\n-stable infrastructure, but ext4 was changing so rapidly that it was\neasier just to maintain a full patchset.  As a matter of fact,\nstarting with 2.6.27, given that we'll be renaming ext4dev to ext4 in\nthe 2.6.28 mergeset, the plan is that we'll be submitting patches to\nthe -stable series.\n\nYes, ext4 didn't go as quickly as I would have liked, but part of the\nproblem was I personally didn't have enough time to review the patches\nbeing created by the various ext4 developers, and I wasn't about to\nmerge patches until they were ready.  We didn't have enough senior\ndevelopers on ext4, and it took a while for some of the developers\nassigned to the project to get up to speed.  (I was the most senior\ndeveloper, but I've never had time assigned by my employer to work on\next4; it has always something I did on my own time, often late at\nnight (hint: check the time this mail was sent, and when the last ext4\npatchset was sent out last night).  Fortunately, at this point a\nnumber of developers like Aneesh have become comfortable with the\ncode, and good at writing patches that don't require major review and\nchanges, and the addition of engineers hired by Red Hat, such as Eric\nand Val, have also helped immensely.\n\nAs far as btrfs is concerned, one of the things that you may not know\nis that about a year ago (on November 12-13, 2007), a small group key\nfilesystem developers, that included engineers employed by HP, Oracle,\nIBM, Intel, HP, and Red Hat, and whose experience included working\nwith a large number of filesystems: ext2, ext4, ext4, ocfs2, lustre,\nbtrfs, advfs, reiserfs, and xfs came together for a two day \"next\ngeneration filesystem\" (NGFS) workshop.  At the end of the that\nworkshop, there was unaminous agreement (including from yours truly)\nthat (a) Linux needed a next generation filesystem to be competitive,\n(b) Chris Mason's btrfs (with some changes/enhancements discussed\nduring the workshop) was the best long-term solution for NGFS, and (c)\nbecause creating a new enterprise filesystem always takes longer than\npeople expect, and even then, it takes a while for enterprise users to\ntrust a new filesystem for their most critical data, ext4 in the next\ngeneration of filesystems was needed as the bridge to the NGFS.\n\nThe reason why we made these recommendations was not to influence open\nsource developers (which is why we haven't really talked about it a\nlot in venues like the LKML) but as recommendations to the management\nof the above-mentioned for assigning resources to the project.  (One\nof the recommendations we made was that a critical success factor was\nthat knowledge about the filesystem must be spread throughout multiple\nvendors and distributions.)  But I think it is fair to say that btrfs\nisn't just a private a project of a single Linux kernel developer, but\nrather the design has been discussed and reviewed by a large number of\nexperienced filesystem architects.  What *is* important is that Chris\nis a well-known kernel developer who is trusted to create and maintain\nquality kernel code, and his employer *has* apparently given him\nenough time that he can do a lot of personal, hands-on development.\n\nGiven btrfs's current status, in terms of its functionality, even its\nformat is not fully cast into stone yet, and given Chris's reputation\nand skills as a kernel devleoper, my personal opinion is that we would\nnot be making a \"special case exception\" for btrfs to get it into\nmainline, but rather something which makes completely good sense.\n```\n\nreferences:  \n[1] http://thread.gmane.org/gmane.linux.file-systems/26246/focus=26492\n","cover":"","link":"ngfs.html","preview":"\u003cp\u003eCore kernel fs developers view toward the future.\u003c/p\u003e\n","title":"NGFS From ext4 to btrfs"},{"content":"\nAs mentioned by Ted on linux-ext4 mailing list, there are some ways to get your files back if it is still open:\n\nSome background:  \nOn ext3/4, once deleted, the inode will be put to orphaned inode list. On recovery,on recovery this orphan list is traversed and iput will be called on each of the inodes to mark them as free.\n\nSo, theoretically, we have out first solution:  \n1. provoke a crash and manually remove the inode from the orphan list, then mount the partition as ext3.\n\nBut another simple solution exists:  \n2. kill -STOP the process that owns the file, copy it via \"cat /proc/$pid/fd/$fd \u003e rescue-file\". and then kill -9 the process if you don't want it to make any further changes.\n","cover":"","link":"undelete-still-open-files-ext.html","preview":"\u003cp\u003eSome useful little hacking hints.\u003c/p\u003e\n","title":"Undelete Still Open Files on ext2/3/4"},{"content":"\nGnome Asia Summit 2008于上周末在北航举行。会上有一些很有意思且与我们项目相关(主要是maemo相关)的topic，我总结了一下：\n\n1. Introduction of Gstreamer in maemo[1]  \n这个topic的speaker是Nokia芬兰研发中心的工程师Huaming Wang。他主要介绍maemo中Gstreamer的应用。在maemo中多媒体数据除了real格式以外都是由Gstreamer来handle的。同时Nokia把一些视频和音频的解码程序固化到了DSP上，从而加强了N8*0上多媒体数据的处理能力。\n\n2. Qt maemo hildon port, making Qt and GTK+ working together in mobile devices  \n这个topic的speaker是Forum Nokia的maemo首席工程师Kate Alhola，她主要讲strategy上的东东。hildon是Nokia开发并upstream的Linux上移动设备应用程序的framework，实验室之前项目的代码包括现在UI项目上的代码都是基于这个框架的。以前hildon只支持gtk+，现在在maemo Diablo版本中添加了Qt的支持。Kate并没有留下她的slides，比较可惜。。。\n这可以作为我们的一个alternative，夏双荣之前提到的gtk+中图形无法准确定位的问题也可以在Qt中很好的解决。但是Qt的一个问题就是lisense。社区版的Qt使用的是GPL，如果我们项目要用Qt的话只有两种办法，要么GPL发布我们的代码，要么向Trolltech购买商业授权。不过Trolltech已经被Nokia收购，估计让Nokia购买商业授权也不会有太大阻力。\n\n3. Out-of-memory management in a mobile GNOME device[2]  \n这个topic的speaker是Nokia maemo的资深开发人员Kimmo Hamalainen。他主要介绍了如何编写内存受限的移动设备应用程序，以及当内存不足的时候Linux kernel会如何处理，在maemo中又做了哪些方面的改进。\n\n4. Cross-platform GUI Application Design In The View of a Mac Developer[3]  \n这个topic的speaker是名叫Jiang Jiang的在读研究生。他专注于Mac和Linux平台上的程序开发。他从一个Mac开发人员的角度来介绍了如何设计和开发用户友好的GUI程序。\n\n5. Moblin Hugs Gnome[4]  \n这个topic的speaker是Intel北京OTC的开源策略经理Xu Chen。moblin是maemo在市场上的主要竞争对手，二者有很多相似之处。比如都是采用Linux内核的开源平台，都有以自己公司为核心的community，都以Gnome mobile作为图形界面，应用程序都使用hildon作为应用程序的框架等。Intel刚刚在国内成立了moblin的team，估计要不了多久就会来学校宣传，北邮嵌入式协会也已经在和陈绪接触，可能用不了多久就会拿到一些moblin的项目。上周例会上王老师提到的３D的桌面效果在moblin上已经有支持，他们用基于openGL的Clutter实现了在3D以及动画效果。maemo方面也打算采用Clutter，他们正在working on it。。。让我比较惊奇的是，Nokia居然打算完全自己去做Clutter的maemo port，“与其指望与他们（指Clutter）合作，不如等着我们来提供给你们（指在座的developer）“。。。搞通信的人的想法到底还是和搞计算机的有本质的区别。。。\n\n6. Metadata management for the Desktop  \n这个topic的speaker是Nokia芬兰研发中心负责maemo平台和hildon库研发的工程师Richard\nSun。他主要介绍了基于metadata的文件索引和检索工具tracker。tracker是目前Linux平台上三大metadata检索工具（另外两个beagle, strigi）之一。tracker目前focus on的是桌面搜索，即对本地资源的快速索引和检索。目前在maemo中的本地检索也可以使用tracker，而且Nokia方面希望long term support这个项目，所以如果我们项目以后有桌面搜索需要的话，也可以选择通过D-bus直接与trackerd通信来使用tracker的高效检索服务。Richard也没有留下他的slides。。。\n\n\nreferences:  \n[1]http://www.gnome.asia/static/upload/event_file/GNOMEAisaSummit.odp\n[2]http://www.gnome.asia/static/upload/event_file/gnome-asia-low-memory-handling.odp\n[3]http://www.gnome.asia/static/upload/event_file/gui-app-design.pdf\n[4]http://www.gnome.asia/static/upload/event_file/MoblinHugsGnome.pdf\n","cover":"","link":"gnome-asia-summit.html","preview":"\u003cp\u003eGnome Asia Summit 2008总结.\u003c/p\u003e\n","title":"Gnome Asia Summit 2008"},{"content":"\nroot命令执行过程：\n\ngrub所有支持的命令都在struct builtin *builtin_table[]中\n```\nstruct builtin\n{\n\t/* The command name. */\n\tchar *name;\n\t/* The callback function. */\n\tint (*func) (char *, int);\n\t/* The combination of the flags defined above. */\n\tint flags;\n\t/* The short version of the documentation. */\n\tchar *short_doc;\n\t/* The long version of the documentation. */\n\tchar *long_doc;\n};\n```\ngrub先调用struct builtin *find_command (char *command)解析root命令为\n```\nstatic struct builtin builtin_root =\n{\n\t\"root\",\n\troot_func,\n\tBUILTIN_CMDLINE | BUILTIN_HELP_LIST,\n\t\"root [DEVICE [HDBIAS]]\",\n\t\"Set the current \\\"root device\\\" to the device DEVICE, then\"\n\t\" attempt to mount it to get the partition size (for passing the\"\n\t\" partition descriptor in `ES:ESI', used by some chain-loaded\"\n\t\" bootloaders), the BSD drive-type (for booting BSD kernels using\"\n\t\" their native boot format), and correctly determine \"\n\t\" the PC partition where a BSD sub-partition is located. The\"\n\t\" optional HDBIAS parameter is a number to tell a BSD kernel\"\n\t\" how many BIOS drive numbers are on controllers before the current\"\n\t\" one. For example, if there is an IDE disk and a SCSI disk, and your\"\n\t\" FreeBSD root partition is on the SCSI disk, then use a `1' for HDBIAS.\"\n};\n```\n然后调用static int root_func (char *arg, int flags)，该函数实际返回 real_root_func (arg, 1)\n\n### 1. 不带参数，real_root_func(arg, 1)显示当前root分区\n```\ngrub\u003e root\n(hd0,2): Filesystem type is ext2fs, partition type 0x83\n```\n\n当`static int real_root_func (char *arg, int attempt_mount)`的arg为空的时候，该函数调用`static void print_root_device (void)`然后返回。  \n这块代码很简单，如下：\n```\nstatic void\nprint_root_device (void)\n{\n\tif (saved_drive == NETWORK_DRIVE)\n\t{\n\t\t/* Network drive. */\n\t\tgrub_printf (\" (nd):\");\n\t}\n\telse if (saved_drive \u0026 0x80)\n\t{\n\t\t/* Hard disk drive. */\n\t\tgrub_printf (\" (hd%d\", saved_drive - 0x80);\n\n\t\tif ((saved_partition \u0026 0xFF0000) != 0xFF0000)\n\t\t\tgrub_printf (\",%d\", saved_partition \u003e\u003e 16);\n\n\t\t\tif ((saved_partition \u0026 0x00FF00) != 0x00FF00)\n\t\t\t\tgrub_printf (\",%c\", ((saved_partition \u003e\u003e 8) \u0026 0xFF) + 'a');\n\n\t\t\t\tgrub_printf (\"):\");\n\t}\n\telse\n\t{\n\t\t/* Floppy disk drive. */\n\t\tgrub_printf (\" (fd%d):\", saved_drive);\n\t}\n\n\t/* Print the filesystem information. */\n\tcurrent_partition = saved_partition;\n\tcurrent_drive = saved_drive;\n\tprint_fsys_type ();\n}\n```\n`saved_drive`是作为root的drive number，初始为`boot_drive=0`  \n`saved_partition`是作为root的partition number, 初始为`install_partition = 0x20000`  \n这两个值都在`static int real_root_func (char *arg, int attempt_mount)`中当被修改\n```\nvoid\nprint_fsys_type (void)\n{\n\tif (! do_completion)\n\t{\n\t\tprintf (\" Filesystem type \");\n\n\t\tif (fsys_type != NUM_FSYS)\n\t\t\tprintf (\"is %s, \", fsys_table[fsys_type].name);\n\t\t\telse\n\t\t\t\tprintf (\"unknown, \");\n\n\t\t\t\tif (current_partition == 0xFFFFFF)\n\t\t\t\t\tprintf (\"using whole disk\\n\");\n\t\t\t\t\telse\n\t\t\t\t\t\tprintf (\"partition type 0x%x\\n\", current_slice \u0026 0xFF);\n\t}\n}\n```\n`do_completion`是一个全局变量，用来标识current_partition是否已经mount，其值通过`int print_completions (int is_filename, int is_completion)`来修改，`print_completions`将is_completion的值赋给do_completion。\n\n### 2. 带参数，real_root_func(arg, 1)尝试mount指定分区\nmount成功：\n```\ngrub\u003e root (hd0,0)\nFilesystem type is ext2fs, partition type 0x83\n```\n\nmount失败：\n```\ngrub\u003e root (hd0,1)\nFilesystem type is unknown, partition type 0x82\n```\n\n`real_root_func(arg, 1)`先调用`set_device (arg)`将arg中的drive和partition信息写入current_drive和current_partition,然后调用`open_device()`来mount current_drive和current_partition然后调用`int set_bootdev (int hdbias)`来设置BSD partition和chain-loading(这里没看懂。。。）  \n最后`print_fsys_type ()`打印分区由fsys_type指明的current_partition的信息\n```\nint\nopen_device (void)\n{\n\tif (open_partition ())\n\t\tattempt_mount ();\n\n\t\tif (errnum != ERR_NONE)\n\t\t\treturn 0;\n\n\t\t\treturn 1;\n}\n```\n这里是一串的调用。。。\n`open_device() -\u003e open_partition() -\u003e real_open_partition(0)`\n\nopen_partition(0)返回1的情况有以下几种：\n```\ncurrent_drive == NETWORK_DRIVE\ncurrent_partition == 0xFFFFFF，即当前分区是整块磁盘\n```\n找到了current_drive中的current_partition\n\n判断partition是否相同的方法  \n`dest_partition == current_partition` :对非BSD的partition有效\n\n对于BSD partition，使用下面的方法判断:\n```\nbsd_part = (current_partition \u003e\u003e 8) \u0026 0xFF;\n((dest_partition \u003e\u003e 16) == 0xFF \u0026\u0026 ((dest_partition \u003e\u003e 8) \u0026 0xFF) == bsd_part)))\n```\n\nbsd partition使用不同的机制，所以需要特别处理\n```\n/* these ones are special, as they use their own partitioning scheme\nto subdivide the PC partitions from there. */\n#define PC_SLICE_TYPE_FREEBSD 0xa5\n#define PC_SLICE_TYPE_OPENBSD 0xa6\n#define PC_SLICE_TYPE_NETBSD 0xa9\n```\n\n实际完成mount的是attempt_mount()\n```\nstatic void\nattempt_mount (void)\n{\n#ifndef STAGE1_5\n\tfor (fsys_type = 0; fsys_type \u003c fsys_type =\"=\"\" errnum =\"=\"\" errnum =\" ERR_FSYS_MOUNT;\" fsys_type =\" 0;\" fsys_type =\" NUM_FSYS;\" errnum =\" ERR_FSYS_MOUNT;\" retval =\" 1;\"\u003es_magic != EXT2_SUPER_MAGIC)\n\t\tretval = 0;\n\n\t\treturn retval;\n}\n```\n\n全局变量current_slice用来描述partition type，part_length用来描述partition的长度(单位，sector）\n在`real_open_partition (0)`中调用`next_partition (current_drive, dest_partition, \u0026current_partition, \u0026current_slice, \u0026part_start, \u0026part_length, \u0026part_offset, \u0026entry, \u0026ext_offset, buf)`将current_slice赋值为current_partition的partition type,将part_length赋值为current_partition的length\n\n`devread (SBLOCK, 0, sizeof (struct ext2_super_block), (char *) SUPERBLOCK)`将第二个sector,偏移0开始的sizeof(ext2_super_block)长度的数据读入到SUPERBLOCK指向的内存中，实现grub中所谓的mount\n\n```\nS_ISREG(m) is it a regular file?\nS_ISDIR(m) directory?\nS_ISCHR(m) character device?\nS_ISBLK(m) block device?\nS_ISFIFO(m) fifo?\nS_ISLNK(m) symbolic link? (Not in POSIX.1-1996.)\nS_ISSOCK(m) socket? (Not in POSIX.1-1996.)\n/* linux/stat.h */\n#define S_IFMT 00170000\n#define S_IFLNK 0120000\n#define S_IFREG 0100000\n#define S_IFDIR 0040000\n#define S_ISLNK(m) (((m) \u0026 S_IFMT) == S_IFLNK)\n#define S_ISREG(m) (((m) \u0026 S_IFMT) == S_IFREG)\n#define S_ISDIR(m) (((m) \u0026 S_IFMT) == S_IFDIR)\n```\n","cover":"","link":"grub-legacy-root.html","preview":"\u003cp\u003eA step-by-step look into grub legacy root command.\u003c/p\u003e\n","title":"grub legacy root命令执行过程详解"},{"content":"\n这几天项目要中期验收，实验室抓的真紧。。。。今晚终于找到时间静下心来好好总结一下。\n\n先简单介绍下，这次google summer of code我申请的是由colyli指导的[enable ext4 file system as boot partition](http://en.opensuse.org/Summer_of_Code_2008#enable_ext4_file_system_as_boot_partition)，我的申请主页在 http://bergwolf.googlepages.com/grub4ext4 ，项目主页(待建)在 http://code.google.com/p/grub4ext4/ 。这么设置是因为google给了一个proposal的例子就是这样的——用一个blog存放开发过程，用公开的repository保存项目代码。\n\n整个申请过程主要分为三个阶段：前期准备，写proposal阶段和ranking阶段。\n\n## 1. 前期准备\n因为上学期就打算做这个grub4ext4的项目，我在寒假期间看了一些grub legacy的代码，主要集中在stage2目录下，同时看了一些前人对grub源码的分析文档。这学期开学后我在mailling list上发过一篇总结。这篇总结也实际上成为我的proposal中grub部分的雏形，当时也不知道这个项目会申请成为SoC项目。\n\n或许我这只是特例，因为很早就开始接触相关的东西。但是想想mentor和organization都肯定更愿意把项目交给熟悉项目背景的人，所以多参与开源项目，多接触开源社区还是有好处的^_^\n\n## 2. 写proposal阶段\n这阶段我最大的两个感悟是：多和mentor接触，多和一起申请的人接触。\n\n这期间我完成proposal初稿后发给colyli看过，colyli给了很多很有价值的意见，十分感谢。这些意见和建议让我对项目的思路有了很多新的认识，这些都体现在了最后的成稿中。proposal中不能有抄袭这点也是coly告诉我的。那天我正在实验室干活，接到coly电话后赶紧修改。这可是救火啊。。。感激之心难以言寓～～～\n\nfreenode上有个gsoc的channel，这上面不仅有正在申请的学生，还有不少mentor和google工作人员，是个很好的交流的地方。我写proposal的那几天几乎成天挂在上面，即使不发言，偶尔看看别人的对话也能学到很多东西。例如有的mentor明确指出不接受proposal里面使用一些网络上常用的聊天用语(you=u之类)的人，所以写申请还是formal一些的好。\n\n另外要注意proposal的字数限制，这点是在申请的最后一天我在IRC上问的。回答的人是google人员，所以也应该算官方的说法。proposal有7500 character的限制，这里的字数是byte而不是word，而且包括空格。千万不要超过这个限制，因为超过限制的proposal会被truncate，即最后只有前7500 byte会被打分的mentor们看到，而超出部分直接丢弃。\n\nproposal的主要目的是说服mentor和google，让他们觉得你的项目值得做而且具有可行性。有人这么说，when you propose a project, the most important thing is how it will benefit to the community instead of how cool it is.虽然有些极端但也不无道理。至于如何说服，那就是八仙过海，各显神通的事了。\n\nproposal一定要包含的几点：自己对项目的理解和描述（多和mentor沟通是正确理解项目需求的重要方法）；提出可行的实现方案（在有初步构思后和mentor的交流由询问变为讨论，而讨论的结果往往就是可行的方案）；具体的开发计划（包含重要时间点和事件，让mentor们看了之后觉得这个方案确实可行）。\n\n我有位本科同学今年也在申请GSoC，他给了我几个他找到的前人的proposal。这些proposal也都包含了以上几个要点。在这里也要感谢这位同学对我的帮助，有空一定bg你。\n\n## 3. ranking阶段\n在过了application deadline之后就进入ranking in progress阶段。到了这一阶段实际上工作已经大部分做完了，就只是等待结果。不过按照google的说法，mentor还是可以在application page上提问，所以这段时间还是需要经常上去看看。\n\n当applicatin status由ranking in progress变为reviewer assigned的时候，你的proposal就已经由某个具体的mentor（很可能就是最后带你的mentor）审阅了。这说明这个organization已经在考虑要不要把你的申请提交给google了。\n\n当application status变为application accepted的时候，恭喜你，you are in！\n\n---\n\n说一下我的申请感受：\n\n1.   mentor是申请的关键。多和mentor交流不但有助于自己对项目的理解，也有助于mentor对你的了解。相信很少有mentor把项目交给一个交了一份proposal后就再也不出现的人。\n1.   多和申请人交流。不同的人有不同的思考问题的方法，或许别人所想的就正是你欠缺的，讨论才能加深自己对项目和对自己的方案的理解。不要害怕竞争，google给每个项目计划了至少两个slot。如果你和竞争者都足够优秀，不要担心google会刷掉你们任何一个。\n1.   注重细节。申请中有很多需要注意的细节，google的FAQ建议都看一遍。不要怕浪费时间，在每个细节上比别人多做一点，最后累积起来就是进步。不但申请GSoC，做人亦是如此。\n\n最后我要感谢Colyli，他在我的申请过程中给了我莫大的帮助，万分感谢，这之后肯定还有许多需要麻烦他的地方. GSoC申请成功对我而言不是一个终点而是一个起点，我面前还有一个充实且**疯狂**(coly语^_^)的夏天。我得好好prepare myself, and enjoy summer of code.\n","cover":"","link":"gsoc-2008.html","preview":"\u003cp\u003e这几天项目要中期验收，实验室抓的真紧。。。。今晚终于找到时间静下心来好好总结一下。\u003c/p\u003e\n","title":"GSoC 2008申请总结"},{"content":"\n# Macbeth: Act 1, Scene 1\n*Thunder and lightning.*  \n*Enter three WITCHES.*\n\n**First Witch**  \nWhen shall we three meet again?  \nIn thunder, lightning, or in rain?\n\n**Second Witch**  \nWhen the hurlyburly's done,  \nWhen the battle's lost and won.\n\n**Third Witch**  \nThat will be ere the set of sun.\n\n**First Witch**  \nWhere the place?\n\n**Second Witch**  \nUpon the heath.\n\n**Third Witch**  \nThere to meet with Macbeth.\n\n**First Witch**  \nI come, Graymalkin!\n\n**Second Witch**  \nPaddock calls.\n\n**Third Witch**  \nAnon.\n\n**ALL**  \nFair is foul, and foul is fair:  \nHover through the fog and filthy air.\n","cover":"","link":"macbeth-act1-scene1.html","preview":"\u003cp\u003eMy favorite scene of Shakespeare\u0026rsquo;s works. Fair is foul, and foul is fair. Hover through the fog and filthy air.\u003c/p\u003e\n","title":"Macbeth Act 1 Scene 1"},{"content":"\n# Prometheus Unbound\n\n**A LYRICAL DRAMA IN FOUR ACTS.**\n\n**BY PERCY BYSSHE SHELLEY**\n\nThe text — not a critical text,\n— is drawn from the old Cambridge edition.\n\n---\n# PREFACE\nThe Greek tragic writers, in selecting as their subject any portion of their national history or mythology, employed in their treatment of it a certain arbitrary discretion. They by no means conceived themselves bound to adhere to the common interpretation or to imitate in story as in title their rivals and predecessors. Such a system would have amounted to a resignation of those claims to preference over their competitors which incited the composition. The Agamemnonian story was exhibited on the Athenian theatre with as many variations as dramas.\n\nI have presumed to employ a similar license. The Prometheus Unbound of Æschylus supposed the reconciliation of Jupiter with his victim as the price of the disclosure of the danger threatened to his empire by the consummation of his marriage with Thetis. Thetis, according to this view of the subject, was given in marriage to Peleus, and Prometheus, by the permission of Jupiter, delivered from his captivity by Hercules. Had I framed my story on this model, I should have done no more than have attempted to restore the lost drama of Æschylus; an ambition which, if my preference to this mode of treating the subject had incited me to cherish, the recollection of the high comparison such an attempt would challenge might well abate. But, in truth, I was averse from a catastrophe so feeble as that of reconciling the Champion with the Oppressor of mankind. The moral interest of the fable, which is so powerfully sustained by the sufferings and endurance of Prometheus, would be annihilated if we could conceive of him as unsaying his high language and quailing before his successful and perfidious adversary. The only imaginary being, resembling in any degree Prometheus, is Satan; and Prometheus is, in my judgment, a more poetical character than Satan, because, in addition to courage, and majesty, and firm and patient opposition to omnipotent force, he is susceptible of being described as exempt from the taints of ambition, envy, revenge, and a desire for personal aggrandizement, which, in the hero of Paradise Lost, interfere with the interest. The character of Satan engenders in the mind a pernicious casuistry which leads us to weigh his faults with his wrongs, and to excuse the former because the latter exceed all measure. In the minds of those who consider that magnificent fiction with a religious feeling it engenders something worse. But Prometheus is, as it were, the type of the highest perfection of moral and intellectual nature impelled by the purest and the truest motives to the best and noblest ends.\n\nThis Poem was chiefly written upon the mountainous ruins of the Baths of Caracalla, among the flowery glades and thickets of odoriferous blossoming trees, which are extended in ever winding labyrinths upon its immense platforms and dizzy arches suspended in the air. The bright blue sky of Rome, and the effect of the vigorous awakening spring in that divinest climate, and the new life with which it drenches the spirits even to intoxication, were the inspiration of this drama.\n\nThe imagery which I have employed will be found, in many instances, to have been drawn from the operations of the human mind, or from those external actions by which they are expressed. This is unusual in modern poetry, although Dante and Shakespeare are full of instances of the same kind; Dante indeed more than any other poet, and with greater success. But the Greek poets, as writers to whom no resource of awakening the sympathy of their contemporaries was unknown, were in the habitual use of this power; and it is the study of their works (since a higher merit would probably be denied me) to which I am willing that my readers should impute this singularity.\n\nOne word is due in candor to the degree in which the study of contemporary writings may have tinged my composition, for such has been a topic of censure with regard to poems far more popular, and indeed more deservedly popular, than mine. It is impossible that any one, who inhabits the same age with such writers as those who stand in the foremost ranks of our own, can conscientiously assure himself that his language and tone of thought may not have been modified by the study of the productions of those extraordinary intellects. It is true that, not the spirit of their genius, but the forms in which it has manifested itself, are due less to the peculiarities of their own minds than to the peculiarity of the moral and intellectual condition of the minds among which they have been produced. Thus a number of writers possess the form, whilst they want the spirit of those whom, it is alleged, they imitate; because the former is the endowment of the age in which they live, and the latter must be the uncommunicated lightning of their own mind.\n\nThe peculiar style of intense and comprehensive imagery which distinguishes the modern literature of England has not been, as a general power, the product of the imitation of any particular writer. The mass of capabilities remains at every period materially the same; the circumstances which awaken it to action perpetually change. If England were divided into forty republics, each equal in population and extent to Athens, there is no reason to suppose but that, under institutions not more perfect than those of Athens, each would produce philosophers and poets equal to those who (if we except Shakespeare) have never been surpassed. We owe the great writers of the golden age of our literature to that fervid awakening of the public mind which shook to dust the oldest and most oppressive form of the Christian religion. We owe Milton to the progress and development of the same spirit: the sacred Milton was, let it ever be remembered, a republican and a bold inquirer into morals and religion. The great writers of our own age are, we have reason to suppose, the companions and forerunners of some unimagined change in our social condition or the opinions which cement it. The cloud of mind is discharging its collected lightning, and the equilibrium between institutions and opinions is now restoring or is about to be restored.\n\nAs to imitation, poetry is a mimetic art. It creates, but it creates by combination and representation. Poetical abstractions are beautiful and new, not because the portions of which they are composed had no previous existence in the mind of man or in Nature, but because the whole produced by their combination has some intelligible and beautiful analogy with those sources of emotion and thought and with the contemporary condition of them. One great poet is a masterpiece of Nature which another not only ought to study but must study. He might as wisely and as easily determine that his mind should no longer be the mirror of all that is lovely in the visible universe as exclude from his contemplation the beautiful which exists in the writings of a great contemporary. The pretence of doing it would be a presumption in any but the greatest; the effect, even in him, would be strained, unnatural and ineffectual. A poet is the combined product of such internal powers as modify the nature of others, and of such external influences as excite and sustain these powers; he is not one, but both. Every man's mind is, in this respect, modified by all the objects of Nature and art; by every word and every suggestion which he ever admitted to act upon his consciousness; it is the mirror upon which all forms are reflected and in which they compose one form. Poets, not otherwise than philosophers, painters, sculptors and musicians, are, in one sense, the creators, and, in another, the creations, of their age. From this subjection the loftiest do not escape. There is a similarity between Homer and Hesiod, between Æschylus and Euripides, between Virgil and Horace, between Dante and Petrarch, between Shakespeare and Fletcher, between Dryden and Pope; each has a generic resemblance under which their specific distinctions are arranged. If this similarity be the result of imitation, I am willing to confess that I have imitated.\n\nLet this opportunity be conceded to me of acknowledging that I have what a Scotch philosopher characteristically terms a 'passion for reforming the world:' what passion incited him to write and publish his book he omits to explain. For my part I had rather be damned with Plato and Lord Bacon than go to Heaven with Paley and Malthus. But it is a mistake to suppose that I dedicate my poetical compositions solely to the direct enforcement of reform, or that I consider them in any degree as containing a reasoned system on the theory of human life. Didactic poetry is my abhorrence; nothing can be equally well expressed in prose that is not tedious and supererogatory in verse. My purpose has hitherto been simply to familiarize the highly refined imagination of the more select classes of poetical readers with beautiful idealisms of moral excellence; aware that, until the mind can love, and admire, and trust, and hope, and endure, reasoned principles of moral conduct are seeds cast upon the highway of life which the unconscious passenger tramples into dust, although they would bear the harvest of his happiness. Should I live to accomplish what I purpose, that is, produce a systematical history of what appear to me to be the genuine elements of human society, let not the advocates of injustice and superstition flatter themselves that I should take Æschylus rather than Plato as my model.\n\nThe having spoken of myself with unaffected freedom will need little apology with the candid; and let the uncandid consider that they injure me less than their own hearts and minds by misrepresentation. Whatever talents a person may possess to amuse and instruct others, be they ever so inconsiderable, he is yet bound to exert them: if his attempt be ineffectual, let the punishment of an unaccomplished purpose have been sufficient; let none trouble themselves to heap the dust of oblivion upon his efforts; the pile they raise will betray his grave which might otherwise have been unknown.\n\n---\n\n# Dramatis Persons\nPrometheus.\tAsia }  \nDemogorgon.\tPanthea } Oceanides.  \nJupiter.\tIone }  \nThe Earth.\tThe Phantasm of Jupiter.  \nOcean.\tThe Spirit of the Earth.  \nApollo.\tThe Spirit of the Moon.  \nMercury.\tSpirits of the Hours.  \nHercules.\tSpirits. Echoes. Fauns. Furies.\n\n---\n# ACT I\nScene. — A Ravine of Icy Rocks in the Indian Caucasus. Prometheus is discovered bound to the Precipice. Panthea and Ione are seated at his feet. Time, night. During the Scene, morning slowly breaks.  \n\n**Prometheus.**\n\nMonarch of Gods and Dæmons, and all Spirits  \nBut One, who throng those bright and rolling worlds  \nWhich Thou and I alone of living things  \nBehold with sleepless eyes! regard this Earth  \nMade multitudinous with thy slaves, whom thou [1.5]  \nRequitest for knee-worship, prayer, and praise,  \nAnd toil, and hecatombs of broken hearts,  \nWith fear and self-contempt and barren hope.  \nWhilst me, who am thy foe, eyeless in hate,  \nHast thou made reign and triumph, to thy scorn, [1.10]  \nO'er mine own misery and thy vain revenge.  \nThree thousand years of sleep-unsheltered hours,  \nAnd moments aye divided by keen pangs  \nTill they seemed years, torture and solitude,  \nScorn and despair, — these are mine empire: — [1.15]  \nMore glorious far than that which thou surveyest  \nFrom thine unenvied throne, O Mighty God!  \nAlmighty, had I deigned to share the shame  \nOf thine ill tyranny, and hung not here  \nNailed to this wall of eagle-baffling mountain, [1.20]  \nBlack, wintry, dead, unmeasured; without herb,  \nInsect, or beast, or shape or sound of life.  \nAh me! alas, pain, pain ever, for ever!  \n\nNo change, no pause, no hope! Yet I endure.  \nI ask the Earth, have not the mountains felt? [1.25]  \nI ask yon Heaven, the all-beholding Sun,  \nHas it not seen? The Sea, in storm or calm,  \nHeaven's ever-changing Shadow, spread below,  \nHave its deaf waves not heard my agony?  \nAh me! alas, pain, pain ever, for ever! [1.30]  \n\nThe crawling glaciers pierce me with the spears  \nOf their moon-freezing crystals, the bright chains  \nEat with their burning cold into my bones.  \nHeaven's wingèd hound, polluting from thy lips  \nHis beak in poison not his own, tears up [1.35]  \nMy heart; and shapeless sights come wandering by,  \nThe ghastly people of the realm of dream,  \nMocking me: and the Earthquake-fiends are charged  \nTo wrench the rivets from my quivering wounds  \nWhen the rocks split and close again behind: [1.40]  \nWhile from their loud abysses howling throng  \nThe genii of the storm, urging the rage  \nOf whirlwind, and afflict me with keen hail.  \nAnd yet to me welcome is day and night,  \nWhether one breaks the hoar frost of the morn, [1.45]  \nOr starry, dim, and slow, the other climbs  \nThe leaden-coloured east; for then they lead  \nThe wingless, crawling hours, one among whom  \n— As some dark Priest hales the reluctant victim —  \nShall drag thee, cruel King, to kiss the blood [1.50]  \nFrom these pale feet, which then might trample thee  \nIf they disdained not such a prostrate slave.  \nDisdain! Ah no! I pity thee. What ruin  \nWill hunt thee undefended through wide Heaven!  \nHow will thy soul, cloven to its depth with terror, [1.55]  \nGape like a hell within! I speak in grief,  \nNot exultation, for I hate no more,  \nAs then ere misery made me wise. The curse  \nOnce breathed on thee I would recall. Ye Mountains,  \nWhose many-voicèd Echoes, through the mist [1.60]  \nOf cataracts, flung the thunder of that spell!  \nYe icy Springs, stagnant with wrinkling frost,  \nWhich vibrated to hear me, and then crept  \nShuddering through India! Thou serenest Air,  \nThrough which the Sun walks burning without beams! [1.65]  \nAnd ye swift Whirlwinds, who on poisèd wings  \nHung mute and moveless o'er yon hushed abyss,  \nAs thunder, louder than your own, made rock  \nThe orbèd world! If then my words had power,  \nThough I am changed so that aught evil wish [1.70]  \nIs dead within; although no memory be  \nOf what is hate, let them not lose it now!  \nWhat was that curse? for ye all heard me speak.  \n\n**First Voice (from the Mountains).**\n\nThrice three hundred thousand years  \nO'er the Earthquake's couch we stood: [1.75]  \nOft, as men convulsed with fears,  \nWe trembled in our multitude.  \n\n**Second Voice (from the Springs).**\n\nThunderbolts had parched our water,  \nWe had been stained with bitter blood,  \nAnd had run mute, 'mid shrieks of slaughter, [1.80]  \nThro' a city and a solitude.  \nThird Voice (from the Air).  \n\nI had clothed, since Earth uprose,  \nIts wastes in colours not their own,  \nAnd oft had my serene repose  \nBeen cloven by many a rending groan. [1.85]  \nFourth Voice (from the Whirlwinds).  \n\nWe had soared beneath these mountains  \nUnresting ages; nor had thunder,  \nNor yon volcano's flaming fountains,  \nNor any power above or under  \nEver made us mute with wonder. [1.90]  \n\n**First Voice.**\n\nBut never bowed our snowy crest  \nAs at the voice of thine unrest.  \n\n**Second Voice.**\n\nNever such a sound before  \nTo the Indian waves we bore.  \nA pilot asleep on the howling sea [1.95]  \nLeaped up from the deck in agony,  \nAnd heard, and cried, \"Ah, woe is me!\"  \nAnd died as mad as the wild waves be.  \n\n**Third Voice.**\n\nBy such dread words from Earth to Heaven  \nMy still realm was never riven: [1.100]  \nWhen its wound was closed, there stood  \nDarkness o'er the day like blood.  \n\n**Fourth Voice.**\n\nAnd we shrank back: for dreams of ruin  \nTo frozen caves our flight pursuing  \nMade us keep silence — thus — and thus — [1.105]  \nThough silence is as hell to us.  \n\n**The Earth.**\n\nThe tongueless Caverns of the craggy hills  \nCried, \"Misery!\" then; the hollow Heaven replied,  \n\"Misery!\" And the Ocean's purple waves,  \nClimbing the land, howled to the lashing winds, [1.110]  \nAnd the pale nations heard it, \"Misery!\"  \n\n**Prometheus.**\n\nI heard a sound of voices: not the voice  \nWhich I gave forth. Mother, thy sons and thou  \nScorn him, without whose all-enduring will  \nBeneath the fierce omnipotence of Jove, [1.115]  \nBoth they and thou had vanished, like thin mist  \nUnrolled on the morning wind. Know ye not me,  \nThe Titan? He who made his agony  \nThe barrier to your else all-conquering foe?  \nOh, rock-embosomed lawns, and snow-fed streams, [1.120]  \nNow seen athwart frore vapours, deep below,  \nThrough whose o'ershadowing woods I wandered once  \nWith Asia, drinking life from her loved eyes;  \nWhy scorns the spirit which informs ye, now  \nTo commune with me? me alone, who checked, [1.125]  \nAs one who checks a fiend-drawn charioteer,  \nThe falsehood and the force of him who reigns  \nSupreme, and with the groans of pining slaves  \nFills your dim glens and liquid wildernesses:  \nWhy answer ye not, still? Brethren!  \n\n**The Earth.**\n\nThey dare not. [1.130]  \n\n**Prometheus.**\n\nWho dares? for I would hear that curse again.  \nHa, what an awful whisper rises up!  \n'Tis scarce like sound: it tingles through the frame  \nAs lightning tingles, hovering ere it strike.  \nSpeak, Spirit! from thine inorganic voice [1.135]  \nI only know that thou art moving near  \nAnd love. How cursed I him?  \n\n**The Earth.**\n\nHow canst thou hear  \nWho knowest not the language of the dead?  \n\n**Prometheus.**\n\nThou art a living spirit; speak as they.  \n\n**The Earth.**\n\nI dare not speak like life, lest Heaven's fell King [1.140]  \nShould hear, and link me to some wheel of pain  \nMore torturing than the one whereon I roll.  \nSubtle thou art and good, and though the Gods  \nHear not this voice, yet thou art more than God,  \nBeing wise and kind: earnestly hearken now. [1.145]  \n\n**Prometheus.**\n\nObscurely through my brain, like shadows dim,  \nSweep awful thoughts, rapid and thick. I feel  \nFaint, like one mingled in entwining love;  \nYet 'tis not pleasure.  \n\n**The Earth.**\n\nNo, thou canst not hear:\nThou art immortal, and this tongue is known [1.150]\nOnly to those who die.\nPrometheus.\n\nAnd what art thou,\nO, melancholy Voice?\nThe Earth.\n\nI am the Earth,\nThy mother; she within whose stony veins,\nTo the last fibre of the loftiest tree\nWhose thin leaves trembled in the frozen air, [1.155]\nJoy ran, as blood within a living frame,\nWhen thou didst from her bosom, like a cloud\nOf glory, arise, a spirit of keen joy!\nAnd at thy voice her pining sons uplifted\nTheir prostrate brows from the polluting dust, [1.160]\nAnd our almighty Tyrant with fierce dread\nGrew pale, until his thunder chained thee here.\nThen, see those million worlds which burn and roll\nAround us: their inhabitants beheld\nMy spherèd light wane in wide Heaven; the sea [1.165]\nWas lifted by strange tempest, and new fire\nFrom earthquake-rifted mountains of bright snow\nShook its portentous hair beneath Heaven's frown;\nLightning and Inundation vexed the plains;\nBlue thistles bloomed in cities; foodless toads [1.170]\nWithin voluptuous chambers panting crawled:\nWhen Plague had fallen on man, and beast, and worm,\nAnd Famine; and black blight on herb and tree;\nAnd in the corn, and vines, and meadow-grass,\nTeemed ineradicable poisonous weeds [1.175]\nDraining their growth, for my wan breast was dry\nWith grief; and the thin air, my breath, was stained\nWith the contagion of a mother's hate\nBreathed on her child's destroyer; ay, I heard\nThy curse, the which, if thou rememberest not, [1.180]\nYet my innumerable seas and streams,\nMountains, and caves, and winds, and yon wide air,\nAnd the inarticulate people of the dead,\nPreserve, a treasured spell. We meditate\nIn secret joy and hope those dreadful words, [1.185]\nBut dare not speak them.\nPrometheus.\n\nVenerable mother!\nAll else who live and suffer take from thee\nSome comfort; flowers, and fruits, and happy sounds,\nAnd love, though fleeting; these may not be mine.\nBut mine own words, I pray, deny me not. [1.190]\nThe Earth.\n\nThey shall be told. Ere Babylon was dust,\nThe Magus Zoroaster, my dead child,\nMet his own image walking in the garden.\nThat apparition, sole of men, he saw.\nFor know there are two worlds of life and death: [1.195]\nOne that which thou beholdest; but the other\nIs underneath the grave, where do inhabit\nThe shadows of all forms that think and live\nTill death unite them and they part no more;\nDreams and the light imaginings of men, [1.200]\nAnd all that faith creates or love desires,\nTerrible, strange, sublime and beauteous shapes.\nThere thou art, and dost hang, a writhing shade,\n'Mid whirlwind-peopled mountains; all the gods\nAre there, and all the powers of nameless worlds, [1.205]\nVast, sceptred phantoms; heroes, men, and beasts;\nAnd Demogorgon, a tremendous gloom;\nAnd he, the supreme Tyrant, on his throne\nOf burning gold. Son, one of these shall utter\nThe curse which all remember. Call at will [1.210]\nThine own ghost, or the ghost of Jupiter,\nHades or Typhon, or what mightier Gods\nFrom all-prolific Evil, since thy ruin\nHave sprung, and trampled on my prostrate sons.\nAsk, and they must reply: so the revenge [1.215]\nOf the Supreme may sweep through vacant shades,\nAs rainy wind through the abandoned gate\nOf a fallen palace.\nPrometheus.\n\nMother, let not aught\nOf that which may be evil, pass again\nMy lips, or those of aught resembling me. [1.220]\nPhantasm of Jupiter, arise, appear!\nIone.\n\nMy wings are folded o'er mine ears:\nMy wings are crossèd o'er mine eyes:\nYet through their silver shade appears,\nAnd through their lulling plumes arise, [1.225]\nA Shape, a throng of sounds;\nMay it be no ill to thee\nO thou of many wounds!\nNear whom, for our sweet sister's sake,\nEver thus we watch and wake. [1.230]\nPanthea.\n\nThe sound is of whirlwind underground,\nEarthquake, and fire, and mountains cloven;\nThe shape is awful like the sound,\nClothed in dark purple, star-inwoven.\nA sceptre of pale gold [1.235]\nTo stay steps proud, o'er the slow cloud\nHis veinèd hand doth hold.\nCruel he looks, but calm and strong,\nLike one who does, not suffers wrong.\nPhantasm of Jupiter.\n\nWhy have the secret powers of this strange world [1.240]\nDriven me, a frail and empty phantom, hither\nOn direst storms? What unaccustomed sounds\nAre hovering on my lips, unlike the voice\nWith which our pallid race hold ghastly talk\nIn darkness? And, proud sufferer, who art thou? [1.245]\nPrometheus.\n\nTremendous Image, as thou art must be\nHe whom thou shadowest forth. I am his foe,\nThe Titan. Speak the words which I would hear,\nAlthough no thought inform thine empty voice.\nThe Earth.\n\nListen! And though your echoes must be mute, [1.250]\nGray mountains, and old woods, and haunted springs,\nProphetic caves, and isle-surrounding streams,\nRejoice to hear what yet ye cannot speak.\nPhantasm.\n\nA spirit seizes me and speaks within:\nIt tears me as fire tears a thunder-cloud. [1.255]\nPanthea.\n\nSee, how he lifts his mighty looks, the Heaven\nDarkens above.\nIone.\n\nHe speaks! O shelter me!\nPrometheus.\n\nI see the curse on gestures proud and cold,\nAnd looks of firm defiance, and calm hate,\nAnd such despair as mocks itself with smiles, [1.260]\nWritten as on a scroll: yet speak: Oh, speak!\nPhantasm.\n\nFiend, I defy thee! with a calm, fixed mind,\nAll that thou canst inflict I bid thee do;\nFoul Tyrant both of Gods and Human-kind,\nOne only being shalt thou not subdue. [1.265]\nRain then thy plagues upon me here,\nGhastly disease, and frenzying fear;\nAnd let alternate frost and fire\nEat into me, and be thine ire\nLightning, and cutting hail, and legioned forms [1.270]\nOf furies, driving by upon the wounding storms.\n\nAy, do thy worst. Thou art omnipotent.\nO'er all things but thyself I gave thee power,\nAnd my own will. Be thy swift mischiefs sent\nTo blast mankind, from yon ethereal tower. [1.275]\nLet thy malignant spirit move\nIn darkness over those I love:\nOn me and mine I imprecate\nThe utmost torture of thy hate;\nAnd thus devote to sleepless agony, [1.280]\nThis undeclining head while thou must reign on high.\n\nBut thou, who art the God and Lord: O, thou,\nWho fillest with thy soul this world of woe,\nTo whom all things of Earth and Heaven do bow\nIn fear and worship: all-prevailing foe! [1.285]\nI curse thee! let a sufferer's curse\nClasp thee, his torturer, like remorse;\nTill thine Infinity shall be\nA robe of envenomed agony;\nAnd thine Omnipotence a crown of pain, [1.290]\nTo cling like burning gold round thy dissolving brain.\n\nHeap on thy soul, by virtue of this Curse,\nIll deeds, then be thou damned, beholding good;\nBoth infinite as is the universe,\nAnd thou, and thy self-torturing solitude. [1.295]\nAn awful image of calm power\nThough now thou sittest, let the hour\nCome, when thou must appear to be\nThat which thou art internally;\nAnd after many a false and fruitless crime [1.300]\nScorn track thy lagging fall through boundless space and time.\nPrometheus.\n\nWere these my words, O Parent?\nThe Earth.\n\nThey were thine.\nPrometheus.\n\nIt doth repent me: words are quick and vain;\nGrief for awhile is blind, and so was mine.\nI wish no living thing to suffer pain. [1.305]\nThe Earth.\n\nMisery, Oh misery to me,\nThat Jove at length should vanquish thee.\nWail, howl aloud, Land and Sea,\nThe Earth's rent heart shall answer ye.\nHowl, Spirits of the living and the dead, [1.310]\nYour refuge, your defence lies fallen and vanquishèd.\nFirst Echo.\n\nLies fallen and vanquishèd!\nSecond Echo.\n\nFallen and vanquishèd!\nIone.\n\nFear not: 'tis but some passing spasm,\nThe Titan is unvanquished still. [1.315]\nBut see, where through the azure chasm\nOf yon forked and snowy hill\nTrampling the slant winds on high\nWith golden-sandalled feet, that glow\nUnder plumes of purple dye, [1.320]\nLike rose-ensanguined ivory,\nA Shape comes now,\nStretching on high from his right hand\nA serpent-cinctured wand.\nPanthea.\n\n'Tis Jove's world-wandering herald, Mercury. [1.325]\nIone.\n\nAnd who are those with hydra tresses\nAnd iron wings that climb the wind,\nWhom the frowning God represses\nLike vapours steaming up behind,\nClanging loud, an endless crowd — [1.330]\nPanthea.\n\nThese are Jove's tempest-walking hounds,\nWhom he gluts with groans and blood,\nWhen charioted on sulphurous cloud\nHe bursts Heaven's bounds.\nIone.\n\nAre they now led, from the thin dead [1.335]\nOn new pangs to be fed?\nPanthea.\n\nThe Titan looks as ever, firm, not proud.\nFirst Fury.\n\nHa! I scent life!\nSecond Fury.\n\nLet me but look into his eyes!\nThird Fury.\n\nThe hope of torturing him smells like a heap\nOf corpses, to a death-bird after battle. [1.340]\nFirst Fury.\n\nDarest thou delay, O Herald! take cheer, Hounds\nOf Hell: what if the Son of Maia soon\nShould make us food and sport — who can please long\nThe Omnipotent?\nMercury.\n\nBack to your towers of iron,\nAnd gnash, beside the streams of fire and wail, [1.345]\nYour foodless teeth. Geryon, arise! and Gorgon,\nChimæra, and thou Sphinx, subtlest of fiends\nWho ministered to Thebes Heaven's poisoned wine,\nUnnatural love, and more unnatural hate:\nThese shall perform your task.\nFirst Fury.\n\nOh, mercy! mercy! [1.350]\nWe die with our desire: drive us not back!\nMercury.\n\nCrouch then in silence. Awful Sufferer!\nTo thee unwilling, most unwillingly\nI come, by the great Father's will driven down,\nTo execute a doom of new revenge. [1.355]\nAlas! I pity thee, and hate myself\nThat I can do no more: aye from thy sight\nReturning, for a season, Heaven seems Hell,\nSo thy worn form pursues me night and day,\nSmiling reproach. Wise art thou, firm and good, [1.360]\nBut vainly wouldst stand forth alone in strife\nAgainst the Omnipotent; as yon clear lamps\nThat measure and divide the weary years\nFrom which there is no refuge, long have taught\nAnd long must teach. Even now thy Torturer arms [1.365]\nWith the strange might of unimagined pains\nThe powers who scheme slow agonies in Hell,\nAnd my commission is to lead them here,\nOr what more subtle, foul, or savage fiends\nPeople the abyss, and leave them to their task. [1.370]\nBe it not so! there is a secret known\nTo thee, and to none else of living things,\nWhich may transfer the sceptre of wide Heaven,\nThe fear of which perplexes the Supreme:\nClothe it in words, and bid it clasp his throne [1.375]\nIn intercession; bend thy soul in prayer,\nAnd like a suppliant in some gorgeous fane,\nLet the will kneel within thy haughty heart:\nFor benefits and meek submission tame\nThe fiercest and the mightiest.\nPrometheus.\n\nEvil minds [1.380]\nChange good to their own nature. I gave all\nHe has; and in return he chains me here\nYears, ages, night and day: whether the Sun\nSplit my parched skin, or in the moony night\nThe crystal-wingèd snow cling round my hair: [1.385]\nWhilst my belovèd race is trampled down\nBy his thought-executing ministers.\nSuch is the tyrant's recompense: 'tis just:\nHe who is evil can receive no good;\nAnd for a world bestowed, or a friend lost, [1.390]\nHe can feel hate, fear, shame; not gratitude:\nHe but requites me for his own misdeed.\nKindness to such is keen reproach, which breaks\nWith bitter stings the light sleep of Revenge.\nSubmission, thou dost know I cannot try: [1.395]\nFor what submission but that fatal word,\nThe death-seal of mankind's captivity,\nLike the Sicilian's hair-suspended sword,\nWhich trembles o'er his crown, would he accept,\nOr could I yield? Which yet I will not yield. [1.400]\nLet others flatter Crime, where it sits throned\nIn brief Omnipotence: secure are they:\nFor Justice, when triumphant, will weep down\nPity, not punishment, on her own wrongs,\nToo much avenged by those who err. I wait, [1.405]\nEnduring thus, the retributive hour\nWhich since we spake is even nearer now.\nBut hark, the hell-hounds clamour: fear delay:\nBehold! Heaven lowers under thy Father's frown.\nMercury.\n\nOh, that we might be spared: I to inflict [1.410]\nAnd thou to suffer! Once more answer me:\nThou knowest not the period of Jove's power?\nPrometheus.\n\nI know but this, that it must come.\nMercury.\n\nAlas!\nThou canst not count thy years to come of pain?\nPrometheus.\n\nThey last while Jove must reign: nor more, nor less [1.415]\nDo I desire or fear.\nMercury.\n\nYet pause, and plunge\nInto Eternity, where recorded time,\nEven all that we imagine, age on age,\nSeems but a point, and the reluctant mind\nFlags wearily in its unending flight, [1.420]\nTill it sink, dizzy, blind, lost, shelterless;\nPerchance it has not numbered the slow years\nWhich thou must spend in torture, unreprieved?\nPrometheus.\n\nPerchance no thought can count them, yet they pass.\nMercury.\n\nIf thou might'st dwell among the Gods the while [1.425]\nLapped in voluptuous joy?\nPrometheus.\n\nI would not quit\nThis bleak ravine, these unrepentant pains.\nMercury.\n\nAlas! I wonder at, yet pity thee.\nPrometheus.\n\nPity the self-despising slaves of Heaven,\nNot me, within whose mind sits peace serene, [1.430]\nAs light in the sun, throned: how vain is talk!\nCall up the fiends.\nIone.\n\nO, sister, look! White fire\nHas cloven to the roots yon huge snow-loaded cedar;\nHow fearfully God's thunder howls behind!\nMercury.\n\nI must obey his words and thine: alas! [1.435]\nMost heavily remorse hangs at my heart!\nPanthea.\n\nSee where the child of Heaven, with wingèd feet,\nRuns down the slanted sunlight of the dawn.\nIone.\n\nDear sister, close thy plumes over thine eyes\nLest thou behold and die: they come: they come [1.440]\nBlackening the birth of day with countless wings,\nAnd hollow underneath, like death.\nFirst Fury.\n\nPrometheus!\nSecond Fury.\n\nImmortal Titan!\nThird Fury.\n\nChampion of Heaven's slaves!\nPrometheus.\n\nHe whom some dreadful voice invokes is here,\nPrometheus, the chained Titan. Horrible forms, [1.445]\nWhat and who are ye? Never yet there came\nPhantasms so foul through monster-teeming Hell\nFrom the all-miscreative brain of Jove;\nWhilst I behold such execrable shapes,\nMethinks I grow like what I contemplate, [1.450]\nAnd laugh and stare in loathsome sympathy.\nFirst Fury.\n\nWe are the ministers of pain, and fear,\nAnd disappointment, and mistrust, and hate,\nAnd clinging crime; and as lean dogs pursue\nThrough wood and lake some struck and sobbing fawn, [1.455]\nWe track all things that weep, and bleed, and live,\nWhen the great King betrays them to our will.\nPrometheus.\n\nOh! many fearful natures in one name,\nI know ye; and these lakes and echoes know\nThe darkness and the clangour of your wings. [1.460]\nBut why more hideous than your loathèd selves\nGather ye up in legions from the deep?\nSecond Fury.\n\nWe knew not that: Sisters, rejoice, rejoice!\nPrometheus.\n\nCan aught exult in its deformity?\nSecond Fury.\n\nThe beauty of delight makes lovers glad, [1.465]\nGazing on one another: so are we.\nAs from the rose which the pale priestess kneels\nTo gather for her festal crown of flowers\nThe aëreal crimson falls, flushing her cheek,\nSo from our victim's destined agony [1.470]\nThe shade which is our form invests us round,\nElse we are shapeless as our mother Night.\nPrometheus.\n\nI laugh your power, and his who sent you here,\nTo lowest scorn. Pour forth the cup of pain.\nFirst Fury.\n\nThou thinkest we will rend thee bone from bone, [1.475]\nAnd nerve from nerve, working like fire within?\nPrometheus.\n\nPain is my element, as hate is thine;\nYe rend me now: I care not.\nSecond Fury.\n\nDost imagine\nWe will but laugh into thy lidless eyes?\nPrometheus.\n\nI weigh not what ye do, but what ye suffer, [1.480]\nBeing evil. Cruel was the power which called\nYou, or aught else so wretched, into light.\nThird Fury.\n\nThou think'st we will live through thee, one by one,\nLike animal life, and though we can obscure not\nThe soul which burns within, that we will dwell [1.485]\nBeside it, like a vain loud multitude\nVexing the self-content of wisest men:\nThat we will be dread thought beneath thy brain,\nAnd foul desire round thine astonished heart,\nAnd blood within thy labyrinthine veins [1.490]\nCrawling like agony?\nPrometheus.\n\nWhy, ye are thus now;\nYet am I king over myself, and rule\nThe torturing and conflicting throngs within,\nAs Jove rules you when Hell grows mutinous.\nChorus of Furies.\n\nFrom the ends of the earth, from the ends of the earth, [1.495]\nWhere the night has its grave and the morning its birth,\nCome, come, come!\nOh, ye who shake hills with the scream of your mirth,\nWhen cities sink howling in ruin; and ye\nWho with wingless footsteps trample the sea, [1.500]\nAnd close upon Shipwreck and Famine's track,\nSit chattering with joy on the foodless wreck;\nCome, come, come!\nLeave the bed, low, cold, and red,\nStrewed beneath a nation dead; [1.505]\nLeave the hatred, as in ashes\nFire is left for future burning:\nIt will burst in bloodier flashes\nWhen ye stir it, soon returning:\nLeave the self-contempt implanted [1.510]\nIn young spirits, sense-enchanted,\nMisery's yet unkindled fuel:\nLeave Hell's secrets half unchanted\nTo the maniac dreamer; cruel\nMore than ye can be with hate [1.515]\nIs he with fear.\nCome, come, come!\nWe are steaming up from Hell's wide gate\nAnd we burthen the blast of the atmosphere,\nBut vainly we toil till ye come here. [1.520]\nIone.\n\nSister, I hear the thunder of new wings.\nPanthea.\n\nThese solid mountains quiver with the sound\nEven as the tremulous air: their shadows make\nThe space within my plumes more black than night.\nFirst Fury.\n\nYour call was as a wingèd car [1.525]\nDriven on whirlwinds fast and far;\nIt rapped us from red gulfs of war.\nSecond Fury.\n\nFrom wide cities, famine-wasted;\nThird Fury.\n\nGroans half heard, and blood untasted;\nFourth Fury.\n\nKingly conclaves stern and cold, [1.530]\nWhere blood with gold is bought and sold;\nFifth Fury.\n\nFrom the furnace, white and hot,\nIn which —\nA Fury.\n\nSpeak not: whisper not:\nI know all that ye would tell,\nBut to speak might break the spell [1.535]\nWhich must bend the Invincible,\nThe stern of thought;\nHe yet defies the deepest power of Hell.\nA Fury.\n\nTear the veil!\nAnother Fury.\n\nIt is torn.\nChorus.\n\nThe pale stars of the morn\nShine on a misery, dire to be borne. [1.540]\nDost thou faint, mighty Titan? We laugh thee to scorn.\nDost thou boast the clear knowledge thou waken'dst for man?\nThen was kindled within him a thirst which outran\nThose perishing waters; a thirst of fierce fever,\nHope, love, doubt, desire, which consume him for ever. [1.545]\nOne came forth of gentle worth\nSmiling on the sanguine earth;\nHis words outlived him, like swift poison\nWithering up truth, peace, and pity.\nLook! where round the wide horizon [1.550]\nMany a million-peopled city\nVomits smoke in the bright air.\nHark that outcry of despair!\n'Tis his mild and gentle ghost\nWailing for the faith he kindled: [1.555]\nLook again, the flames almost\nTo a glow-worm's lamp have dwindled:\nThe survivors round the embers\nGather in dread.\nJoy, joy, joy! [1.560]\nPast ages crowd on thee, but each one remembers,\nAnd the future is dark, and the present is spread\nLike a pillow of thorns for thy slumberless head.\nSemichorus I.\n\nDrops of bloody agony flow\nFrom his white and quivering brow. [1.565]\nGrant a little respite now:\nSee a disenchanted nation\nSprings like day from desolation;\nTo Truth its state is dedicate,\nAnd Freedom leads it forth, her mate; [1.570]\nA legioned band of linkèd brothers\nWhom Love calls children —\nSemichorus II.\n\n'Tis another's:\nSee how kindred murder kin:\n'Tis the vintage-time for death and sin:\nBlood, like new wine, bubbles within: [1.575]\nTill Despair smothers\nThe struggling world, which slaves and tyrants win.\n[All the Furies vanish, except one.\n\nIone.\n\nHark, sister! what a low yet dreadful groan\nQuite unsuppressed is tearing up the heart\nOf the good Titan, as storms tear the deep, [1.580]\nAnd beasts hear the sea moan in inland caves.\nDarest thou observe how the fiends torture him?\nPanthea.\n\nAlas! I looked forth twice, but will no more.\nIone.\n\nWhat didst thou see?\nPanthea.\n\nA woful sight: a youth\nWith patient looks nailed to a crucifix. [1.585]\nIone.\n\nWhat next?\nPanthea.\n\nThe heaven around, the earth below\nWas peopled with thick shapes of human death,\nAll horrible, and wrought by human hands,\nAnd some appeared the work of human hearts,\nFor men were slowly killed by frowns and smiles: [1.590]\nAnd other sights too foul to speak and live\nWere wandering by. Let us not tempt worse fear\nBy looking forth: those groans are grief enough.\nFury.\n\nBehold an emblem: those who do endure\nDeep wrongs for man, and scorn, and chains, but heap [1.595]\nThousandfold torment on themselves and him.\nPrometheus.\n\nRemit the anguish of that lighted stare;\nClose those wan lips; let that thorn-wounded brow\nStream not with blood; it mingles with thy tears!\nFix, fix those tortured orbs in peace and death, [1.600]\nSo thy sick throes shake not that crucifix,\nSo those pale fingers play not with thy gore.\nO, horrible! Thy name I will not speak,\nIt hath become a curse. I see, I see,\nThe wise, the mild, the lofty, and the just, [1.605]\nWhom thy slaves hate for being like to thee,\nSome hunted by foul lies from their heart's home,\nAn early-chosen, late-lamented home;\nAs hooded ounces cling to the driven hind;\nSome linked to corpses in unwholesome cells: [1.610]\nSome — Hear I not the multitude laugh loud? —\nImpaled in lingering fire: and mighty realms\nFloat by my feet, like sea-uprooted isles,\nWhose sons are kneaded down in common blood\nBy the red light of their own burning homes. [1.615]\nFury.\n\nBlood thou canst see, and fire; and canst hear groans;\nWorse things, unheard, unseen, remain behind.\nPrometheus.\n\nWorse?\nFury.\n\nIn each human heart terror survives\nThe ravin it has gorged: the loftiest fear\nAll that they would disdain to think were true: [1.620]\nHypocrisy and custom make their minds\nThe fanes of many a worship, now outworn.\nThey dare not devise good for man's estate,\nAnd yet they know not that they do not dare.\nThe good want power, but to weep barren tears. [1.625]\nThe powerful goodness want: worse need for them.\nThe wise want love; and those who love want wisdom;\nAnd all best things are thus confused to ill.\nMany are strong and rich, and would be just,\nBut live among their suffering fellow-men [1.630]\nAs if none felt: they know not what they do.\nPrometheus.\n\nThy words are like a cloud of wingèd snakes;\nAnd yet I pity those they torture not.\nFury.\n\nThou pitiest them? I speak no more!\n[Vanishes.\n\nPrometheus.\n\nAh woe!\nAh woe! Alas! pain, pain ever, for ever! [1.635]\nI close my tearless eyes, but see more clear\nThy works within my woe-illumèd mind,\nThou subtle tyrant! Peace is in the grave.\nThe grave hides all things beautiful and good:\nI am a God and cannot find it there, [1.640]\nNor would I seek it: for, though dread revenge,\nThis is defeat, fierce king, not victory.\nThe sights with which thou torturest gird my soul\nWith new endurance, till the hour arrives\nWhen they shall be no types of things which are. [1.645]\nPanthea.\n\nAlas! what sawest thou more?\nPrometheus.\n\nThere are two woes:\nTo speak, and to behold; thou spare me one.\nNames are there, Nature's sacred watchwords, they\nWere borne aloft in bright emblazonry;\nThe nations thronged around, and cried aloud, [1.650]\nAs with one voice, Truth, liberty, and love!\nSuddenly fierce confusion fell from heaven\nAmong them: there was strife, deceit, and fear:\nTyrants rushed in, and did divide the spoil.\nThis was the shadow of the truth I saw. [1.655]\nThe Earth.\n\nI felt thy torture, son; with such mixed joy\nAs pain and virtue give. To cheer thy state\nI bid ascend those subtle and fair spirits,\nWhose homes are the dim caves of human thought,\nAnd who inhabit, as birds wing the wind, [1.660]\nIts world-surrounding aether: they behold\nBeyond that twilight realm, as in a glass,\nThe future: may they speak comfort to thee!\nPanthea.\n\nLook, sister, where a troop of spirits gather,\nLike flocks of clouds in spring's delightful weather, [1.665]\nThronging in the blue air!\nIone.\n\nAnd see! more come,\nLike fountain-vapours when the winds are dumb,\nThat climb up the ravine in scattered lines.\nAnd, hark! is it the music of the pines?\nIs it the lake? Is it the waterfall? [1.670]\nPanthea.\n\n'Tis something sadder, sweeter far than all.\nChorus of Spirits.\n\nFrom unremembered ages we\nGentle guides and guardians be\nOf heaven-oppressed mortality;\nAnd we breathe, and sicken not, [1.675]\nThe atmosphere of human thought:\nBe it dim, and dank, and gray,\nLike a storm-extinguished day,\nTravelled o'er by dying gleams;\nBe it bright as all between [1.680]\nCloudless skies and windless streams,\nSilent, liquid, and serene;\nAs the birds within the wind,\nAs the fish within the wave,\nAs the thoughts of man's own mind [1.685]\nFloat through all above the grave;\nWe make there our liquid lair,\nVoyaging cloudlike and unpent\nThrough the boundless element:\nThence we bear the prophecy [1.690]\nWhich begins and ends in thee!\nIone.\n\nMore yet come, one by one: the air around them\nLooks radiant as the air around a star.\nFirst Spirit.\n\nOn a battle-trumpet's blast\nI fled hither, fast, fast, fast, [1.695]\n'Mid the darkness upward cast.\nFrom the dust of creeds outworn,\nFrom the tyrant's banner torn,\nGathering 'round me, onward borne,\nThere was mingled many a cry — [1.700]\nFreedom! Hope! Death! Victory!\nTill they faded through the sky;\nAnd one sound, above, around,\nOne sound beneath, around, above,\nWas moving; 'twas the soul of Love; [1.705]\n'Twas the hope, the prophecy,\nWhich begins and ends in thee.\nSecond Spirit.\n\nA rainbow's arch stood on the sea,\nWhich rocked beneath, immovably;\nAnd the triumphant storm did flee, [1.710]\nLike a conqueror, swift and proud,\nBetween, with many a captive cloud,\nA shapeless, dark and rapid crowd,\nEach by lightning riven in half:\nI heard the thunder hoarsely laugh: [1.715]\nMighty fleets were strewn like chaff\nAnd spread beneath a hell of death\nO'er the white waters. I alit\nOn a great ship lightning-split,\nAnd speeded hither on the sigh [1.720]\nOf one who gave an enemy\nHis plank, then plunged aside to die.\nThird Spirit.\n\nI sate beside a sage's bed,\nAnd the lamp was burning red\nNear the book where he had fed, [1.725]\nWhen a Dream with plumes of flame,\nTo his pillow hovering came,\nAnd I knew it was the same\nWhich had kindled long ago\nPity, eloquence, and woe; [1.730]\nAnd the world awhile below\nWore the shade, its lustre made.\nIt has borne me here as fleet\nAs Desire's lightning feet:\nI must ride it back ere morrow, [1.735]\nOr the sage will wake in sorrow.\nFourth Spirit.\n\nOn a poet's lips I slept\nDreaming like a love-adept\nIn the sound his breathing kept;\nNor seeks nor finds he mortal blisses, [1.740]\nBut feeds on the aëreal kisses\nOf shapes that haunt thought's wildernesses.\nHe will watch from dawn to gloom\nThe lake-reflected sun illume\nThe yellow bees in the ivy-bloom, [1.745]\nNor heed nor see, what things they be;\nBut from these create he can\nForms more real than living man,\nNurslings of immortality!\nOne of these awakened me, [1.750]\nAnd I sped to succour thee.\nIone.\n\nBehold'st thou not two shapes from the east and west\nCome, as two doves to one belovèd nest,\nTwin nurslings of the all-sustaining air\nOn swift still wings glide down the atmosphere? [1.755]\nAnd, hark! their sweet, sad voices! 'tis despair\nMingled with love and then dissolved in sound.\nPanthea.\n\nCanst thou speak, sister? all my words are drowned.\nIone.\n\nTheir beauty gives me voice. See how they float\nOn their sustaining wings of skiey grain, [1.760]\nOrange and azure deepening into gold:\nTheir soft smiles light the air like a star's fire.\nChorus of Spirits.\n\nHast thou beheld the form of Love?\nFifth Spirit.\n\nAs over wide dominions\nI sped, like some swift cloud that wings the wide air's wildernesses,\nThat planet-crested shape swept by on lightning-braided pinions, [1.765]\nScattering the liquid joy of life from his ambrosial tresses:\nHis footsteps paved the world with light; but as I passed 'twas fading,\nAnd hollow Ruin yawned behind: great sages bound in madness,\nAnd headless patriots, and pale youths who perished, unupbraiding,\nGleamed in the night. I wandered o'er, till thou, O King of sadness, [1.770]\nTurned by thy smile the worst I saw to recollected gladness.\nSixth Spirit.\n\nAh, sister! Desolation is a delicate thing:\nIt walks not on the earth, it floats not on the air,\nBut treads with lulling footstep, and fans with silent wing\nThe tender hopes which in their hearts the best and gentlest bear; [1.775]\nWho, soothed to false repose by the fanning plumes above\nAnd the music-stirring motion of its soft and busy feet,\nDream visions of aëreal joy, and call the monster, Love,\nAnd wake, and find the shadow Pain, as he whom now we greet.\nChorus.\n\nThough Ruin now Love's shadow be, [1.780]\nFollowing him, destroyingly,\nOn Death's white and wingèd steed,\nWhich the fleetest cannot flee,\nTrampling down both flower and weed,\nMan and beast, and foul and fair, [1.785]\nLike a tempest through the air;\nThou shalt quell this horseman grim,\nWoundless though in heart or limb.\nPrometheus.\n\nSpirits! how know ye this shall be?\nChorus.\n\nIn the atmosphere we breathe, [1.790]\nAs buds grow red when the snow-storms flee,\nFrom Spring gathering up beneath,\nWhose mild winds shake the elder brake,\nAnd the wandering herdsmen know\nThat the white-thorn soon will blow: [1.795]\nWisdom, Justice, Love, and Peace,\nWhen they struggle to increase,\nAre to us as soft winds be\nTo shepherd boys, the prophecy\nWhich begins and ends in thee. [1.800]\nIone.\n\nWhere are the Spirits fled?\nPanthea.\n\nOnly a sense\nRemains of them, like the omnipotence\nOf music, when the inspired voice and lute\nLanguish, ere yet the responses are mute,\nWhich through the deep and labyrinthine soul, [1.805]\nLike echoes through long caverns, wind and roll.\nPrometheus.\n\nHow fair these airborn shapes! and yet I feel\nMost vain all hope but love; and thou art far,\nAsia! who, when my being overflowed,\nWert like a golden chalice to bright wine [1.810]\nWhich else had sunk into the thirsty dust.\nAll things are still: alas! how heavily\nThis quiet morning weighs upon my heart;\nThough I should dream I could even sleep with grief\nIf slumber were denied not. I would fain [1.815]\nBe what it is my destiny to be,\nThe saviour and the strength of suffering man,\nOr sink into the original gulf of things:\nThere is no agony, and no solace left;\nEarth can console, Heaven can torment no more. [1.820]\nPanthea.\n\nHast thou forgotten one who watches thee\nThe cold dark night, and never sleeps but when\nThe shadow of thy spirit falls on her?\nPrometheus.\n\nI said all hope was vain but love: thou lovest.\nPanthea.\n\nDeeply in truth; but the eastern star looks white, [1.825]\nAnd Asia waits in that far Indian vale,\nThe scene of her sad exile; rugged once\nAnd desolate and frozen, like this ravine;\nBut now invested with fair flowers and herbs,\nAnd haunted by sweet airs and sounds, which flow [1.830]\nAmong the woods and waters, from the aether\nOf her transforming presence, which would fade\nIf it were mingled not with thine. Farewell!\nEND OF THE FIRST ACT.\n","cover":"","link":"prometheus-unbound.html","preview":"\u003cp\u003eMy very first meet with P.B.Shelley poets. Who ever loved not love at first sight?\u003c/p\u003e\n","title":"Prometheus Unbound"},{"content":"\n# 第三版GNU 通用公共授权（简体中文翻译版）\n\n## 声明！\nThis is an unofficial translation of the GNU General Public License into simplified Chinese. It was not published by the Free Software Foundation, and does not legally state the distribution terms for software that uses the GNU GPL-only [the original English text of the GNU GPL](http://www.gnu.org/licenses/gpl.html) does that. However, we hope that this translation will help Chinese speakers understand the GNU GPL better.\n\n这是一份GNU通用公共授权的非官方简体中文翻译。它并非由自由软件基金会发布，也不是使用GNU通用公共授权的软件的法定发布条款——只有[GNU用公共授权的英文原版](http://www.gnu.org/licenses/gpl.html)具有这样的效力。然而，我们希望这份翻译能够帮助中文读者更好的理解GNU通用公共授权。\n\n# 通用公共授权\n\n## 第三版 2007年6月29日\n\n版权所有（C）2007 Free Software Foundation, Inc. (http://fsf.org)\n\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\n允许所有人复制和发布本授权文件的完整版本\n\n但不允许对它进行任何修改\n\n## 导言\n\nGNU通用公共授权是一份针对软件和其他种类作品的自由，公共授权文件。\n\n大多数软件授权申明被设计为剥夺您共享和修改软件的自由。相反地，GNU通用公共授权力图保护您分享和修改自由软件地自由——以确保软件对所有使用者都是自由的。我们，自由软件基金会，对我们的大多数软件使用GNU通用公共授权；本授权同样适用于任何其作者以这种方式发布的软件。您也可以让您的软件使用本授权。\n\n当我们谈论自由软件时，我们指的是行为的自由，而价格免费。GNU通用公共授权被设计为确保您拥有发布自由软件副本(以及为此收费，如果您希望的话)的自由,确保您能收到源代码或者在您需要时能获取源代码，确保您能修改软件或者将它的一部分用于新的自由软件，并且确保您知道您能做这些事情。\n\n为了保护您的权利，我们需要做出要求，禁止任何人否认您的这些权利或者要求您放弃这些权利。因此，如果您发布此软件的副本或者修改它，这些要求就成为您的责任。\n例如，如果您发布自由软件的副本，无论以免费还是以收费的模式，您都必须把您获得的自由同样的给予副本的接收者。您必须确保他们也能收到或者得到源代码。而且您必须向他们展示这些条款，以使他们知道自己享有这样的权利。\n\n使用GNU通用公共授权的开发者通过两项措施来保护您的权利：（1）声明软件的版权；（2）向您提供本授权文件以给您复制，发布并且/或者修改软件的法律许可。\n\n为了保护软件开发者和作者，通用公共授权明确阐释自由软件没有任何担保责任。如用户和软件作者所希望的，通用公共授权要求软件被修改过的版本必须明确标示，从而避免它们的问题被错误地归咎于先前的版本。\n\n某些设备被设计成拒绝用户安装或运行其内部软件的修改版本，尽管制造商可以安装和运行它们。这从根本上违背了通用公共授权保护用户能修改软件的自由的宗旨。如此滥用授权的系统模式出现在了最让人无法接收的个人用户产品领域。因此，我们设计了这个版本的通用公共授权来禁止那些产品的侵权行为。如果此类问题在其他领域大量出现，我们准备好了在将来的通用公共授权版本里扩展这项规定，以保护用户的自由。\n\n最后，每个程序都经常受到软件专利的威胁。政府不应该允许专利权限制通用计算机软件的发展和使用，但是在他们确实允许这种事情的地区，我们希望避免应用于自由软件的专利权使该软件有效私有的危险。为了阻止这样的事情的发生，通用公共授权确保没有人能够使用专利权使得自由软件非自由化。\n\n以下是复制，发布和修改软件的详细条款和条件。\n\n## 条款和条件\n\n### 0.定义\n\n“本授权”指GNU通用公共授权第三版\n\n“版权”一词同样指适用于其他产品如半导体防护罩等的保护版权的法律。\n\n“本程序”指任何在本授权下发布的受版权保护的作品。被授权人称为“您”。“被授权人”和“版权接受者”可以是个人或组织。\n\n“修改”作品是指从软件中拷贝或者做出全部或一丁点儿的修改，这不同于逐字逐句的复制，是需要版权许可的。修改成果被称为先前作品的“修改版本”或者“基于”先前作品的软件。\n\n“覆盖程序”指没有被修改过的程序或基于这样的程序的程序。\n\n“传播”程序指使用该程序做任何如果没有许可就会在适用的版权法下直接或间接侵权的事情，除了在电脑上执行程序或者是做出您不与人共享的修改。传播包括复制，分发（无论修改与否），向公众共享，以及在某些国家的其他行为。\n\n“转让”作品指任何让其他组织制作或者接受软件副本的传播行为，但不包括转让许可证授权。仅仅通过电脑网络和一个用户交流，而没有发送程序拷贝的行为不是转让。\n一个显示“适当的法律通告”的交互的用户接口应包括这样一个方便而显著的可视部件，它具有以下功能：（1）显示一个合适的版权通告；（2）告诉用户对本软件没有任何担保责任（除非有担保明确告知），受权人可以在本授权下转让本软件，以及如果阅读本授权协议的副本。如果该接口显示了一个用户命令或选项列表，比如菜单，该列表中的选项需要符合上述规范。\n\n### 1．源代码\n\n“源代码”指修改程序常用的形式。“目标代码”指程序的任何非源代码形式。\n\n“标准接口”有两种含义,一是由标准组织分支定义的官方标准；二是针某种语言专门定义的众多接口中，在该语言的开发者中广为使用的那种接口。\n\n可执行程序的“系统库”不是指整个程序，而是指任何包含于主要部件但不属于该部件的部分，并且只是为了使能该部件而开发，或者为了实现某些已有公开源代码彻的标准接口。“主要部件”在这里指的是执行程序的特定操作系统（如果有的话）的主要的关键部件（内核，窗口系统等），或者生成该可执行程序时使用的编译器，或者运行该程序的目标代码解释器。\n\n目标代码中的程序“对应的源代码”指所有生成，安装，（对可执行程序而言）运行该目标代码和修改该程序所需要的源代码，包括控制这些行为的脚本。但是，它不包括程序需要的系统库，通用目的的工具，以及程序中包含的不需修改就能使用的普遍可用的自由软件。例如，对应的源代码包括与程序的源文件相关的接口定义文件，以及共享库中的源代码和该程序设计需要以如通过频繁的数据交互或者这些子程序和该程序其他部分之间的控制流等方式获得的动态链接子程序。\n\n对应的源代码不需要包含任何拥护可以从这些资源的其他部分自动再生的资源。\n源代码形式的对应的源代码定义同上。\n\n### 2．基本的许可\n\n在本授权协议下授予的所有权利都是授予的本软件的版权，并且只要所述的条件都满足了，这些授权是不能收回的。本授权明确的确认您可以不受任何限制地运行本软件的未修改版本。运行一个本授权覆盖的程序的结果只有在该结果的内容公开，并且构成一个覆盖程序的时候才由本授权包含。\n\n只要您的授权仍然有效，您可以无条件地制作，运行和传播您不愿意转让的覆盖程序。您可以向别人转让程序，以要求他们为您做出专门的修改或者向您提供运行这些程序的简易设备，只要您遵守本授权中关于转让您不具有版权的资料的条款。那些为您制作或运行覆盖程序的人作为您的代表也必须在您的指示和控制下做到这些，请禁止他们在他们和您的关系之外制作任何您拥有版权的程序的副本。\n\n当下述条件满足的时候，在任何其他情况下的转让都是允许的。\n\n转让许可证授权是不允许的，第10节让它变的没有必要了。\n\n### 3．保护用户的合法权利不受反诈骗法起诉\n\n没有覆盖程序会在任何适用法律下被认定为有效的技术诈骗的一部分，即使该法律满足了1996年通过的WIPO版权条约第11条中所述的责任，或者是禁止或限制这种手段的欺骗的类似法律。\n当您转让一个覆盖程序时，您将放弃任何禁止技术欺诈的法律力量，甚至在本授权关于覆盖程序的条款下行使合法权利也可能受到欺诈起诉，而您将通过放弃任何限制操作或修改本软件的想法来加强您的和第三方的防止用户提出技术欺骗起诉的权利。\n\n### 4．转让完整副本\n你可以通过任何媒介转让本软件源代码的未修改的完整副本，只要您显著而适当地在每个副本上发布一个合适的版权通告；保持完整所有叙述本授权和任何按照第7节加入的非许可的条款；保持完整所有的免责申明；并随程序给所有的接受者一分本授权。\n\n您可以为您的副本收取任何价格的费用或者免费，你也可以提供技术支持或者责任保护来收取费用。\n\n### 5．转让修改过的源码版本\n\n您可以在第4节的条款下以源码形式转让一个基于本程序的软件，或者从本程序中制作新软件进行的修改，只要您同时满足所有以下条件：\n\n-   a）制作的软件必须包含明确的通告说明您修改了它，并给出响应的修改日期。\n-   b）制作的软件必须包含明确的通告，指出它发布于在本授权下以及任何按照第7节加入的条件。这条要求修改了第4节的“保持所有通知完整”的要求。\n-   c）您必须把整个软件作为一个整体向任何获取副本的人按照本授权协议授权。本授权因此会和任何按照第7节加入的条款一起，对整个软件及其所有部分，无论是以什么形式打包的，起法律效力。\n-   d）如果您制作的软件包含交互的用户接口，每个用户接口都必须显示适当的法律通告；但是，如果本程序包含没有显示适当的法律通告的交互接口，您的软件没有必要修改他们让他们显示。\n\n如果一个覆盖程序和其他本身不是该程序的扩展的程序的结合和相应产生的版权没有用来限制使用或给予用户大于个人作品允许的合法权利的时候，这样的程序就被称为“聚集体”。在聚集体中包含覆盖程序并不会造成本授权应用于该聚集体的其他部分。\n\n### 6．转让非源码形式的副本\n\n您可以在第4,5节条款下以目标代码形式转让程序，只要您同时在本授权条款下转让机器可读的对应的源码，以以下方式中的一种：\n\n-   a）在物理产品（包括一个物理的发布媒介）中或作为其一部分，并在通常用于软件交换的耐用的物理媒介中发布对应的源码。\n-   b）在物理产品（包括一个物理的发布媒介）中或作为其一部分，并附上有效期至少3年的与您提供的配件或该产品模型客户服务等长时间的书面承诺，（1）要么在通常用于软件交换的耐用物理媒介中，以不高于您执行这种源码的转让所花费的合理费用的价格，给每一个执行该目标代码的人一份该产品中本授权协议所覆盖的所有软件对应的代码；（2）要么以网络服务器免费提供这些对应源代码的访问。\n-   c）单独地转让目标代码的副本，并附上一份提供对应源代码的书面承诺。这种行为只允许偶尔发生并不能盈利，而且在您收到的目标代码也有这样的承诺的时候，这需要与第6节b小节一致。\n-   d）在制定的地点（免费或收费）提供转让的目标代码的访问并在同样的地点以不增加价格的方式提供对应源代码的同样的访问权。您不需要要求接收者在复制目标代码的时候一道复制对应的源码。如果复制目标代码的地点是网络服务器，对应的源代码可以在另外一个支持相同复制功能的服务器上（由您或者第三方操作），只要您在目标代码旁边明确指出在哪里可以找到对应的源代码。无论什么样的服务器提供这些对应的源代码，您都有义务保证它能满足所有需求，从而满足本条规定。\n-   e）用点对点传输转让目标代码，您需要按照第6节d小节的条款告知别的节点目标代码和对应的源代码在哪里向大众免费提供。\n\n目标代码中可分离的部分，其源代码作为系统函数库不包含在对应的源代码中，不需要包含在转让目标代码的行为中。\n\n“用户产品”指（1）“消费品”，即通常用于个人，家庭或家居目的的有形个人财产；或者（2）任何为公司设计和销售却卖给了个人的东西。在判断一个产品是否消费品时，有疑点的案例将以有利于覆盖面的结果加以判断。对特定用户接收到的特定产品，“正常使用”指该类产品的典型的或通常的使用，无论该用户的特殊情况或者该用户使用该产品的实际的或产品要求的使用方式如何。一个产品是否是消费品与该产品是否具有实质的经济上的工业的或非消费品的用处无关，除非该用处是此类产品唯一的重要使用模式。\n\n用户产品的“安装信息”指从对应源码的修改版本安装和运行该用户产品中包含的覆盖程序的修改版本所需要的任何方法，过程，授权密钥和其他信息。这些信息必须足以保证修改后的目标代码不会仅仅因为修改过而不能继续运行。\n\n如果您在本节条款下在用户产品中，或随同，或专门为了其中的使用，转让目标代码程序，而在转让过程中用户产品的所有权和使用权都永久地或在一定时期内（无论此项转让地特点如何）传递给了接收者，本节所述的对应的源代码必须包含在安装信息中。但是如果您或者任何第三方组织都没有保留在用户产品上安装修改过的目标代码的能力（比如程序被安装在了ROM上），那么这项要求不会生效。\n\n提供安装信息的要求并没有要求为接收者修改或安装过的程序，或者该程序修改或安装的用户产品，继续提供支持服务，担保责任和升级服务。当修改本身实际上相反地影响了网络的运行，或者违反了网络通信的规则和协议时，网络访问可以被拒绝。\n根据本节转让的对应源代码和提供的安装信息必须以公共的文件格式发布（并附加一个该类型文档的实现方法以源码形式向公众共享），解压缩，阅读和复制这些信息不需要任何密码或密钥。\n\n### 7．附加条款\n\n“附加许可”是通过允许一些本授权的特例来补充本授权的条款。对整个程序都生效的附加许可将被认为是本授权的内容，只要它们在使用法律下合法。如果附加许可只是对本程序的一部分生效，那么该部分可以在那些许可下独立使用，但整个程序是在本授权管理下，无论附加许可如何。\n\n当您转让覆盖程序的副本时，您可以选择删除该副本或其部分的任何附加许可。（当您修改程序时，附加许可可能要求在某些情况下将自身删除）。您可以把附加许可放在材料上，加入到您拥有或能授予版权许可的覆盖程序中。\n\n尽管本授权在别处有提供，对于您加入到程序中的材料，您可以（如果您由该材料的版权所有者授权的话）用以下条款补充本授权：\n\n-   a. 拒绝担保责任或与本授权第15和16小节条款不同的方式限制责任；或者\n-   b. 要求保留特定的合理法律通告，或者该材料中或包含适当法律通告的程序中的作者贡献；或者\n-   c. 禁止误传该材料的来源，或者要求该材料的修改版本以合理的方式标志为与原版本不同的版本；或者\n-   d. 限制以宣传为目的的使用该材料作者或授权人的姓名；或者\n-   e. 降低授权级别以在商标法下使用一些商品名称，商标或服务标记；或者\n-   f. 要求任何转让该材料（或者修改它）的人用对接收者的责任假设合同对授权人和材料作者进行保护，避免任何这样的假设合同直接造成授权人和作者的责任。\n\n所有其他不许可的附加条款都被认为是第10节中的“进一步的约束”。如果您收到的程序或者其部分，声称自己由本授权管理，并补充了进一步约束，您可以删除这些约束。如果一个授权文件包含进一步约束，但是允许再次授权或者在本授权下转让，只要这样的进一步的约束在这样的再次授权或转让中无法保留下来，您就可以在覆盖程序中加入该授权文件条款管理下的材料。\n\n如果您依据本小节向覆盖程序添加条款,您必须在相关的源码文件中加入一个应用与那些文件的附加条款的声明或者指明在哪里可以找到这些条款的通告。\n\n附加的条款，无论是许可的还是非许可条款，都可以写在一个单独的书面授权中，或者申明为例外情况；这两种方法都可以实现上述要求。\n\n### 8．终止授权\n\n您只有在本授权的明确授权下才能传播或修改覆盖程序。任何其它的传播或修改覆盖程序的尝试都是非法的，并将自动终止您在本授权下获取的权利（包括依据第11节第三段条款授予的任何专利授权）。\n\n然而，如果您停止违反本授权，那么您从某个特定版权所有者处获取的授权许可能够以一下方式回复：（a）您可以暂时地拥有授权，直到版权所有者明确地终止您的授权；（b）如果在您停止违反本授权后的60天内，版权所有者没有以某种合理的方式告知您的违背行为，那么您可以永久地获取授权。\n\n进一步地，如果某个版权所有者以某种合理的方式告知您违反本授权的行为，而这是您第一次收到来自该版权所有者的违反本授权的通知（对任何软件），并且在收到通知后30天内修正了违反行为，那么您从某个版权所有者处获取的授权将永久地恢复。\n\n当您的授权在本节条款下被终止时，那些从您这里获取授权的组织只要保持不违反本授权协议，其授权就不会被终止。依据第10节条款，您只有在授权被版权所有者恢复了之后才有资格获取该类材料的授权。\n\n### 9．获取副本不需要接受本授权\n\n仅仅是接受或运行本程序副本的话，您不需要接受本授权协议。仅仅是因为点对点传输获取副本引起传播行为的话，您也不需要接受本授权协议。然后，除了本授权外，任何协议都不能授予您传播或修改覆盖程序的许可。因此，如果您修改或者传播了本程序的副本，那么您就默认为接受了本授权。\n\n### 10．下游接收者的自动授权\n\n每次您转让覆盖程序，接收者都自动获得一份来自原授权人的依照本授权协议的运行，修改和传播该程序的授权。您不需要为强化本授权的第三方的要求负责。\n\n“实体事务”指转移一个组织的控制权或全部资产，或者拆分组织，或者合并组织的事务。如果覆盖程序的传播是实体事务造成的，该事务中每一个接收本程序副本的组织都将获取一份其前身拥有的或者能依据前面的条款提供的任何授权，以及从前身获取程序对应的源代码的权利，如果前身拥有或以合理的努力能够获取这些源代码的话。\n\n您不可以对从本授权获取或确认的权利的执行强加任何约束。比如，您不可以要求授权费用，保密协议或对从本授权获取的权利的执行收取任何费用。您不可以发起诉讼（包括联合诉讼和反诉）声称由于制作，使用，销售，批发，或者进口本程序或其任何一部分而侵犯了专利权。\n\n### 11．专利权\n\n“贡献者”是在本授权下授予本程序或者本程序所基于的程序的使用权的版权所有者。这样的程序被成为贡献者的“贡献版本”。\n\n一个贡献者的“实质的专利申明”是该贡献者所占有和控制的全部专利，无论已经获得的还是在将来获得的，那些可能受到某种方式侵犯的专利权。本授权允许制造，使用和销售其贡献版本，但不包括那些只会由于对贡献版本进一步的修改而受到侵犯的专利的申明。为此，“控制”一词包括以同本授权要求一致的方式给予分享授权的权利。\n\n每个贡献者在该贡献者的实质的专利申明下授予您非独家的，全世界的，不需保密的专利授权，允许您制作，使用，销售，批发，进口以及运行，修改和传播其贡献版本内容。\n\n在以下三个自然段中，“专利授权”指任何形式表达的同意不强制执行专利权。向一个组织授予专利授权指做出这样的不向该组织提出强制执行专利权的承诺。\n\n如果您在自己清楚的情况下依靠一份专利授权转让覆盖程序，而这个程序的对应的源代码并不能在本授权条款下通过网络服务器或其他有效途径免费地向公众提供访问，您必须做到：（1）使对应的源代码按照上述方法可访问；或者（2）放弃这个程序的专利授权；或者（3）以某种与本授权要求一致的方法使该专利授权延伸到下游的接收者。“在自己清楚的情况下”指您明确地知道在某个国家您的传播覆盖程序的行为，或者接收者使用覆盖程序的行为，会由于该专利授权而侵犯一个或多个在该国可确认的专利权，而这些专利权您有足够的理由相信它们是有效的。\n\n在依照或者涉及某一次事务或安排时，如果您通过获取转让或传播覆盖程序的传输版本，并给予接收该覆盖程序的某些组织专利授权，允许他们使用，传播，修改或者转让该覆盖程序的特殊版本，那么您赋予这些组织的专利授权将自动延伸到所有接收到该覆盖程序及给予该程序的程序的人。\n\n一份专利授权是“有差别的”，如果它没有在自身所覆盖的范围内包含禁止运行，或者设置了不要执行一个或多个本授权下获取的权利的条件。以下情况，您不可以转让一个覆盖程序：如果您与软件发布行业的第三方组织有协议，而这协议要求您为转让该程序向该组织付费，同时该组织在你们的协议中赋予任何从您那里获得覆盖软件的组织一份有差别的专利授权，要么（a）与您转让的副本相关的（或者从这些副本制作的副本）；要么（b）主要关于某个特定的产品或者包含该覆盖程序的编辑。如果您签署该协议或获得该专利授权的日期早于2007年3月28日，那么您不受本条款约束。\n\n本授权的任何部分不会被解释为拒绝或者限制任何暗含的授权或其他在适用专利权法下保护您的专利不受侵犯的措施。\n\n### 12．不要放弃别人的自由\n\n如果您遇到了与本授权向矛盾的情况（无论是法庭判决，合同或者其他情况），它们不能使您免去本授权的要求。如果您不能同时按照本授权中的义务和其他相关义务来转让本程序或其他覆盖程序，那么您将不能转让它们。比如，如果您接受了要求您向从您这里或许本程序的人要求保密的条款，您唯一能够同时满足本授权和那些条款的方法是完全不要转让本程序。\n\n### 13．和GNU Affero通用公共授权一起使用\n\n尽管本协议有其他防备条款，您有权把任何覆盖程序和基于第三版GNU Affero通用公共授权的程序链接起来，并且转让该联合程序。本授权的条款仍然对您的覆盖程序有效但不会应用于它链接到的程序上，后者仍然会保持受GNU Affero通用公共授权控制。\n\n### 14．本授权的修订版\n\n自由软件基金会有时候可能会发布GNU通用软件授权的修订版本和/或新版本。这样的新版本将会和现行版本保持精神上的一致性，但是可能会在细节上有所不同，以处理新的问题和情况。\n每个版本都有一个单独的版本号。如果本程序指出了应用于本程序的一个特定的GNU通用公共授权版本号“以及后续版本”，您将拥有选择该版本或任何由自由软件基金会发布的后续版本中的条款和条件的权利。如果本程序没有指定特定的GNU通用公共授权版本号，那么您可以选择任何自由软件基金会已发布的版本。\n\n如果本程序指出某个代理可以决定将来的GNU通用公共授权是否可以应用于本程序，那么该代理的接受任何版本的公开称述都是您选择该版本应用于本程序的永久认可。\n\n后续的授权版本可能会赋予您额外的或者不同的许可。但是，您对后续版本的选择不会对任何作者和版权所有者强加任何义务。\n\n### 15．免责申明\n\n在适用法律许可下，本授权不对本程序承担任何担保责任。除非是书面申明，否则版权所有者和/或提供本程序的第三方组织，“照旧”不承担任何形式的担保责任，无论是承诺的还是暗含的，包括但不限于就适售性和为某个特殊目的的适用性的默认担保责任。有关本程序质量与效能的全部风险均由您承担。如本程序被证明有瑕疵，您应承担所有必要的服务、修复或更正的费用。\n\n### 16．责任范围\n\n除非受适用法律要求或者书面同意，任何版权所有者，或任何依前述方式修改和/或发布本程序者，对于您因为使用或不能使用本程序所造成的一般性、特殊性、意外性或间接性损失，不负任何责任（包括但不限于，资料损失，资料执行不精确，或应由您或第三人承担的损失，或本程序无法与其他程序运作等），即便该版权所有者或其他组织已经被告知程序有此类损失的可能性也是如此。\n\n### 17．第15和16节的解释\n\n如果上述免责申明和责任范围不能按照地方法律条款获得法律效力，复审法庭应该应用最接近于完全放弃与本程序相关的民事责任的法律，除非随同本程序的责任担保是收费的。\n\n**-条款和条件结束-**\n\n## 如何在您的新程序中应用这些条款？\n\n如果您开发了一个新程序，并且希望能够让它尽可能地被大众使用，达成此目的的最好方式就是让它成为自由软件。任何人都能够依据这些条款对该软件再次发布和修改。\n为了做到这一点，请将以下声明附加到程序上。最安全的作法，是将声明放在每份源码挡案的起始处，以有效传达无担保责任的讯息；且每份挡案至少应有「著作权」列以及本份声明全文位置的提示。\n\n\u003e \u003c用一行描述程序的名称与其用途简述\u003e  \n\u003e 著作权所有(C) 〈年份〉〈作者姓名〉  \n\u003e 本程序为自由软件；您可依据自由软件基金会所发表的GNU通用公共授权条款，对本程序再次发布和/或修改；无论您依据的是本授权的第三版，或（您自行选择的）任一日后发行的版本。  \n\u003e 本程序是基于使用目的而加以发布，然而不负任何担保责任；亦无对适售性或特定目的适用性所为的默示性担保。详情请参照GNU通用公共授权。  \n\u003e 您应已收到附随于本程序的GNU通用公共授权的副本；如果没有，请写信至自由软件基金会：59 Temple Place -Suite 330, Boston, Ma 02111-1307, USA。  \n\n同时附上如何以电子及书面信件与您联系的资料。\n\n如果程序进行终端交互方式运作，请在交互式模式开始时，输出以下提示：\n\n\u003e Gnomovision 第69版，著作权所有 (c) 年份 作者姓名  \n\u003e Gnomovision不负担保责任，欲知详情请键入'show w'。这是一个自由软件，欢迎您在特定条件下再发布本程序；欲知详情请键入'show c'。  \n\n所假设的指令'show w'与'show c'应显示通用公共授权的相对应条款。当然，您可以使用'show w'与'show c'以外的指令名称；对于图形用户界面，您可以用“关于”项代实现此功能。\n\n如有需要，您亦应取得您的雇主（若您的工作为程序设计师）或学校就本程序所签署的“版权放弃承诺书”。其范例如下，您只要修改姓名即可：\n\n\u003e Yoyodyne公司，茲此放弃James Hacker所写之'Gnomovision'程序（该程序已通过编译）  \n\u003e 所有的版权权益。  \n\u003e \u003c公司签章\u003e，1989年四月一日  \n\u003e Ty Coon公司,副总裁  \n\n关于如何应用和遵守GNU通用公共授权的更多信息，参见http://www.gnu.org/licenses\n\nGNU通用公共授权并不允许您将本程序并入专有程序中。若您的程序是一个子程序函数库时，您可能认为允许私有的应用程序链接该函数库会更有帮助。若这是您所想做的，请使用GNU松弛通用公共授权代替本授权。\n\n---\n原文网站：http://www.gnu.org/licenses/gpl.html\n\n翻译：[bergwolf](about.me.html)\n\nThis work is licensed under the Creative Commons Attribution-NoDerivs License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nd/2.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.\n\n本译文以Creative Commons Attribution-NoDerivs授权发布。如需获取该授权细则，请访问http://creativecommons.org/licenses/by-nd/2.0/ 或者寄索取信函到Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.\n","cover":"","link":"gplv3-zh-cn.html","preview":"\u003cp\u003e本译文以Creative Commons Attribution-NoDerivs授权发布。如需获取该授权细则，请访问\u003ca href=\"http://creativecommons.org/licenses/by-nd/2.0/\"\u003ehttp://creativecommons.org/licenses/by-nd/2.0/\u003c/a\u003e 或者寄索取信函到Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.\u003c/p\u003e\n","title":"GPLv3简体中文翻译"},{"content":"\n一直不知道该从哪里下笔，就从入学写起吧。\n\n高考完的那个暑假，可能是我懂事以来最无忧无虑的一段日子。虽然没有考上北大之类的名校，我的分数还是让我在当地小有名气——市应届理科状元，英语单科全省第二，这名份让我有些飘飘然且无所适从。于是一个暑假的无所事事，每天和同学吃喝玩乐，不亦乐乎。甚至我一直喜欢的女孩劈腿被我发现也没能给我沉重打击（或许我内心并没有我自以为的那么喜欢她也是造成这种结局的原因）。而我却没有回想过我考砸理科综合的原因——太过相信旁人的评价和推崇而迷失了自己的定位——我多么希望自己当时能明白这点，这样在后来的道路上我也能更清醒些，然而当时的我在虚幻的名义面前只能用年少无知来形容。\n\n人无远虑，必有近忧，我懂得这个道理却是经年之后了。\n\n终于能够离开四川盆地，出来见识一下外面的世界，想到这点我还是很兴奋的，以至于到了报名时也浑浑噩噩，所有事情都是北京一个阿姨代办的。跳下学校送我们到昌平的巴士，看到来接我们的学长学姐们的时候，我忍不住大叫“计算机”，着实把他们吓了一跳。接我的是一个眉山市的学姐，顿时有种世界真小的感慨。到宿舍时只有两个同学比我先到，即猴和苏苏。猴是让他爸爸和妹妹送来的，看见他们一家人忙碌的样子，我开始欣慰没有让我爸来送我确实是一个好主意。\n\n我这人向来大冒，对环境的感觉能力差，初到北京的兴奋一直持续了大约一个月，其间甚至觉得食堂的饭菜都比家里的好吃（我发誓这是一种错觉）。后来和同学聊天才知道，很多人开学都因为想家哭了，而我一直到一个月之后才意识到，我将要长时间的离开家人了。于是思乡之情如滔滔流水，让我再次浑浑噩噩了半个月。刚进学校印象最深的是每晚的高中同学短信会。可惜的是兴奋的我总是在和新同学卧谈，等我开始想家想找人倾诉的时候，短信会已经安静有一段时间了。\n\n入学篇到此结束，下次送上我静水流深般的大一生活。\n","cover":"","link":"my-college-entering.html","preview":"\u003cp\u003e没想到的是,这也是我的大学系列里的最后一篇\u003c/p\u003e\n","title":"我的大学－入学篇"},{"content":"\n# 如梦令-邮计情\n\n长剑邮子竞舞  \n嵌入一墙红幕  \n秋韵满院布  \n待到花红淡处  \n思独,思独  \n犹记情人如故\n\n![计忆邮心海报](images/计科红珍藏版.jpg)\n","cover":"","link":"题计忆邮心海报.html","preview":"\u003cp\u003e为03级计算机毕业海报题词一首\u003c/p\u003e\n","title":"题计忆邮心海报"},{"content":"\n人之将亡,其言也善;鸟之将死,其鸣也哀。\n\n本科的日子真的是过一天少一天,身边的朋友同学数月后也会各奔前程.逝去的日子就如逝去的人一样,在生命的长河中留下些许波澜,或多或少的影响我们以后要走的路.但无论如何,我不该忘记那些事,那些人。\n\n今天读到余秋雨的《三十年的重量》：**你们每天做的事中,有些立即就会后悔,有些却有穿越几十年的重量。**\n\n想起去年读过Mary Oliver的一首诗后写的,**I don't want to end up simply having visited BUPT。**\n\n故为此系列,是以梳理和纪念我即将失去的本科生活。\n","cover":"","link":"my-college-begins.html","preview":"\u003cp\u003eI don\u0026rsquo;t want to end up simply having visited BUPT.\u003c/p\u003e\n","title":"我的大学－开题篇"},{"content":"\n一个人在任何人都不爱的时候就可以爱上任何人。―― 题记\n\n在紧张和忙碌的生活中，生命渐渐逝去。人往往觉得自己在追寻什么，所以耗尽精力，在所不惜。\n\n其实这只是上帝和人开的一个小小的玩笑。生活的前面什么也没有，除了虚无。\n\n曾经发狂地爱过三毛，爱她的每一篇文字，和她流浪的撒哈拉。后来三毛死了，自杀。突然觉得自己一直是一个受骗者。三毛竟然如此脆弱。什么自由，什么独立，在死亡面前，一切都化为零。\n\n可是三毛仍深深地影响了我，以至整个中学时代，我想的最多的一件事就是流浪。曾经千百次设想过自己离家出走的情形，却没有一次实现多。因为我知道，我的离开会伤害很多我不忍伤害的人。所以宁愿一个人悲伤。\n\n遇上乔以前我一直以为自己是世界上最虚无的人。对世上的一切，我只是个旁观者，一切都与我无关。\n\n而第一眼看见乔，我便知道我错了。\n\n红色夹克，黑色粗布长裤，乌黑而略带松散的长发，皮肤略显粗糙，粮商翻起轻微的角质层，没有化妆。无疑，乔石我这个冬天见到的最特别的人。\n\n最让我羡慕的是她的职业――那把深红色吉他，流浪歌手，――这是我做梦都想扮演的角色。\n\n“送你首歌吧，”乔突然说，“想听什么？”\n\n“你喜欢的，或者你觉得是和我的。”我随口答道。\n\n“好吧。”乔调整一下吉他，然后闭上了眼睛。轻盈而破碎的歌声伴着优美的旋律从乔身上散发开来。是王菲的《蝴蝶》。\n\n*嘴唇还没张开来已经互相伤害*  \n*约会不曾定下来就不想期待*  \n*电话还没挂起来感情已经腐坏*  \n*恨不得你是一只蝴蝶来得快也去得快*  \n*给我一双手对你倚赖*  \n*给我一双眼看你离开*  \n*就像蝴蝶飞不过沧海没有谁忍心责怪*  \n*给我一刹那对你宠爱*  \n*给我一辈子送你离开*  \n*等不到天亮美梦就醒来*  \n*我们都自由自在*  \n\n*回忆还没变黑白已经置身事外*  \n*承诺不曾说出来关系已不再*  \n*眼泪还没掉下来已经忘了感慨*  \n*就像一碗热汤的关怀不可能随身携带*  \n*给我一双手对你倚赖*  \n*给我一双眼看你离开*  \n*就像蝴蝶飞不过沧海没有谁忍心责怪*  \n*给我一刹那对你宠爱*  \n*给我一辈子送你离开*  \n*等不到天亮美梦就醒来*  \n*我们都自由自在*  \n\n昏暗的阳光下，我似乎看到一种东西在眼前飞舞，明亮且灿烂。我努力伸出双手想住什么，可身体想被石化一般，再也动弹不得。\n\n回过神来时，乔已经唱完。突然有种想哭的感觉，虽然干涩的眼角已经多年没有泪水的浸润。 分明感到一种支离破碎的华丽，被乔，抑或王菲，演绎得淋漓尽致，让人连心痛都来不及。\n\n抬头看乔，她仍然沉浸在歌曲的忧伤中。双眼慢慢张开，乌黑的眸子里写满了空洞。\n\n“请你吃饭吧。”我说。乔看着我，似乎在等待解释。\n\n“为了你的歌。”我自信这个理由相当充分。\n\n“好。”乔证实了我的自信。\n\n我带她去了家普通的餐馆，几乎没有装修，人很少，灰暗的灯光下流淌着淡淡的异乡情调。我觉得只有这样的餐馆才配得上乔的性格。我回过头却只看到乔一脸的无所谓。――或许她早就料到我会带她来这种地方了吧，我想，又或许她真的一点也不在乎。\n\n我们在靠墙的一张桌坐下，老板过来，我点了几个小菜。然后我们聊了起来――当然，与其说聊，不如说我一个人演讲，因为乔一直一言不发，不过她在很认真地听着。\n\n我和乔说起王菲，说起流浪，说起我最欣赏的古代职业――吟游诗人，说起荷西，说起三毛，当然也包括我对三毛的不满。\n\n“其实她很勇敢，真的。”乔平静的说，“自杀需要的勇气，甚至远远超过活下去。或者便有希望，自杀却杀死所有希望。死亡即与一切告别。她很幸运，因为她终于放下。”\n\n我沉默了。我知道乔说的“放下”指的是什么。身边人的关爱常常压得人喘不过气来。这也是我期望流浪又无法离开的原因。\n\n然后一直沉默，两人静静地吃完了这顿饭。\n\n“我想我该走了。”乔站起来，开始往门口走。\n\n我起身去付了钱，然后跟出去。\n\n一路上乔都没有说话，我也没有。她走在前面，我跟着，两人保持一米左右的距离，却再没有了交流。\n\n道路两旁的树木早已褪去了全部枯叶，剩下光秃秃的树枝在微红的夕阳下颤抖。一阵风夹着纸片和灰尘吹向半空。\n\n我一直以为应该去北方流浪。那里有最凛冽的北风，和一眼望不到头的孤烟大漠。而眼前这南国的冬季却如此萧瑟，肃杀得让人震惊。\n\n我又一次端详了乔的背影，突然有种感觉，希望乔留下，或者带我走。可我没有说话，我没有勇气打破这死寂的沉默。\n\n乔滑了一下，我想去扶她但没赶上，所幸乔并没有滑倒。“我从小走路就老是滑倒，那会膝盖上总有伤，小脑发育不完全。”乔自嘲的说。\n\n“走路的时候别老想问题就不会滑倒了。”\n\n“我真的小脑发育不完全。”乔坚持她的观点。\n\n突然头脑中闪出一个念头，刚想开口，看见乔孤单的身影，又把话咽了回去。\n\n又是死一样的沉默。我一直跟着乔走，并没有说定送她到哪里，仿佛早就约好了分别的地方。\n\n那是一座残存的天桥，静静地立在那，把天空切成两块。“就到这里吧，不用再送了。”是乔的声音。我停住脚步，伫立着，没有说话，“一路顺风”，“珍重”之类只能是多余。\n\n于是我就那么静静地站着，和天桥一起，看着乔远去。乔的身影从地平线消失的刹那，有一种失去什么的刺痛。想起那个霎时的念头，我只是想对乔说，如果两个人牵着手一起走路，就不容易跌倒了。\n\n可是我没有，因为我不敢。\n\n我站在那，如染觉得眼前一黑，整个世界消失了。我开始往下坠，不停地坠落。我挥舞着双臂，抓不到任何可以依靠的东西。冥冥中耳边传来了乔和王菲的声音，“给我一双手，对你依赖，给我一双眼，看你离开，就像蝴蝶飞不过沧海，没有谁忍心责怪。”\n\n默默地告诉自己，乔应该去更远的地方，看陌生的风景。\n\n**因为我没有勇气，去改变乔的落寞。**  \n**因为我只是蝴蝶，永远飞不过沧海。**\n","cover":"","link":"三毛-蝴蝶-沧海.html","preview":"\u003cp\u003e一个人在任何人都不爱的时候就可以爱上任何人。\u003c/p\u003e\n","title":"三毛，蝴蝶，沧海"},{"content":"\n在中国，bard有个很诗意名字：吟游诗人。在十字军东征的日子里，bards和混杂在军人和百姓中，用自己的歌声记录着一切。他们不是历史的缔造者，却有着比缔造者更敏锐的眼光，看透这世上的一切善恶，把它们融入到自己的诗中，用最深情的歌声唱出来。bards不具有善恶，也不参与善恶，是完全的生活观察者，也因此享受着独特的自由，一种真正无拘无束的自由。\n","cover":"","link":"something-about-bard.html","preview":"\u003cp\u003eThe spirit of freedom,is the one thing bards hunt.\u003c/p\u003e\n","title":"Something About Bard"},{"content":"\nwe are far from nature? No, we are in it, so enjoy walking on the campus, watching the sunny spots on greenery, the leaves dancing while whispering, and birds chirpping. We are in nature. nature is more than torrents and floods, straths and highlands, nature is also a ray of sunshine, a blade of grass and even the tiny ant in the grass is nature.\n","cover":"","link":"what-is-nature.html","preview":"\u003cp\u003eI like this description of nature :)\u003c/p\u003e\n","title":"What Is Nature?"}]